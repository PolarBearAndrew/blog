{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/hueman/source/scrollLoading/style.css","path":"scrollLoading/style.css","modified":0},{"_id":"themes/hueman/source/scrollLoading/main.js","path":"scrollLoading/main.js","modified":0},{"_id":"themes/hueman/source/scrollLoading/jquery.scrollLoading.js","path":"scrollLoading/jquery.scrollLoading.js","modified":0},{"_id":"themes/hueman/source/scrollLoading/images/preloader@2x.gif","path":"scrollLoading/images/preloader@2x.gif","modified":0},{"_id":"themes/hueman/source/scrollLoading/images/preloader.gif","path":"scrollLoading/images/preloader.gif","modified":0},{"_id":"themes/hueman/source/js/script.js","path":"js/script.js","modified":0},{"_id":"themes/hueman/source/js/html-patch.js","path":"js/html-patch.js","modified":0},{"_id":"themes/hueman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/hueman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/hueman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/hueman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/hueman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/hueman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/hueman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/hueman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/hueman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/hueman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/hueman/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/hueman/source/css/images/thumb-default.png","path":"css/images/thumb-default.png","modified":0},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":0},{"_id":"themes/hueman/source/css/images/s-left.png","path":"css/images/s-left.png","modified":0},{"_id":"themes/hueman/source/css/images/opacity-10.png","path":"css/images/opacity-10.png","modified":0},{"_id":"themes/hueman/source/css/images/logo-header.png","path":"css/images/logo-header.png","modified":0},{"_id":"themes/hueman/source/css/images/logo-header.bk.png","path":"css/images/logo-header.bk.png","modified":0},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/hueman/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0},{"_id":"source/img/me.jpg","path":"img/me.jpg","modified":0},{"_id":"source/img/node_2.png","path":"img/node_2.png","modified":0}],"Cache":[{"_id":"source/_posts/001_JSDevilDay.md","shasum":"9b6967b2b116a3c968026dc4963408dc2c1f4411","modified":1438602171000},{"_id":"source/_posts/002_AngularReactOrOther.md","shasum":"cd1eff450b2d957960e309e3dd1a17a9027e4ab1","modified":1438601372000},{"_id":"source/_posts/_hello-world.md","shasum":"170bcae0322be89b6a544676d221edad75d1d13e","modified":1438821366000},{"_id":"source/categories/index.md","shasum":"c6cd5091945f5e95b77ccdda674e3192c30736a2","modified":1438479249000},{"_id":"source/img/me.jpg","shasum":"511c9c8b9eac4b39228f33d17c79b71a6efca80a","modified":1430655351000},{"_id":"source/tags/index.md","shasum":"5e767603e5f30191472dcc91836eca84f6c9cf8a","modified":1438479223000},{"_id":"themes/hueman/Gruntfile.js","shasum":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1438449084000},{"_id":"themes/hueman/LICENSE","shasum":"3975b7883caeb33f61fada7c0ef4add7ab189849","modified":1438449084000},{"_id":"themes/hueman/README.md","shasum":"cb0615f198b8b322d77452aa9fd2924189995855","modified":1438449084000},{"_id":"themes/hueman/_config.yml.example","shasum":"c005adc3200e1ecbbb591ebf0a9a91296ecdaed2","modified":1438475572000},{"_id":"themes/hueman/languages/en.yml","shasum":"79e127d356bdf5a29098793d48d52eb9fc8e9b5c","modified":1438449084000},{"_id":"themes/hueman/languages/zh-CN.yml","shasum":"bdc8f74115cfe9aa4fe4eb20b36aa1030338274b","modified":1438449084000},{"_id":"themes/hueman/languages/zh-TW.yml","shasum":"add71557d2dc7ae40cda856db3304a8159079631","modified":1438475709000},{"_id":"themes/hueman/layout/_partial/after-footer.ejs","shasum":"4c1afa7c23b1c20cbd0445ee2734a78a4e5ac774","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/archive.ejs","shasum":"d503cd2de2ad6c569d6cc47208987e00536231be","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/article.ejs","shasum":"fd5eb9c2323bedbee9901e4632af92fdc87a2fa2","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/footer.ejs","shasum":"6656f5b97a20479efeda55879b17cf8db61bb698","modified":1438478796000},{"_id":"themes/hueman/layout/_partial/google-analytics.ejs","shasum":"b85f018bae6da2c96a09c4c69e1e2aeef896e40c","modified":1438476131000},{"_id":"themes/hueman/layout/_partial/head.ejs","shasum":"d27da77c892559b7ab13e36a84db791a2cdec7bf","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/header.ejs","shasum":"5467fed4704f9c4c897c6e7284a3af8bab02bdd8","modified":1439171100000},{"_id":"themes/hueman/layout/_partial/post/category.ejs","shasum":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/post/date.ejs","shasum":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/post/gallery.ejs","shasum":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/post/nav.ejs","shasum":"025a7695be81126dff4fcbeff1face60118da600","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/post/tag.ejs","shasum":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/post/thumbnail.ejs","shasum":"a1d68ad1eb9092aca74321aff3c9fd42029c9ba6","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1438449084000},{"_id":"themes/hueman/layout/_partial/sidebar.ejs","shasum":"566ec2c9f9051a9489ef1de0b0c15f5765ca14ad","modified":1438449084000},{"_id":"themes/hueman/layout/_widget/archive.ejs","shasum":"92fcfd830c011f1ff6e7d95443fe65067d3161f8","modified":1438449084000},{"_id":"themes/hueman/layout/_widget/category.ejs","shasum":"f0bb4be5c625003c0e38312f5079667be3a09ab7","modified":1438449084000},{"_id":"themes/hueman/layout/_widget/links.ejs","shasum":"e24c5bebe3e9f0bbaaf3b44bce8ef5ce56ae348b","modified":1438449084000},{"_id":"themes/hueman/layout/_widget/recent_posts.ejs","shasum":"0c4c97131131e5d06a886f9dc6e00f5de34e2bd3","modified":1438449084000},{"_id":"themes/hueman/layout/_widget/tag.ejs","shasum":"7b35103049fd0480f2631327b9381b7f4c9f5bcb","modified":1438449084000},{"_id":"themes/hueman/layout/_widget/tagcloud.ejs","shasum":"f4ac20c48e4bd6202e263efc9d320de1ad48d608","modified":1438449084000},{"_id":"themes/hueman/layout/archive.ejs","shasum":"2d86ef0f908b57af4ebf007eb8c6624def84f82a","modified":1438449084000},{"_id":"themes/hueman/layout/category.ejs","shasum":"85f2f7e0fdc16c496927511206364304ec364abe","modified":1438449084000},{"_id":"themes/hueman/layout/index.ejs","shasum":"2d86ef0f908b57af4ebf007eb8c6624def84f82a","modified":1438449084000},{"_id":"themes/hueman/layout/layout.ejs","shasum":"fc59e1e1d6127afdc8e2556e07c5d32fed5bb036","modified":1438474993000},{"_id":"themes/hueman/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1438449084000},{"_id":"themes/hueman/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1438449084000},{"_id":"themes/hueman/layout/tag.ejs","shasum":"2d86ef0f908b57af4ebf007eb8c6624def84f82a","modified":1438449084000},{"_id":"themes/hueman/package.json","shasum":"47c5adba0477e92e742349bf86f28bfeb701b3c1","modified":1438449084000},{"_id":"themes/hueman/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1438449084000},{"_id":"themes/hueman/source/css/_extend.styl","shasum":"41c5b46a19627571bd592eb4b071e2e279333252","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/archive.styl","shasum":"c611142866096da7c7428d2ef8fd4079a781f57c","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/article.styl","shasum":"37700f09b26c2d180ccbc80267a9e9b76b3f0a58","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/assets.styl","shasum":"38e578af64f98e30fba8dadd5a4699a0972eda8e","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/comment.styl","shasum":"2683cecb7d69e23a3fb1e80f10141454fb4cb232","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/footer.styl","shasum":"5758e93569a1baf63de1e65ab7746df1d3130624","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/header.styl","shasum":"57db2edb99734989ee147226dc952506cb8f73e2","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/highlight.styl","shasum":"9332816d92370cff8e252631ef65cb78c53ebb2a","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/nav.styl","shasum":"ea1d621a570dec9833dcc6519d039821c72e1d8c","modified":1438449084000},{"_id":"themes/hueman/source/css/_partial/sidebar.styl","shasum":"494e9ba779f4d9ad023135baf76a270b2a6d8c94","modified":1438449084000},{"_id":"themes/hueman/source/css/_responsive.styl","shasum":"7518d511dee2f0f4da85ff635ff0da20060dc9b8","modified":1438449084000},{"_id":"themes/hueman/source/css/_retina.styl","shasum":"e0445c7caa049250fe3811f55cc82f389009e90f","modified":1438449084000},{"_id":"themes/hueman/source/css/_variables.styl","shasum":"4707e0af2154ae372648eeaec2d6f1babc5f740f","modified":1438820514000},{"_id":"themes/hueman/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1438449084000},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1438449084000},{"_id":"themes/hueman/source/css/images/logo-header.bk.png","shasum":"a874be8f3e33831614a421d1a74d2c13bd5eba59","modified":1438449084000},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1438449084000},{"_id":"themes/hueman/source/css/images/logo-header.png","shasum":"614fc0d3770b287e33928233ee0859b2954efcd6","modified":1438821140000},{"_id":"themes/hueman/source/css/images/opacity-10.png","shasum":"bbc979866c5b50e8adb348419154b28b1ff44d78","modified":1438449084000},{"_id":"themes/hueman/source/css/images/s-left.png","shasum":"c8cac4f4e3492606fab93196364bd0f87d93bb98","modified":1438449084000},{"_id":"themes/hueman/source/css/images/thumb-default-small.png","shasum":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1438449084000},{"_id":"themes/hueman/source/css/images/thumb-default.png","shasum":"2d0ba175d958d342494241c616a74d37f48059fb","modified":1438449084000},{"_id":"themes/hueman/source/css/style.styl","shasum":"0c9a533dacb73437543256f398e31ce8189ab970","modified":1438820491000},{"_id":"themes/hueman/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1438449084000},{"_id":"themes/hueman/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1438449084000},{"_id":"themes/hueman/source/js/html-patch.js","shasum":"f58064e8afcc34e816d8e400dafb850bd064a207","modified":1438449084000},{"_id":"themes/hueman/source/js/script.js","shasum":"3a882ecf9ed0a1a921090d954037f90d4e5089e8","modified":1438449084000},{"_id":"themes/hueman/source/scrollLoading/images/preloader.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1438449084000},{"_id":"themes/hueman/source/scrollLoading/images/preloader@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1438449084000},{"_id":"themes/hueman/source/scrollLoading/jquery.scrollLoading.js","shasum":"1a3eab1ab2c4644fe1ada921bd1bdb083268a751","modified":1438449084000},{"_id":"themes/hueman/source/scrollLoading/main.js","shasum":"d1e92247f199fa93c7b3672e6b2ad9ad74a0a529","modified":1438449084000},{"_id":"themes/hueman/source/scrollLoading/style.css","shasum":"4ee06b1478b786aed0817b629cf58f336e5eff62","modified":1438449084000},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1438449084000},{"_id":"themes/hueman/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1438449084000},{"_id":"public/scrollLoading/style.css","modified":1438821995909,"shasum":"4ee06b1478b786aed0817b629cf58f336e5eff62"},{"_id":"public/scrollLoading/main.js","modified":1438821995913,"shasum":"d1e92247f199fa93c7b3672e6b2ad9ad74a0a529"},{"_id":"public/scrollLoading/jquery.scrollLoading.js","modified":1438821995915,"shasum":"1a3eab1ab2c4644fe1ada921bd1bdb083268a751"},{"_id":"public/scrollLoading/images/preloader@2x.gif","modified":1438821995918,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/scrollLoading/images/preloader.gif","modified":1438821995920,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/js/script.js","modified":1438821995922,"shasum":"3a882ecf9ed0a1a921090d954037f90d4e5089e8"},{"_id":"public/js/html-patch.js","modified":1438821995923,"shasum":"f58064e8afcc34e816d8e400dafb850bd064a207"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1438821995924,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1438821995926,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1438821995927,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1438821995930,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1438821995932,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1438821995935,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1438821995937,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1438821995938,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1438821995940,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1438821995944,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1438821995948,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1438821995950,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1438821995953,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1438821995955,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1438821995957,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1438821996452,"shasum":"a5a589bdfa146ad0a7c66ba029c58561abfef163"},{"_id":"public/css/images/thumb-default.png","modified":1438821996794,"shasum":"2d0ba175d958d342494241c616a74d37f48059fb"},{"_id":"public/css/images/thumb-default-small.png","modified":1438821996795,"shasum":"e8403b97ed9251f9f5207765b0ce796c5000b4ba"},{"_id":"public/css/images/s-left.png","modified":1438821996797,"shasum":"c8cac4f4e3492606fab93196364bd0f87d93bb98"},{"_id":"public/css/images/opacity-10.png","modified":1438821996798,"shasum":"bbc979866c5b50e8adb348419154b28b1ff44d78"},{"_id":"public/css/images/logo-header.png","modified":1438821996799,"shasum":"614fc0d3770b287e33928233ee0859b2954efcd6"},{"_id":"public/css/images/logo-header.bk.png","modified":1438821996800,"shasum":"a874be8f3e33831614a421d1a74d2c13bd5eba59"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1438821996802,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1438821996803,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1438821996809,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1438821996811,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/css/fonts/FontAwesome.otf","modified":1438821996814,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/img/me.jpg","modified":1438821996816,"shasum":"511c9c8b9eac4b39228f33d17c79b71a6efca80a"},{"_id":"public/tags/index.html","modified":1439486611879,"shasum":"d97cf01f41d79deda30b602b32723761c19403f9"},{"_id":"public/categories/index.html","modified":1439486611892,"shasum":"44b09566b5d95426f8010d8aa5e765899c056d59"},{"_id":"public/2015/08/02/002_AngularReactOrOther/index.html","modified":1439486611989,"shasum":"9b95607331e809b2e1ea77fd7a97a2fb2bddfa48"},{"_id":"public/2015/08/02/001_JSDevilDay/index.html","modified":1439486612015,"shasum":"0500eda65a5a74bd65431d1723913155ce5fa4f9"},{"_id":"public/archives/index.html","modified":1439486612107,"shasum":"664a17856c516bded56c1e9b3a0a0a45e4ec675f"},{"_id":"public/archives/2015/index.html","modified":1439486612125,"shasum":"804c49fc742c2807dbcbc85afb30958200b6e902"},{"_id":"public/archives/2015/08/index.html","modified":1439486612157,"shasum":"a1b20869467a073f4e16b580f49a5d8c1ff6cf3f"},{"_id":"public/categories/社群活動/index.html","modified":1439486612059,"shasum":"a2188360d8e3e9b5726a0be3616984b31a7ef2f3"},{"_id":"public/index.html","modified":1439486612035,"shasum":"b5dd4882b63530ae9036cc22df5a2349a7922276"},{"_id":"public/sitemap.xml","modified":1439512883639,"shasum":"64a16a33ae3e7dd3d65424bf72c5f384b99ce9de"},{"_id":"public/tags/社群活動/index.html","modified":1439486612174,"shasum":"a57938e7c7d2d362cf612a3ce5ad87693c45a733"},{"_id":"public/tags/JavaScript/index.html","modified":1439486612184,"shasum":"dce172c7ca8d3273af5f957aca443122bc8633cc"},{"_id":"public/tags/ES6/index.html","modified":1439486612198,"shasum":"a0d1b34597dad10efae033e78d62ea28fb1d6398"},{"_id":"public/tags/Angular-js/index.html","modified":1439486612210,"shasum":"45b3c67c13e086623d97342a3cb4437a1e03aa20"},{"_id":"public/tags/React-js/index.html","modified":1439486612223,"shasum":"39fd39488cd92a31b17023566afe883e9b4e3f6e"},{"_id":"public/img/node_01_01.png","modified":1439165107214,"shasum":"faf07dd4fd0208c7f1f0af8743ec498c150e2719"},{"_id":"public/2015/08/09/Node_01_從零開始/index.html","modified":1439172533688,"shasum":"d46048ca206eacbe7858564b43a048838405d5ae"},{"_id":"public/categories/Node-js/index.html","modified":1439172265209,"shasum":"e5238c6c5605bbcec0e536823815459175748fff"},{"_id":"public/tags/Node-js/index.html","modified":1439486612233,"shasum":"237687f212309ff545b2710f26dca7b7ab59ec84"},{"_id":"public/categories/Node-js-從零開始/index.html","modified":1439486612084,"shasum":"a8901e0614a354c0f6e29ea64671ff048510186c"},{"_id":"public/tags/Node-js-從零開始/index.html","modified":1439486612249,"shasum":"c5c65239057d7a1f398573a0e701b1bbd1fd67c5"},{"_id":"source/_posts/Node從零開始_02.md","shasum":"c2244a53e5b7fee535c7dcb86e4a694bac5a850c","modified":1439488538000},{"_id":"source/_posts/Node從零開始_01.md","shasum":"e9c5f31b13d4cb564ec285c187a107cc1168f748","modified":1439512861000},{"_id":"public/2015/08/12/Node從零開始_02/index.html","modified":1439488542728,"shasum":"0c20d180eb75680aa3bd12c908e302fdf979f64f"},{"_id":"public/2015/08/09/Node從零開始_01/index.html","modified":1439512883485,"shasum":"d63b7d6666e1135a1024f03edbdab98f2587af51"},{"_id":"source/img/node_2.png","shasum":"0b382fb40beb65fe86c2db0268f7624a10a7d092","modified":1439486794000},{"_id":"public/img/node_2.png","modified":1439486976490,"shasum":"0b382fb40beb65fe86c2db0268f7624a10a7d092"}],"Category":[{"name":"社群活動","_id":"ciczhgt6k0001lju0gkk49imj"},{"name":"Node.js","_id":"cid55qknj0001ysu0a1vsisx9"},{"name":"Node.js 從零開始","_id":"cid5a2l7600004pu0sthhp1tf"}],"Data":[],"Page":[{"title":"Tags","date":"2015-08-02T01:33:43.000Z","_content":"","source":"tags/index.md","raw":"title: tags\ndate: 2015-08-02 09:33:43\n---\n","updated":"2015-08-02T01:33:43.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciczhgt7b0009lju07ul7om6h"},{"title":"Categories","date":"2015-08-02T01:34:09.000Z","_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2015-08-02 09:34:09\n---\n","updated":"2015-08-02T01:34:09.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ciczhgt7c000alju0a9c71nfw"}],"Post":[{"title":"JS Devil Day 參與心得","date":"2015-08-02T01:05:42.000Z","comments":0,"_content":"\n> 本篇文上是本人Andrew Chen為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![JS Devil Day](https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg)\n\nJS Devil Day 是本次 JSDC 2015 所舉辦第一場對外 Meetup，也是首次透過北中南三方連線方式進行，本次以參與者角色，記錄此次活動。\n\nJS Devil Day 當天主要有三個主題：Angular.js、ECMAScript6、講者對談與交流。\n\n## 專家分享\n\n儘管對 Angular.js相當不熟悉，透過講者阿梨的分享讓我對Angular.js的概念有些許的了解，事後座談時講者也推薦初學者直接以Angular.js 2.0作為起手版本。\n\n接著是 Jeremy 對 ES6、webpack 提出了幾個重點，在 ES6 中可以明顯地感受到 JavaScript 已經開始嘗試解決 ES5 一些為人詬病的問題，包括區域變數、類別、模組化等等，同時 ES6 內建了 promise 和 generator ，同時在 ES6 解決了過複雜的 callback function和流程控制，另外 ES6 採用許多 coffeeScript 語法讓結構更為簡潔。\n\n個人認為 ES6 讓 Javascript 成為了更完整的開發語言，也讓 Javascript 減少了許多舊有的小問題，也不必仰賴開發者用奇技淫巧去嘗試解決問題。\n\n現今主流瀏覽器諸如：Chrome、Safari、Firefox 等等，已經逐漸開始支援 ES6，但尚未完全支援。在瀏覽器完全支援 ES6 之前，我們可以透過 babel 在程式執行之前將 ES6 的程式碼轉譯成 ES5，讓瀏覽器完全整的支援 ES6 程式碼。\n\n另外 Jeremy 提到 webpack 和 JSCS ，協助團隊開發更為順暢，開發工具和技巧相當的重要。順暢的開發過程除了提高效率之外，也保護了開發者健康的肝。","source":"_posts/001_JSDevilDay.md","raw":"title: JS Devil day 參與心得\ndate: 2015-08-02 09:05:42\ntags:\n- 社群活動\n- JavaScript\n- ES6\ncategories: 社群活動\ncomments: false\n---\n\n> 本篇文上是本人Andrew Chen為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![JS Devil Day](https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg)\n\nJS Devil Day 是本次 JSDC 2015 所舉辦第一場對外 Meetup，也是首次透過北中南三方連線方式進行，本次以參與者角色，記錄此次活動。\n\nJS Devil Day 當天主要有三個主題：Angular.js、ECMAScript6、講者對談與交流。\n\n## 專家分享\n\n儘管對 Angular.js相當不熟悉，透過講者阿梨的分享讓我對Angular.js的概念有些許的了解，事後座談時講者也推薦初學者直接以Angular.js 2.0作為起手版本。\n\n接著是 Jeremy 對 ES6、webpack 提出了幾個重點，在 ES6 中可以明顯地感受到 JavaScript 已經開始嘗試解決 ES5 一些為人詬病的問題，包括區域變數、類別、模組化等等，同時 ES6 內建了 promise 和 generator ，同時在 ES6 解決了過複雜的 callback function和流程控制，另外 ES6 採用許多 coffeeScript 語法讓結構更為簡潔。\n\n個人認為 ES6 讓 Javascript 成為了更完整的開發語言，也讓 Javascript 減少了許多舊有的小問題，也不必仰賴開發者用奇技淫巧去嘗試解決問題。\n\n現今主流瀏覽器諸如：Chrome、Safari、Firefox 等等，已經逐漸開始支援 ES6，但尚未完全支援。在瀏覽器完全支援 ES6 之前，我們可以透過 babel 在程式執行之前將 ES6 的程式碼轉譯成 ES5，讓瀏覽器完全整的支援 ES6 程式碼。\n\n另外 Jeremy 提到 webpack 和 JSCS ，協助團隊開發更為順暢，開發工具和技巧相當的重要。順暢的開發過程除了提高效率之外，也保護了開發者健康的肝。","slug":"001_JSDevilDay","published":1,"updated":"2015-08-03T11:42:51.000Z","layout":"post","photos":[],"link":"","_id":"ciczhgt6g0000lju0vvlu993h"},{"title":"淺談前端框架未來，Angular, React, 還是...？","date":"2015-08-02T01:13:44.000Z","comments":0,"_content":"\n> 本篇文上是本人Andrew Chen為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![前端框架未來？React, Angular or ..?](http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png)\n\n前端入坑深似海，一入宅門出不來。這肯定是許多前端工程師可以體認到的共同感觸，前端真可以說是一個坑，維繫大家能夠持續學習的動機，除了熱情，應該就還是熱情吧。\n\n## 淺談前端框架\n\n隨著前端應用變化越來越多，因此許多前端框架不斷的推陳出新，從早期大家所熟知的 [batman.js](http://batmanjs.org), [backbone.js](http://backbonejs.org), [emberjs](http://emberjs.com) 在中期也開始出現了許多不同框架，其中到了 Google 踏進 Angular.js 之後前端框架正式熱門起來，也掀起另外一波大戰。\n\n隨著世代的轉移，JavaScript 漸漸語法轉移到 ES6，語法不同，開始有了不同應用，也因此又出現了令人亮眼的新秀：[Aurelia](http://aurelia.io)。\n\n由於前端框架的世界更新相當迅速，不斷有新的Framwork出現，各家開發者對自己熟悉的框架各執其詞，其實相當難定義何者叫好。\n\n## 前端框架未來？React, Angular ?\n\n[React](http://facebook.github.io/react/) 和 [Angular](http://aurelia.io) 目前為前端兩大流行的框架，兩者的風格迥異。\n\nReact 主打 Single Source of True 和 Flux 的單項資料流，重新以元件的思維角度去設計 WebApp，最後又採用相同思維可以進行開發 iOS, Android native 程式框架 - React Native 讓大家眼睛為之一亮。\n\n而在Angular目前的情況較為不明朗，相當多的開發者正在使用能穩定運作的 1.x 版本，但是 Angular 2.x 的版本卻面臨了相當大的改版，而且並沒有支援 1.x 的部分。 Angular 最大亮點在雙向資料綁定，簡潔的資料綁定和監控配上快節奏的開發技巧時，產生令人驚豔的開發速度。\n\nReact 跟 Angular 整體的核心思維是相當不同的，React 特色在於簡化的開發邏輯與資料流，單純的單項資料流讓開發流程和除錯都容易了許多，React 的結構設計也讓抽取元件變得直觀與單純，React 傾向於將開發簡化，在設計好架構與資料結構後就減少犯錯的機會。\n\n但從另一個角度來說，React針對單一的操作，要撰寫的程式碼多出了許多，整個架構也變得龐大。而 Angular 則相反，Angular 在處理資料時相當快速且方便，雙向的資料綁定讓開者並不需要思考太多元件對應的關係，但也因此最終可能會讓整個專案陷入混亂，Angular 在抽取元件時比 React 需要更多的開發技巧，對整體團隊的開發素質要求也相對的更高。\n\n## 新的選擇 - Aurelia\n\nAurelia 或許可以說介於 React 和 Angular 兩者之間，Aurelia 目前為相當新秀的開發框架，他本身與 Angular 的資料綁定方式相當類似，不僅僅對 Angular 的開發者相當容易上手，安插在 HTML5 中的屬性也更加語意化。\n\nAurelia 的核心圍繞在模板上，因此他似乎同時擁有了 React 類似元件的觀念，又同時有 Angular 綁定資料的手法，算是相當多元，除此之外 Aurelia 對 ES6, ES7 擁有更高的支援度。\n\n當然目前 Aurelia 還在持續開發中，雖然版本尚未穩定，但是已經是個值得注目的前端框架，可以開始試著去執行，了解 Aurelia ，或許在現今 Single Page App 爆炸性成長的階段，Aurelia 能在未來佔有一席之地。\n\n也許未來 JavaScript 真的能夠做到前後端統一程式碼進行開發，也有可能踏入 hardware 開發領域，這都需要時間來證明，當然也需要各位的投入，就讓我們持續關注這個世代的變化吧。","source":"_posts/002_AngularReactOrOther.md","raw":"title: 淺談前端框架未來，Angular, React, 還是...？\ndate: 2015-08-02 09:13:44\ntags:\n- 社群活動\n- JavaScript\n- Angular.js\n- React.js\ncategories: 社群活動\ncomments: false\n---\n\n> 本篇文上是本人Andrew Chen為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![前端框架未來？React, Angular or ..?](http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png)\n\n前端入坑深似海，一入宅門出不來。這肯定是許多前端工程師可以體認到的共同感觸，前端真可以說是一個坑，維繫大家能夠持續學習的動機，除了熱情，應該就還是熱情吧。\n\n## 淺談前端框架\n\n隨著前端應用變化越來越多，因此許多前端框架不斷的推陳出新，從早期大家所熟知的 [batman.js](http://batmanjs.org), [backbone.js](http://backbonejs.org), [emberjs](http://emberjs.com) 在中期也開始出現了許多不同框架，其中到了 Google 踏進 Angular.js 之後前端框架正式熱門起來，也掀起另外一波大戰。\n\n隨著世代的轉移，JavaScript 漸漸語法轉移到 ES6，語法不同，開始有了不同應用，也因此又出現了令人亮眼的新秀：[Aurelia](http://aurelia.io)。\n\n由於前端框架的世界更新相當迅速，不斷有新的Framwork出現，各家開發者對自己熟悉的框架各執其詞，其實相當難定義何者叫好。\n\n## 前端框架未來？React, Angular ?\n\n[React](http://facebook.github.io/react/) 和 [Angular](http://aurelia.io) 目前為前端兩大流行的框架，兩者的風格迥異。\n\nReact 主打 Single Source of True 和 Flux 的單項資料流，重新以元件的思維角度去設計 WebApp，最後又採用相同思維可以進行開發 iOS, Android native 程式框架 - React Native 讓大家眼睛為之一亮。\n\n而在Angular目前的情況較為不明朗，相當多的開發者正在使用能穩定運作的 1.x 版本，但是 Angular 2.x 的版本卻面臨了相當大的改版，而且並沒有支援 1.x 的部分。 Angular 最大亮點在雙向資料綁定，簡潔的資料綁定和監控配上快節奏的開發技巧時，產生令人驚豔的開發速度。\n\nReact 跟 Angular 整體的核心思維是相當不同的，React 特色在於簡化的開發邏輯與資料流，單純的單項資料流讓開發流程和除錯都容易了許多，React 的結構設計也讓抽取元件變得直觀與單純，React 傾向於將開發簡化，在設計好架構與資料結構後就減少犯錯的機會。\n\n但從另一個角度來說，React針對單一的操作，要撰寫的程式碼多出了許多，整個架構也變得龐大。而 Angular 則相反，Angular 在處理資料時相當快速且方便，雙向的資料綁定讓開者並不需要思考太多元件對應的關係，但也因此最終可能會讓整個專案陷入混亂，Angular 在抽取元件時比 React 需要更多的開發技巧，對整體團隊的開發素質要求也相對的更高。\n\n## 新的選擇 - Aurelia\n\nAurelia 或許可以說介於 React 和 Angular 兩者之間，Aurelia 目前為相當新秀的開發框架，他本身與 Angular 的資料綁定方式相當類似，不僅僅對 Angular 的開發者相當容易上手，安插在 HTML5 中的屬性也更加語意化。\n\nAurelia 的核心圍繞在模板上，因此他似乎同時擁有了 React 類似元件的觀念，又同時有 Angular 綁定資料的手法，算是相當多元，除此之外 Aurelia 對 ES6, ES7 擁有更高的支援度。\n\n當然目前 Aurelia 還在持續開發中，雖然版本尚未穩定，但是已經是個值得注目的前端框架，可以開始試著去執行，了解 Aurelia ，或許在現今 Single Page App 爆炸性成長的階段，Aurelia 能在未來佔有一席之地。\n\n也許未來 JavaScript 真的能夠做到前後端統一程式碼進行開發，也有可能踏入 hardware 開發領域，這都需要時間來證明，當然也需要各位的投入，就讓我們持續關注這個世代的變化吧。","slug":"002_AngularReactOrOther","published":1,"updated":"2015-08-03T11:29:32.000Z","layout":"post","photos":[],"link":"","_id":"ciczhgt7g000blju01ej3ulox"},{"title":"Part 1 - 簡介與安裝","date":"2015-08-09T10:41:42.000Z","comments":0,"_content":"\n### Node.js 從零開始\n\n![Node.js](http://lamb-mei.com/wp-content/uploads/2014/09/nodejs-1024x768-1.png)\n\n## Node.js 簡介\n\n* [Node.js 官方](https://nodejs.org/)\n* [Node.js 台灣社群](http://nodejs.tw)\n* [Node.js Facabook 台灣社群](https://www.facebook.com/groups/node.js.tw/)\n\n隨著Google V8 引擎優秀的效能，JavaScript在近幾年迅速地竄紅，並透過Node.js的作者Ryan Dahl，讓JavaScript正式地能運作於伺服器端。\n\nNode.js在 I/O 這方面表現相當優，主要歸功於非同步事件驅動的核心。Node.js 的非同步 I/O 適合在 I/O 密集的情況下使用，正是現今大部份網站面臨的情況。\n\nNode.js 透過非阻塞式、非同步的 I/O 應付大量的請求，在以往阻塞式的伺服器語言設計中，後續資料需要等待前方 I/O 完成後才能繼續，或是需要開啟新的執行緒，在流量相當大的伺服器相對會造成一定時間的延遲。\n\n一般來說會仰賴提升伺服器或是增加伺服器數量來分擔流量，但現今網路世界蓬勃發展，高流量已經相當常見，開發者不得不正視效能問題。\n\n舉例來說新聞網站、部落格等，伺服器要能大量的回應資料，不需要牽涉到複雜的演算。使用 Node.js 伺服器能大大的解決 I/O 的需求。Node.js也相當適合配上 Single Page App 和 API，大量的 I/O 和少量的運算，Node.js 符合這一類型的需求。\n\n\n## Node.js 快速安裝 (on MAC)\n\n別急著下載Node.js官方的安裝檔，我們用更聰明的方式處理。\n\nNode.js 近來版本更新快速，現階段又即將跟 Node.js 的分支 io.js 進行整合，Node.js 將版本大躍進到4.0版。以 PHP 來說，開發時往往有版號的問題，Node.js 亦有相同的情形，因此我們透過 Node Version Managerer (NVM) 來進行各個版本的：安裝、刪除、切換，讓我們在各個版本之間輕鬆自在的遊走！\n\n那 NVM 又要怎麼安裝呢？MAC 使用者請使用 [Homebrew](http://brew.sh) 進行安裝，安裝Homebrew相當簡單，開啟終端及(Terminal)，然後複製[官網](http://brew.sh)上的安裝指令，即是以下指令，貼上直行即可。\n\n備註：`$ xxx` 代表著要在終端機輸入 `xxx` 指令\n\n\n``` bat\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n因為 MAC 原生就有安裝 Ruby，因此可以直接使用 Ruby 指令，基本上沒有大問題。接著再次確認 Homebrew 有正確安裝，查看Homebrew在本機的位址或是版本皆可。\n\n``` bat\n$ which brew          <--查詢路徑\n/usr/local/bin/brew   <--路徑\n$ brew -v             <--查詢版本\nHomebrew 0.9.5        <--當前版本\n```\n\n接著就可以使用 Homebrew 安裝 NVM 囉：\n\n``` bat\n$ brew install nvm\n```\n接著請等終端機運行完畢即可。\n接著要在終端機的指令集裡面補上 NVM 的指令，如果不熟悉 Linux 或 vim 的話，操作稍微比較麻煩一點，可依照以下說明一步步操作。\n\n1. 使用 vim 打開 .bash_profile\n\n\t``` bat\n\t$ vim ~/.bash_profile\n\t```\n\t輸入上面 vim 的指令後，會看到一個相當不友善的編輯界面， vim 的操作需要一段時間才能熟悉，目前我們就將就學習會用到的部分就好。 \n\t\n2. 用 vim 編輯 .bash_profile 檔案\n\n\tvim 也是仰賴指令來操作，將游標移動到想要的位置後按下鍵盤 `a` 可以開始編輯，接著使用一般的複製貼上 `cmd⌘+c`  `cmd⌘+v` 將以下兩串字貼進去：\n\n\t``` bat\n\texport NVM_DIR=~/.nvm\n\tsource $(brew --prefix nvm)/nvm.sh\n\t```\n\n3. 用 vim 儲存並離開\n\n\t(1) 按下 `esc`先離開編輯環境\n\t\n\t(2) 按下 `shift+:`\n\t\n\t(3) 輸入指令 `wq`\n\t\n\t(4) 按下 `enter`\n\t\n\t就會儲存並離開拉！\n\n## 確定 NVM 安裝完成\n\n藉著測試有沒有安裝成功。測試在開發過程中是最重要，紀律性的測試可以避免掉很多不必要的錯誤，這邊測試 Node.js 正卻安裝只是一個小小步驟，以後會有更重要的程式碼品質檢測出現。只要直接輸入 `$ nvm` 這個指令，終端機回應如下：\n\n基本上就是 NVM 有哪些指令的目錄。\n\n``` bat\nNode Version Manager\n\nUsage:\n  nvm help                              Show this message\n  nvm --version                         Print out the latest released version of nvm\n  nvm install [-s] <version>            Download and install a <version>, [-s] from source. Uses .nvmrc if available\n  nvm uninstall <version>               Uninstall a version\n  nvm use <version>                     Modify PATH to use <version>. Uses .nvmrc if available\n  nvm run <version> [<args>]            Run <version> with <args> as arguments. Uses .nvmrc if available for <version>\n  nvm current                           Display currently activated version\n  nvm ls                                List installed versions\n  nvm ls <version>                      List versions matching a given description\n  nvm ls-remote                         List remote versions available for install\n  nvm deactivate                        Undo effects of `nvm` on current shell\n  nvm alias [<pattern>]                 Show all aliases beginning with <pattern>\n  nvm alias <name> <version>            Set an alias named <name> pointing to <version>\n  nvm unalias <name>                    Deletes the alias named <name>\n  nvm reinstall-packages <version>      Reinstall global `npm` packages contained in <version> to current version\n  nvm unload                            Unload `nvm` from shell\n  nvm which [<version>]                 Display path to installed node version. Uses .nvmrc if available\n\nExample:\n  nvm install v0.10.32                  Install a specific version number\n  nvm use 0.10                          Use the latest available 0.10.x release\n  nvm run 0.10.32 app.js                Run app.js using node v0.10.32\n  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\n  nvm alias default 0.10.32             Set default node version on a shell\n\nNote:\n  to remove, delete, or uninstall nvm - just remove ~/.nvm, ~/.npm, and ~/.bower folders\n```\n\n如果測試成功的話，那就可以開始安裝 Node.js 了！上面辛苦的安裝 NVM 可以為未來 Node.js 的版本切換省下許多功夫。\n\n## 用 NVM 安裝 Node.js \n\n1. 讓 NVM 找出目前所有能安裝的版本，使用這個指令需要等待一下，然後會跑出一堆 Node.js 和 io.js 的版本。\n\n\t``` bat\n\t$ nvm ls-remote \n\t```\n\n2. 安裝指定想要的版本，推薦使用 0.10.24 或是 0.12.2 這幾個版本，如果有買任何 Node.js 的書籍，請參閱書籍使用的版本，在個版本中是存在著些微的差異的，使用不同的版本在學習的過程上多多少會造成不必要的麻煩。\n\n\t``` bat\n\t$ nvm install 0.12.2\n\t```\n\n3. 切換指定使用的版本\n\n\t``` bat\n\t$ nvm use 0.12.2\n\t```\n\n4. 查詢 nvm 的現狀，以下即是列印出來的狀況，可以查看當前使用的版本、預設使用的版本、穩定版本等等資訊...，方便日後切換版本時查看。\n\n\t``` bat\n\t$ nvm ls\n\t       v0.12.2\n\tdefault -> v0.10.24\n\tnode -> stable (-> v0.12.2) (default)\n\tstable -> 0.12 (-> v0.12.2) (default)\n\tiojs -> iojs- (-> N/A) (default)\n\t```\n\n5. 測試 node.js 安裝完成\n\n\t```bat\n\t$ node -v \n\tv0.10.24\n\t$ which \n\t/usr/local/opt/nvm/v0.10.24/bin/node\n\t```\n\n## 結語\n\n以個人的經驗而已，在 Node.js 的版本之間切換並沒有非常頻繁，社群通常都通用 v0.12.2 或是 v0.10.24 左右的版本，這幾的版本本身並沒有相當大的排斥性，但總偶爾會遇到其他版本的使用情況，如果沒有 nvm ，屆時就只能乖乖的移除並重新安裝。\n\n在第一次安裝時把這個 NVM 安裝完成，能省解決掉不少問題，如果直接安裝 Node.js 事後又再補上 NVM ，在許多設定細節上也相當困擾。總之，一開始就裝好就對了！\n\n## 參考文章\n* [Homebrew](http://brew.sh)\n* [stackflow-nvm](http://stackoverflow.com/questions/tagged/nvm)\n* [stackflow-nvm command not found](http://stackoverflow.com/questions/16904658/node-version-manager-install-nvm-command-not-found)\n* [Max OSX 新手入門](http://mac-osx-for-newbie-book.kejyun.com/software/softwareWebDeveloperNodeJS.html)\n* [Node.js 安裝與版本切換教學 (for MAC)](http://icarus4.logdown.com/posts/175092-nodejs-installation-guide)\n* [Homebrew: 新一代 OSX 套件管理工具](https://ihower.tw/blog/archives/4308/comment-page-1)\n","source":"_posts/Node從零開始_01.md","raw":"title: Part 1 - 簡介與安裝\ndate: 2015-08-09 18:41:42\ntags:\n- Node.js\n- Node.js 從零開始\n- JavaScript\ncategories: Node.js 從零開始\ncomments: false\n---\n\n### Node.js 從零開始\n\n![Node.js](http://lamb-mei.com/wp-content/uploads/2014/09/nodejs-1024x768-1.png)\n\n## Node.js 簡介\n\n* [Node.js 官方](https://nodejs.org/)\n* [Node.js 台灣社群](http://nodejs.tw)\n* [Node.js Facabook 台灣社群](https://www.facebook.com/groups/node.js.tw/)\n\n隨著Google V8 引擎優秀的效能，JavaScript在近幾年迅速地竄紅，並透過Node.js的作者Ryan Dahl，讓JavaScript正式地能運作於伺服器端。\n\nNode.js在 I/O 這方面表現相當優，主要歸功於非同步事件驅動的核心。Node.js 的非同步 I/O 適合在 I/O 密集的情況下使用，正是現今大部份網站面臨的情況。\n\nNode.js 透過非阻塞式、非同步的 I/O 應付大量的請求，在以往阻塞式的伺服器語言設計中，後續資料需要等待前方 I/O 完成後才能繼續，或是需要開啟新的執行緒，在流量相當大的伺服器相對會造成一定時間的延遲。\n\n一般來說會仰賴提升伺服器或是增加伺服器數量來分擔流量，但現今網路世界蓬勃發展，高流量已經相當常見，開發者不得不正視效能問題。\n\n舉例來說新聞網站、部落格等，伺服器要能大量的回應資料，不需要牽涉到複雜的演算。使用 Node.js 伺服器能大大的解決 I/O 的需求。Node.js也相當適合配上 Single Page App 和 API，大量的 I/O 和少量的運算，Node.js 符合這一類型的需求。\n\n\n## Node.js 快速安裝 (on MAC)\n\n別急著下載Node.js官方的安裝檔，我們用更聰明的方式處理。\n\nNode.js 近來版本更新快速，現階段又即將跟 Node.js 的分支 io.js 進行整合，Node.js 將版本大躍進到4.0版。以 PHP 來說，開發時往往有版號的問題，Node.js 亦有相同的情形，因此我們透過 Node Version Managerer (NVM) 來進行各個版本的：安裝、刪除、切換，讓我們在各個版本之間輕鬆自在的遊走！\n\n那 NVM 又要怎麼安裝呢？MAC 使用者請使用 [Homebrew](http://brew.sh) 進行安裝，安裝Homebrew相當簡單，開啟終端及(Terminal)，然後複製[官網](http://brew.sh)上的安裝指令，即是以下指令，貼上直行即可。\n\n備註：`$ xxx` 代表著要在終端機輸入 `xxx` 指令\n\n\n``` bat\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n因為 MAC 原生就有安裝 Ruby，因此可以直接使用 Ruby 指令，基本上沒有大問題。接著再次確認 Homebrew 有正確安裝，查看Homebrew在本機的位址或是版本皆可。\n\n``` bat\n$ which brew          <--查詢路徑\n/usr/local/bin/brew   <--路徑\n$ brew -v             <--查詢版本\nHomebrew 0.9.5        <--當前版本\n```\n\n接著就可以使用 Homebrew 安裝 NVM 囉：\n\n``` bat\n$ brew install nvm\n```\n接著請等終端機運行完畢即可。\n接著要在終端機的指令集裡面補上 NVM 的指令，如果不熟悉 Linux 或 vim 的話，操作稍微比較麻煩一點，可依照以下說明一步步操作。\n\n1. 使用 vim 打開 .bash_profile\n\n\t``` bat\n\t$ vim ~/.bash_profile\n\t```\n\t輸入上面 vim 的指令後，會看到一個相當不友善的編輯界面， vim 的操作需要一段時間才能熟悉，目前我們就將就學習會用到的部分就好。 \n\t\n2. 用 vim 編輯 .bash_profile 檔案\n\n\tvim 也是仰賴指令來操作，將游標移動到想要的位置後按下鍵盤 `a` 可以開始編輯，接著使用一般的複製貼上 `cmd⌘+c`  `cmd⌘+v` 將以下兩串字貼進去：\n\n\t``` bat\n\texport NVM_DIR=~/.nvm\n\tsource $(brew --prefix nvm)/nvm.sh\n\t```\n\n3. 用 vim 儲存並離開\n\n\t(1) 按下 `esc`先離開編輯環境\n\t\n\t(2) 按下 `shift+:`\n\t\n\t(3) 輸入指令 `wq`\n\t\n\t(4) 按下 `enter`\n\t\n\t就會儲存並離開拉！\n\n## 確定 NVM 安裝完成\n\n藉著測試有沒有安裝成功。測試在開發過程中是最重要，紀律性的測試可以避免掉很多不必要的錯誤，這邊測試 Node.js 正卻安裝只是一個小小步驟，以後會有更重要的程式碼品質檢測出現。只要直接輸入 `$ nvm` 這個指令，終端機回應如下：\n\n基本上就是 NVM 有哪些指令的目錄。\n\n``` bat\nNode Version Manager\n\nUsage:\n  nvm help                              Show this message\n  nvm --version                         Print out the latest released version of nvm\n  nvm install [-s] <version>            Download and install a <version>, [-s] from source. Uses .nvmrc if available\n  nvm uninstall <version>               Uninstall a version\n  nvm use <version>                     Modify PATH to use <version>. Uses .nvmrc if available\n  nvm run <version> [<args>]            Run <version> with <args> as arguments. Uses .nvmrc if available for <version>\n  nvm current                           Display currently activated version\n  nvm ls                                List installed versions\n  nvm ls <version>                      List versions matching a given description\n  nvm ls-remote                         List remote versions available for install\n  nvm deactivate                        Undo effects of `nvm` on current shell\n  nvm alias [<pattern>]                 Show all aliases beginning with <pattern>\n  nvm alias <name> <version>            Set an alias named <name> pointing to <version>\n  nvm unalias <name>                    Deletes the alias named <name>\n  nvm reinstall-packages <version>      Reinstall global `npm` packages contained in <version> to current version\n  nvm unload                            Unload `nvm` from shell\n  nvm which [<version>]                 Display path to installed node version. Uses .nvmrc if available\n\nExample:\n  nvm install v0.10.32                  Install a specific version number\n  nvm use 0.10                          Use the latest available 0.10.x release\n  nvm run 0.10.32 app.js                Run app.js using node v0.10.32\n  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\n  nvm alias default 0.10.32             Set default node version on a shell\n\nNote:\n  to remove, delete, or uninstall nvm - just remove ~/.nvm, ~/.npm, and ~/.bower folders\n```\n\n如果測試成功的話，那就可以開始安裝 Node.js 了！上面辛苦的安裝 NVM 可以為未來 Node.js 的版本切換省下許多功夫。\n\n## 用 NVM 安裝 Node.js \n\n1. 讓 NVM 找出目前所有能安裝的版本，使用這個指令需要等待一下，然後會跑出一堆 Node.js 和 io.js 的版本。\n\n\t``` bat\n\t$ nvm ls-remote \n\t```\n\n2. 安裝指定想要的版本，推薦使用 0.10.24 或是 0.12.2 這幾個版本，如果有買任何 Node.js 的書籍，請參閱書籍使用的版本，在個版本中是存在著些微的差異的，使用不同的版本在學習的過程上多多少會造成不必要的麻煩。\n\n\t``` bat\n\t$ nvm install 0.12.2\n\t```\n\n3. 切換指定使用的版本\n\n\t``` bat\n\t$ nvm use 0.12.2\n\t```\n\n4. 查詢 nvm 的現狀，以下即是列印出來的狀況，可以查看當前使用的版本、預設使用的版本、穩定版本等等資訊...，方便日後切換版本時查看。\n\n\t``` bat\n\t$ nvm ls\n\t       v0.12.2\n\tdefault -> v0.10.24\n\tnode -> stable (-> v0.12.2) (default)\n\tstable -> 0.12 (-> v0.12.2) (default)\n\tiojs -> iojs- (-> N/A) (default)\n\t```\n\n5. 測試 node.js 安裝完成\n\n\t```bat\n\t$ node -v \n\tv0.10.24\n\t$ which \n\t/usr/local/opt/nvm/v0.10.24/bin/node\n\t```\n\n## 結語\n\n以個人的經驗而已，在 Node.js 的版本之間切換並沒有非常頻繁，社群通常都通用 v0.12.2 或是 v0.10.24 左右的版本，這幾的版本本身並沒有相當大的排斥性，但總偶爾會遇到其他版本的使用情況，如果沒有 nvm ，屆時就只能乖乖的移除並重新安裝。\n\n在第一次安裝時把這個 NVM 安裝完成，能省解決掉不少問題，如果直接安裝 Node.js 事後又再補上 NVM ，在許多設定細節上也相當困擾。總之，一開始就裝好就對了！\n\n## 參考文章\n* [Homebrew](http://brew.sh)\n* [stackflow-nvm](http://stackoverflow.com/questions/tagged/nvm)\n* [stackflow-nvm command not found](http://stackoverflow.com/questions/16904658/node-version-manager-install-nvm-command-not-found)\n* [Max OSX 新手入門](http://mac-osx-for-newbie-book.kejyun.com/software/softwareWebDeveloperNodeJS.html)\n* [Node.js 安裝與版本切換教學 (for MAC)](http://icarus4.logdown.com/posts/175092-nodejs-installation-guide)\n* [Homebrew: 新一代 OSX 套件管理工具](https://ihower.tw/blog/archives/4308/comment-page-1)\n","slug":"Node從零開始_01","published":1,"updated":"2015-08-14T00:41:01.000Z","_id":"cidah5tlz0000rfu0xv5l29v0","layout":"post","photos":[],"link":""},{"title":"Part 2 - 快速建立網頁伺服器","date":"2015-08-12T13:04:24.000Z","comments":0,"_content":"\n### Node.js 從零開始\n\n![Node.js](http://lamb-mei.com/wp-content/uploads/2014/09/nodejs-1024x768-1.png)\n\n## Node.js 簡介\n\n用簡單一點的解釋方式來說， Node.js 就是寫在伺服器端的 JavaScript。單純以網頁伺服器而言，其實並沒有相當複雜。仔細想想只要處理幾件事情：\n\n* 解析 Client 提出的請求\n* 跟資料庫要求資料\n* 對資料做一些處理：檢查、篩選等等商業邏輯\n* 回應對應的資料給 Client\n\n初次學習 Node.js，我們先用最簡單的方式建立 Node.js http server，先看到效果，細節在日後在逐一去解釋、了解。首要目標是利用框架快速建立一個網頁伺服器，我們透過 Node.js 框架 [Express](http://expressjs.com) 來建立網站伺服器。Express 是相當容易學習的框架之一。\n\n安裝 Node.js 的框架與套件需要使用 NPM (Node Package Manager) 來，NVM 跟 NPM 是相當不同的輔助管理工具，稍微釐清一下兩者：\n\n* NVM：安裝/管理不同版本的 Node.js\n* NPM：安裝/管理各種 Node.js 的套件\n\n往後 NPM 會比 NVM 還頻繁的出現，NPM的細節與運作方式會在下一章節進行介紹，在此依照著操作即可完成。\n\n**1. 安裝第一個必要套件：express-generator**\n\n首先在電腦中找個習慣的地方建置一個資料夾，在資料夾下透過 NPM 指令安裝 express-generator 簡易的架構產生器：\n``` bat\n$ npm install -g express-generator\n$ sudo npm install -g express-generator\n```\n\n某些情況下需要系統管理員的權限才能 `npm install`，單純只是因為建立資料夾的地方權限不足而已，如果權限不足會噴出很明顯的錯誤訊息(error message)告訴我們無法建立資料夾。\n\n**2. 透過express-generator建立網站基本結構**\n\n接著透過產生器提供的指令，產生出整個專案的基礎架構，日後也可以使用產生器產生伺服器基礎的架構，再去修改或補足想要的其它套件。\n``` bat\n$ express myApp\n```\n\n馬上馬出基本結構建立的結果的訊息\n```bat\n$ express myApp\n\n   create : myApp\n   create : myApp/package.json\n   create : myApp/app.js\n   create : myApp/public\n   create : myApp/public/javascripts\n   create : myApp/public/images\n   create : myApp/public/stylesheets\n   create : myApp/public/stylesheets/style.css\n   create : myApp/routes\n   create : myApp/routes/index.js\n   create : myApp/routes/users.js\n   create : myApp/views\n   create : myApp/views/index.jade\n   create : myApp/views/layout.jade\n   create : myApp/views/error.jade\n   create : myApp/bin\n   create : myApp/bin/www\n\n   install dependencies:\n     $ cd myApp && npm install\n\n   run the app:\n     $ DEBUG=myApp:* ./bin/www\n```\n\n此操作是建立基本的 Node.js http server 的框架，接著是進入到伺服器的資料夾內，將相依性的套件安裝起來。可以理解成汽車的結構幾乎都完成了，現在只要打開引擎蓋把引擎放進去。\n\n**3.安裝網站所需要的一切核心套件**\n\n上方所說的\"所需要的一切核心套件\"，專業來說就是\"相依性套件\"或是在 npm 中專頁名詞為 \"dependencies\"。進入伺服器的資料夾，myApp 是剛剛自動產生時所使用的名稱，可以隨專案需求更換。進入後直接用 NPM 指令安裝整個套件。\n``` bat\n$ cd myApp\n$ npm install\n```\n\n`npm install` 這個指令是安裝此專案目錄下需要的相依性套件，NPM 會很聰明地把需要安裝的套件通通下載下來自動安裝，包括對應的版本也會正確地抓取，甚至是相依性套件的相依性套件。初始化的 `npm install` 需要一些時間，與需要安裝的套件數量成正比，稍作等帶後即可看到長長一串的安裝清單，沒有錯誤訊息的話即可繼續往下。\n\n註：`npm install` 的細節會再下一篇教學中解說。\n\n**4.撰寫啟動伺服器的程式碼**\n\n用任何習慣的編輯器打開 `myApp` 資料夾之下的 `app.js`。 `app.js` 是整個 server 的啟動檔案，express-generator相當完整將我們基本需要的程式碼 99% 都寫完了，只需要在最後方補上 server 監聽 port 的動作。在檔案尾端找到 `module.exports = app;` 將以下程式補在該行之前：\n``` js\napp.listen(3000, function(){\n    console.log('server started -> http://localhost:3000');\n});\n\nmodule.exports = app; //<-- 原先就有這行\n```\n\n或是我個人認為比較漂亮的寫法，port的值可以是從其他設定檔中抓取。\n``` js\nvar port = 3000; //值可能是從其他設定檔中抓取\n\napp.listen(port, function(){\n    console.log('listening -> http://localhost:' + port);\n});\n\nmodule.exports = app; //原先就有這行\n```\n\n**5.使用 Node.js 啟動伺服器**\n\n嚴格來說沒什麼太大的差異，單純抽取 port 這個參數而已。確認補上上方這段程式碼後，接著回到終端幾啟動伺服器。在 `myApp` 的資料夾內輸入啟動指令：( 使用 Node.js 讀取 app.js ，啟動這個伺服器)\n``` bat\n$ node app.js\n```\n\n啟動後再終端幾內會看到類似的畫面：\n\n![node app.js](http://polarbearandrew.github.io/blog/img/node_1.png)\n\n然後在瀏覽器的網址列輸入[http://localh\u001eost:3000](http://localhost:3000)即可看到 express-generator 自動產生的歡迎頁面！\n\n![Express welcome page](http://polarbearandrew.github.io/blog/img/node_2.png)\n\n## 結語\n\nexpress-generator 使用名為 express 的框架建置最基本的網站伺服器架構，建置完架構後可以再手動進行修改以符合個人習慣或專案需求。 express 是目前 Node.js 套件中優秀好用的框架之一，之後的 **Node.js 從零開始** 的教程會使用 express 做為主軸，完成之後會進一步撰寫有關 Koa.js 的文章。\n\n\n## 參考資料\n","source":"_posts/Node從零開始_02.md","raw":"title: Part 2 - 快速建立網頁伺服器\ndate: 2015-08-12 21:04:24\ntags:\n- Node.js\n- Node.js 從零開始\n- JavaScript\ncategories: Node.js 從零開始\ncomments: false\n---\n\n### Node.js 從零開始\n\n![Node.js](http://lamb-mei.com/wp-content/uploads/2014/09/nodejs-1024x768-1.png)\n\n## Node.js 簡介\n\n用簡單一點的解釋方式來說， Node.js 就是寫在伺服器端的 JavaScript。單純以網頁伺服器而言，其實並沒有相當複雜。仔細想想只要處理幾件事情：\n\n* 解析 Client 提出的請求\n* 跟資料庫要求資料\n* 對資料做一些處理：檢查、篩選等等商業邏輯\n* 回應對應的資料給 Client\n\n初次學習 Node.js，我們先用最簡單的方式建立 Node.js http server，先看到效果，細節在日後在逐一去解釋、了解。首要目標是利用框架快速建立一個網頁伺服器，我們透過 Node.js 框架 [Express](http://expressjs.com) 來建立網站伺服器。Express 是相當容易學習的框架之一。\n\n安裝 Node.js 的框架與套件需要使用 NPM (Node Package Manager) 來，NVM 跟 NPM 是相當不同的輔助管理工具，稍微釐清一下兩者：\n\n* NVM：安裝/管理不同版本的 Node.js\n* NPM：安裝/管理各種 Node.js 的套件\n\n往後 NPM 會比 NVM 還頻繁的出現，NPM的細節與運作方式會在下一章節進行介紹，在此依照著操作即可完成。\n\n**1. 安裝第一個必要套件：express-generator**\n\n首先在電腦中找個習慣的地方建置一個資料夾，在資料夾下透過 NPM 指令安裝 express-generator 簡易的架構產生器：\n``` bat\n$ npm install -g express-generator\n$ sudo npm install -g express-generator\n```\n\n某些情況下需要系統管理員的權限才能 `npm install`，單純只是因為建立資料夾的地方權限不足而已，如果權限不足會噴出很明顯的錯誤訊息(error message)告訴我們無法建立資料夾。\n\n**2. 透過express-generator建立網站基本結構**\n\n接著透過產生器提供的指令，產生出整個專案的基礎架構，日後也可以使用產生器產生伺服器基礎的架構，再去修改或補足想要的其它套件。\n``` bat\n$ express myApp\n```\n\n馬上馬出基本結構建立的結果的訊息\n```bat\n$ express myApp\n\n   create : myApp\n   create : myApp/package.json\n   create : myApp/app.js\n   create : myApp/public\n   create : myApp/public/javascripts\n   create : myApp/public/images\n   create : myApp/public/stylesheets\n   create : myApp/public/stylesheets/style.css\n   create : myApp/routes\n   create : myApp/routes/index.js\n   create : myApp/routes/users.js\n   create : myApp/views\n   create : myApp/views/index.jade\n   create : myApp/views/layout.jade\n   create : myApp/views/error.jade\n   create : myApp/bin\n   create : myApp/bin/www\n\n   install dependencies:\n     $ cd myApp && npm install\n\n   run the app:\n     $ DEBUG=myApp:* ./bin/www\n```\n\n此操作是建立基本的 Node.js http server 的框架，接著是進入到伺服器的資料夾內，將相依性的套件安裝起來。可以理解成汽車的結構幾乎都完成了，現在只要打開引擎蓋把引擎放進去。\n\n**3.安裝網站所需要的一切核心套件**\n\n上方所說的\"所需要的一切核心套件\"，專業來說就是\"相依性套件\"或是在 npm 中專頁名詞為 \"dependencies\"。進入伺服器的資料夾，myApp 是剛剛自動產生時所使用的名稱，可以隨專案需求更換。進入後直接用 NPM 指令安裝整個套件。\n``` bat\n$ cd myApp\n$ npm install\n```\n\n`npm install` 這個指令是安裝此專案目錄下需要的相依性套件，NPM 會很聰明地把需要安裝的套件通通下載下來自動安裝，包括對應的版本也會正確地抓取，甚至是相依性套件的相依性套件。初始化的 `npm install` 需要一些時間，與需要安裝的套件數量成正比，稍作等帶後即可看到長長一串的安裝清單，沒有錯誤訊息的話即可繼續往下。\n\n註：`npm install` 的細節會再下一篇教學中解說。\n\n**4.撰寫啟動伺服器的程式碼**\n\n用任何習慣的編輯器打開 `myApp` 資料夾之下的 `app.js`。 `app.js` 是整個 server 的啟動檔案，express-generator相當完整將我們基本需要的程式碼 99% 都寫完了，只需要在最後方補上 server 監聽 port 的動作。在檔案尾端找到 `module.exports = app;` 將以下程式補在該行之前：\n``` js\napp.listen(3000, function(){\n    console.log('server started -> http://localhost:3000');\n});\n\nmodule.exports = app; //<-- 原先就有這行\n```\n\n或是我個人認為比較漂亮的寫法，port的值可以是從其他設定檔中抓取。\n``` js\nvar port = 3000; //值可能是從其他設定檔中抓取\n\napp.listen(port, function(){\n    console.log('listening -> http://localhost:' + port);\n});\n\nmodule.exports = app; //原先就有這行\n```\n\n**5.使用 Node.js 啟動伺服器**\n\n嚴格來說沒什麼太大的差異，單純抽取 port 這個參數而已。確認補上上方這段程式碼後，接著回到終端幾啟動伺服器。在 `myApp` 的資料夾內輸入啟動指令：( 使用 Node.js 讀取 app.js ，啟動這個伺服器)\n``` bat\n$ node app.js\n```\n\n啟動後再終端幾內會看到類似的畫面：\n\n![node app.js](http://polarbearandrew.github.io/blog/img/node_1.png)\n\n然後在瀏覽器的網址列輸入[http://localh\u001eost:3000](http://localhost:3000)即可看到 express-generator 自動產生的歡迎頁面！\n\n![Express welcome page](http://polarbearandrew.github.io/blog/img/node_2.png)\n\n## 結語\n\nexpress-generator 使用名為 express 的框架建置最基本的網站伺服器架構，建置完架構後可以再手動進行修改以符合個人習慣或專案需求。 express 是目前 Node.js 套件中優秀好用的框架之一，之後的 **Node.js 從零開始** 的教程會使用 express 做為主軸，完成之後會進一步撰寫有關 Koa.js 的文章。\n\n\n## 參考資料\n","slug":"Node從零開始_02","published":1,"updated":"2015-08-13T17:55:38.000Z","_id":"cidah5tmf0005rfu0gg8284xf","layout":"post","photos":[],"link":""}],"PostAsset":[],"PostCategory":[{"post_id":"ciczhgt6g0000lju0vvlu993h","category_id":"ciczhgt6k0001lju0gkk49imj","_id":"ciczhgt6l0004lju0v3pnglz2"},{"post_id":"ciczhgt7g000blju01ej3ulox","category_id":"ciczhgt6k0001lju0gkk49imj","_id":"ciczhgt7h000clju0jcw0nii1"},{"post_id":"cidah5tmf0005rfu0gg8284xf","category_id":"cid5a2l7600004pu0sthhp1tf","_id":"cidaib7m30000lau02s3o23f4"},{"post_id":"cidah5tlz0000rfu0xv5l29v0","category_id":"cid5a2l7600004pu0sthhp1tf","_id":"cidawsx5r000029wa8r10qgvs"}],"PostTag":[{"post_id":"ciczhgt6g0000lju0vvlu993h","tag_id":"ciczhgt6k0002lju00hqq7ave","_id":"ciczhgt6m0006lju0exd006es"},{"post_id":"ciczhgt6g0000lju0vvlu993h","tag_id":"ciczhgt6l0003lju026r9zg2k","_id":"ciczhgt6m0007lju06bqkq75l"},{"post_id":"ciczhgt6g0000lju0vvlu993h","tag_id":"ciczhgt6l0005lju039kaovd0","_id":"ciczhgt6m0008lju0kbwv7g7e"},{"post_id":"ciczhgt7g000blju01ej3ulox","tag_id":"ciczhgt6k0002lju00hqq7ave","_id":"ciczhgt7h000flju0uly8w0wy"},{"post_id":"ciczhgt7g000blju01ej3ulox","tag_id":"ciczhgt6l0003lju026r9zg2k","_id":"ciczhgt7h000glju0cynhhxtp"},{"post_id":"ciczhgt7g000blju01ej3ulox","tag_id":"ciczhgt7h000dlju0sr7qtci1","_id":"ciczhgt7h000hlju09eykkxcw"},{"post_id":"ciczhgt7g000blju01ej3ulox","tag_id":"ciczhgt7h000elju0adwrk6fk","_id":"ciczhgt7h000ilju0j4dfh3dx"},{"post_id":"cidah5tlz0000rfu0xv5l29v0","tag_id":"cid55qknj0002ysu08akqosod","_id":"cidah5tm30002rfu0u5jo8s2a"},{"post_id":"cidah5tlz0000rfu0xv5l29v0","tag_id":"cid5a2l7600014pu039u4iqf9","_id":"cidah5tm30003rfu0wpatjdsv"},{"post_id":"cidah5tlz0000rfu0xv5l29v0","tag_id":"ciczhgt6l0003lju026r9zg2k","_id":"cidah5tm30004rfu0rv8pccya"},{"post_id":"cidah5tmf0005rfu0gg8284xf","tag_id":"cid55qknj0002ysu08akqosod","_id":"cidah5tmg0007rfu0m54chzci"},{"post_id":"cidah5tmf0005rfu0gg8284xf","tag_id":"cid5a2l7600014pu039u4iqf9","_id":"cidah5tmg0008rfu0dti5a9ey"},{"post_id":"cidah5tmf0005rfu0gg8284xf","tag_id":"ciczhgt6l0003lju026r9zg2k","_id":"cidah5tmg0009rfu07t4c03st"}],"Tag":[{"name":"社群活動","_id":"ciczhgt6k0002lju00hqq7ave"},{"name":"JavaScript","_id":"ciczhgt6l0003lju026r9zg2k"},{"name":"ES6","_id":"ciczhgt6l0005lju039kaovd0"},{"name":"Angular.js","_id":"ciczhgt7h000dlju0sr7qtci1"},{"name":"React.js","_id":"ciczhgt7h000elju0adwrk6fk"},{"name":"Node.js","_id":"cid55qknj0002ysu08akqosod"},{"name":"Node.js 從零開始","_id":"cid5a2l7600014pu039u4iqf9"}]}}