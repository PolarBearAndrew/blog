{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/favicon.png","path":"images/favicon.png","modified":1,"renderable":0},{"_id":"source/images/javascript.jpg","path":"images/javascript.jpg","modified":1,"renderable":0},{"_id":"source/images/logo.png","path":"images/logo.png","modified":1,"renderable":0},{"_id":"source/images/me.jpg","path":"images/me.jpg","modified":1,"renderable":0},{"_id":"source/images/logo-v2.png","path":"images/logo-v2.png","modified":1,"renderable":0},{"_id":"source/images/TTtimer/ic_launcher.png","path":"images/TTtimer/ic_launcher.png","modified":1,"renderable":0},{"_id":"source/images/assets/white.png","path":"images/assets/white.png","modified":1,"renderable":0},{"_id":"source/images/books/CleanCode_thumbnail.jpg","path":"images/books/CleanCode_thumbnail.jpg","modified":1,"renderable":0},{"_id":"source/images/books/被討厭的勇氣.jpg","path":"images/books/被討厭的勇氣.jpg","modified":1,"renderable":0},{"_id":"source/images/books/CleanCode.jpg","path":"images/books/CleanCode.jpg","modified":1,"renderable":0},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"source/images/TTtimer/working_finish.jpg","path":"images/TTtimer/working_finish.jpg","modified":1,"renderable":0},{"_id":"source/images/TTtimer/demo.jpg","path":"images/TTtimer/demo.jpg","modified":1,"renderable":0},{"_id":"source/images/foods/雞排/惡魔雞排-thumbnail.jpg","path":"images/foods/雞排/惡魔雞排-thumbnail.jpg","modified":1,"renderable":0},{"_id":"source/images/TTtimer/demo2.jpg","path":"images/TTtimer/demo2.jpg","modified":1,"renderable":0},{"_id":"source/images/foods/雞排/惡魔雞排.jpg","path":"images/foods/雞排/惡魔雞排.jpg","modified":1,"renderable":0},{"_id":"source/images/foods/雞排/狂暴惡魔雞排.jpg","path":"images/foods/雞排/狂暴惡魔雞排.jpg","modified":1,"renderable":0},{"_id":"source/images/foods/雞排/艋舺雞排.jpg","path":"images/foods/雞排/艋舺雞排.jpg","modified":1,"renderable":0},{"_id":"source/images/foods/雞排/艋舺雞排側切面.jpg","path":"images/foods/雞排/艋舺雞排側切面.jpg","modified":1,"renderable":0},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/styles.css","path":"libs/open-sans/styles.css","modified":1,"renderable":1},{"_id":"source/images/foods/雞排/天使雞排.jpg","path":"images/foods/雞排/天使雞排.jpg","modified":1,"renderable":0},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","path":"libs/jquery/2.1.3/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"b822c392626905b2e03f49f319844e4e9af64581","modified":1486297405000},{"_id":"themes/icarus/.gitignore","hash":"542aaea07afe90211c6a45c90b7d6879a4503043","modified":1486007614000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1486007614000},{"_id":"themes/icarus/_config.yml","hash":"c4a407e25baa59c6a8ec52d98d0a00036018a31e","modified":1486265458000},{"_id":"themes/icarus/README.md","hash":"25c75503f044b817297995a96621c92ce037a098","modified":1486007614000},{"_id":"themes/icarus/package.json","hash":"1bc52ef10a33df23e56bd73c927f605019c87d41","modified":1486007614000},{"_id":"source/_old_posts/Node從零開始_01.md","hash":"29ed1a0506cd697b4bac07791b8bc9645e62f39c","modified":1439895579000},{"_id":"source/_old_posts/Node從零開始_02.md","hash":"85e9c83cac67c891cdd24e3285cae1ca0f157941","modified":1439517682000},{"_id":"source/_old_posts/Node從零開始_03.md","hash":"26a902304da386b80351a437467b6922b84f6632","modified":1439654116000},{"_id":"source/_old_posts/Node從零開始_04.md","hash":"c2f366a55f9023ee5f56de1e963307ebde5b5c8e","modified":1443175852000},{"_id":"source/_old_posts/Node從零開始_05.md","hash":"039e33f230e3eaf3c6320b1f68317d60053c5ff7","modified":1440465970000},{"_id":"source/_old_posts/Node從零開始_06.md","hash":"1bac35282ea62222db91f01cb311410a8a8e6087","modified":1440472465000},{"_id":"source/_posts/20150802_JS_AngularReactOrOther.md","hash":"e10373fdbeace2d848041883d338c2b06dc46dd5","modified":1486191596000},{"_id":"source/_posts/20150802_JS_JSDevilDay.md","hash":"0c2f4db748843217ab2b43ca36b42835ffc7434c","modified":1486191596000},{"_id":"source/_posts/20150816_JS_redis.md","hash":"5b065d68338896c0123a47a67b20236bb581e54d","modified":1486191596000},{"_id":"source/_posts/20150818_JS_buildCallApply.md","hash":"7f27da6cb386bad7e7215269c2118fa62904bfc8","modified":1486191596000},{"_id":"source/_posts/20150819_APP_TTtimerForOIT.md","hash":"b6c0761003da264989e9d1f8555e74a76dcfbca4","modified":1486191596000},{"_id":"source/_posts/20170205_BOOKS_CleanCode1.md","hash":"ce967a34aab85c6dcd87b21f0a4429a37fc84531","modified":1486299804000},{"_id":"source/_posts/20161228_FOODS_雞排.md","hash":"8c960e4611a2ce9bfdfc394accb0205b70a072c0","modified":1486191596000},{"_id":"source/_posts/20170131_BOOKS_被討厭的勇氣1-2.md","hash":"6e9e2a99b7fc6652460019cb9ae8daed2e68888b","modified":1486291731000},{"_id":"source/_posts/20170131_BOOKS_被討厭的勇氣1-1.md","hash":"aecd04b4c39548b3dd22cb6f847eb00044e76007","modified":1486291740000},{"_id":"source/_posts/_hello-world.md","hash":"170bcae0322be89b6a544676d221edad75d1d13e","modified":1438821366000},{"_id":"source/about/index.md","hash":"26cb00c757c5c5d66dd4fff2caf8662533f2403c","modified":1486266273000},{"_id":"source/categories/index.md","hash":"dc7261afc52b388640583150660d4b31ac485f51","modified":1486191596000},{"_id":"source/images/.DS_Store","hash":"f7b02fbffb2ac8b9855f4a82490cc2b4845d4977","modified":1486298219000},{"_id":"source/images/favicon.png","hash":"028b7a5d727b0b0417cf903d060f86464be994d7","modified":1486191596000},{"_id":"source/images/javascript.jpg","hash":"40d3dbea4443273ddc3c9feffafb6277fcb41d8b","modified":1485777428000},{"_id":"source/images/logo.png","hash":"028b7a5d727b0b0417cf903d060f86464be994d7","modified":1486191596000},{"_id":"source/images/me.jpg","hash":"0383a7120c65d68452917a61b6ae08ee79959478","modified":1486191596000},{"_id":"source/tags/index.md","hash":"586ae81391df59412ce770fc4fd2394d8935373c","modified":1486191596000},{"_id":"themes/icarus/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1486007614000},{"_id":"source/images/logo-v2.png","hash":"f889dee2852cba35ff08a658815757e7028c16f5","modified":1486191596000},{"_id":"themes/icarus/.git/config","hash":"965ef2ab67fe8b8aa4fb072307ee50d7cf6b31fe","modified":1486007614000},{"_id":"themes/icarus/.git/COMMIT_EDITMSG","hash":"e0bfde48d0c3b686063fd4d4148d9f1e0001e878","modified":1486011810000},{"_id":"themes/icarus/.git/FETCH_HEAD","hash":"18a6df752a3f5649cea9bf18b5705ed30923087a","modified":1486007677000},{"_id":"themes/icarus/.git/ORIG_HEAD","hash":"02bc97cb7c24d31948d53d065befca3c82241208","modified":1486007677000},{"_id":"themes/icarus/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1486007602000},{"_id":"themes/icarus/.git/index","hash":"1557f05166144cb2d59443bf334af0f6fe1c69d3","modified":1486011802000},{"_id":"themes/icarus/.git/packed-refs","hash":"20541d4ab9e1b6823e918c7ca5a05a81d7ce8b38","modified":1486007614000},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE.md","hash":"9393fd3dbc943f1544facb66af7fd8b7a5b9ddbb","modified":1486007614000},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1486007614000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1486007614000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1486007614000},{"_id":"themes/icarus/languages/id.yml","hash":"70ec9ab2ac04cf882e81377ca5ad15bf8adceca8","modified":1486007614000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1486007614000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1486007614000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1486007614000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1486007614000},{"_id":"themes/icarus/layout/about.ejs","hash":"8d92bce4c58a45eecbae5b21b6e7071fceba7779","modified":1486266304000},{"_id":"themes/icarus/layout/archive.ejs","hash":"c1ecf667f40f34d61ab33eed46bab143eb1af36d","modified":1486007614000},{"_id":"themes/icarus/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1486007614000},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1486007614000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1486007614000},{"_id":"themes/icarus/layout/layout.ejs","hash":"95ff2d3b5ca7b301edbee0d8d482f77d492efb17","modified":1486265409000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1486007614000},{"_id":"themes/icarus/languages/tr.yml","hash":"8b7eb6aec264db50dbabea89f680acca256f4cd1","modified":1486007614000},{"_id":"themes/icarus/layout/page.ejs","hash":"a5d1d6670aa328abff36f36e0a55e978b055f67f","modified":1486265703000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1486007614000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1486007614000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1486007614000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1486007614000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1486007614000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1486007614000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_1.png","hash":"7a20144a14897068c27a3774dce686e1d6723e67","modified":1439513584000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_6.png","hash":"d1d2dad3b9d48f2917afa31d1ca0d6e5dce3cd7e","modified":1439514447000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_7.png","hash":"0b382fb40beb65fe86c2db0268f7624a10a7d092","modified":1439486794000},{"_id":"source/_old_posts/_nodeFormZero_2/node_3_1.png","hash":"af766881c005d057f5c4bf42ea862045419c2977","modified":1439910480000},{"_id":"source/images/TTtimer/ic_launcher.png","hash":"80deb1892604a3ec7154a9d4bc36477ba8fd2c2f","modified":1439970250000},{"_id":"source/images/TTtimer/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1485827585000},{"_id":"source/images/assets/white.png","hash":"695de6b09c134b24448a33f7a4048ba6d8e0cbb8","modified":1486191596000},{"_id":"source/images/books/CleanCode_thumbnail.jpg","hash":"2e321e715a452dade31b72d038b01500367c127b","modified":1486298204000},{"_id":"source/images/books/被討厭的勇氣.jpg","hash":"9dfc72e0fbf9cc441d7278c25a58ea9728b3fcf2","modified":1486298282000},{"_id":"source/images/books/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1486298294000},{"_id":"source/images/books/CleanCode.jpg","hash":"7af426e4001071c7b235cf7accf9b1a6c81a04cf","modified":1486298176000},{"_id":"source/images/foods/.DS_Store","hash":"abbb6706304d81583c2d526f6a1c191b0767b3cc","modified":1486032772000},{"_id":"themes/icarus/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1486007602000},{"_id":"themes/icarus/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1486007602000},{"_id":"themes/icarus/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1486007602000},{"_id":"themes/icarus/.git/logs/HEAD","hash":"b55bc0335517fb41754b929a3eeee51aa1644c4c","modified":1486011810000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1486007614000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1486007614000},{"_id":"themes/icarus/_source/about/index.md","hash":"7ba0f906188d2224f1217ee5e1388c3da9df39b9","modified":1486266039000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"e109d3256b004b027d029bd5bd67feeb72dc5388","modified":1486007614000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1486007614000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1486007614000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"d45635e78a3fc40e424a401e983f2c8eef6ebcfd","modified":1486007614000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"8a9a20f72ba0923afa776396fb67d8c5d446a666","modified":1486007614000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"26b3ef4ed4b84286077b6853fd8dc9242ee1ad7b","modified":1486022641000},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1486007614000},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"cbfe560fcab445d42ceeb5d1beba5957d5be5eaa","modified":1486007614000},{"_id":"themes/icarus/layout/common/head.ejs","hash":"44f30945882afd27c89da2173da501fb1b531488","modified":1486007614000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"738c6a923b2a6de6a81c4892c8a47e03d8b34f88","modified":1486007614000},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"a2595aec0a0cf9103ce9a7651d3b57ca2ead7e6a","modified":1486300036000},{"_id":"themes/icarus/layout/common/resume.ejs","hash":"3edbcf0847dfadddd0a4ba2b85abd6bb6162c444","modified":1486266589000},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1486007614000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"6e80fa52d23c9c39bfa357a1e00c26fc8b851b82","modified":1486007614000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1486007614000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"6420e34e0332c9b6670011519f341340db989343","modified":1486007614000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1486007614000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1486007614000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"4fdb85e6730530f2d262041b41d1ead1b87dfd88","modified":1486007614000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1486007614000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1486007614000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1486007614000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1486007614000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1486007614000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1486007614000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1486007614000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"ebfb919dc525b3ed61a6a5ee05ee71410eedc541","modified":1486007614000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1486007614000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1486007614000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1486007614000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1486007614000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"aad118699718b62c0d3f3cfd6f17a181139a76af","modified":1486007614000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"bac335701e4015279f280adc48414e22151356da","modified":1486272157000},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1486007614000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1486007614000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"9a5c72663c0da1b32ecb6a75773a5ccfb8c467ca","modified":1486007614000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"d62af931be6612ec8c3a917836379a8cd92fbce1","modified":1486007614000},{"_id":"themes/icarus/source/css/style.styl","hash":"e07f8dd230c9f13135bf9d6637daad7c6fb594cf","modified":1486022204000},{"_id":"themes/icarus/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1486007614000},{"_id":"themes/icarus/source/js/main.js","hash":"1faffdc7aa7f0d28e85edbf49c99de3ad0b65753","modified":1486007614000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_4.png","hash":"b88e1f257e3b690dc13d6015d4a20bfe9d18532b","modified":1439515182000},{"_id":"source/_old_posts/_nodeFormZero_2/node_4_2.png","hash":"9073bfc037228e5cde4b1146f57ed82415ce7c41","modified":1440463848000},{"_id":"source/images/TTtimer/working_finish.jpg","hash":"31efdfa759f107c21ca160ab4b25a3a6f84ed064","modified":1485826272000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_2.png","hash":"30cd09a399d8947c2769e5d79c04514d39bb1dd6","modified":1439513573000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_3.png","hash":"e8160d262dbd21a057b603ba8280156052c82cbc","modified":1439513691000},{"_id":"source/_old_posts/_nodeFormZero_2/node_4_1.png","hash":"2832afa7bf4ea7dec1f104f983acb5f9eb31eb32","modified":1440463250000},{"_id":"source/_old_posts/_nodeFormZero_2/node_4_4.png","hash":"d5489e1d406b4f668106c4e8cea4565104d0b0f2","modified":1440466380000},{"_id":"source/images/TTtimer/demo.jpg","hash":"2886b170772d9e8a21df2451a64f2a32682ad721","modified":1485826252000},{"_id":"source/images/foods/雞排/惡魔雞排-thumbnail.jpg","hash":"47145118855ebd03149293b45e0c62ba41f25ad6","modified":1486191596000},{"_id":"source/images/TTtimer/demo2.jpg","hash":"1caf5b4d931d83f2394cd034b6cd805eeb4309c4","modified":1485826324000},{"_id":"source/images/foods/雞排/惡魔雞排.jpg","hash":"facff2903c5a8c43aef22b93c1513582d614a44b","modified":1485878217000},{"_id":"source/images/foods/雞排/狂暴惡魔雞排.jpg","hash":"1bac24617fb1920128327ff5e403bd76cbd56233","modified":1485878230000},{"_id":"source/images/foods/雞排/艋舺雞排.jpg","hash":"65f088c01c9e36d3b8c9945ea24f80249231458a","modified":1485878195000},{"_id":"source/images/foods/雞排/艋舺雞排側切面.jpg","hash":"a9057686ddfc415751d8a7a767264e2b76a29937","modified":1485878182000},{"_id":"themes/icarus/.git/objects/0c/f64924a99cce6951d51a5a753705e65ff9b4d2","hash":"1743fd26db3e3c409b4182fa79b7e7384269e883","modified":1486011810000},{"_id":"themes/icarus/.git/refs/heads/master","hash":"206cab50d736d682b3fae28e83e6f8cd32b70aff","modified":1486011810000},{"_id":"themes/icarus/.git/objects/18/0c639e39667b14c8bdedf3d4bc5a502ee63e08","hash":"cab9eeb89d97b69edea7e42626ccdfb7258dbaff","modified":1486011802000},{"_id":"themes/icarus/.git/objects/pack/pack-a002a526fc4e41a5f34ea90a7073fabaf3f41ac8.idx","hash":"b24f97207e92a626614a8f3afd5c0c53c00052be","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"75c9dda2e7ec041943855ca163a6b1c4c8b4f260","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"45cb0bcad461036cdd1fe2e3fbb5f2f19940025c","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1486007614000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1486007614000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"d35088c83ddd7a197d6d94e16a2ce3a7e29fa1dc","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"f1922d8aa87e11ad05296c9be24f26347735be54","modified":1486265532000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"91611f99c6c75a5696542f0a6b309ae0ebc3a332","modified":1486022908000},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"1e351f741144135871a3373fe7e969dc961b65e7","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"fb0170075dc2a41e01dd11bbfdbccbed544c479a","modified":1486007614000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1486007614000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"f528ca7064d9fcecd737b9b71c9c54601365d7d3","modified":1486007614000},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1486007614000},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1486007614000},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1486007614000},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1486007614000},{"_id":"themes/icarus/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1486007614000},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1486007614000},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1486007614000},{"_id":"source/images/foods/雞排/天使雞排.jpg","hash":"b9c0706ec279ff4e9c967b6b1ed3e6cb8d448dff","modified":1485878247000},{"_id":"themes/icarus/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1486007614000},{"_id":"themes/icarus/.git/logs/refs/heads/master","hash":"b55bc0335517fb41754b929a3eeee51aa1644c4c","modified":1486011810000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1486007614000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1486007614000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1486007614000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1486007614000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1486007614000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1486007614000},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1486007614000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1486007614000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1486007614000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1486007614000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1486007614000},{"_id":"source/_old_posts/_nodeFormZero_2/node_2_5.png","hash":"db170cf06b2e83620dd7e2c8dd9908df5a3b1fab","modified":1439513629000},{"_id":"themes/icarus/.git/logs/refs/remotes/origin/HEAD","hash":"8676c504fae624f9de6d8364506da4933b39f53f","modified":1486007614000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1486007614000},{"_id":"source/_old_posts/_nodeFormZero_2/node_4_3.png","hash":"ec70ba567c2892eaa13fe62110384813b1f735bd","modified":1440464287000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1486007614000},{"_id":"themes/icarus/.git/objects/pack/pack-a002a526fc4e41a5f34ea90a7073fabaf3f41ac8.pack","hash":"1dc64150af8baca23bf50c9dee9cecd5a0360999","modified":1486007614000},{"_id":"public/content.json","hash":"e401345c33693f5f80d7e4a95d8e5d46a5967d5f","modified":1486300065435},{"_id":"public/sitemap.xml","hash":"63342f8876e90626b1821b51956828cbeb06d223","modified":1486300066388},{"_id":"public/about/index.html","hash":"149566c87a44fa7ce7e34dd8f86289e379b783ff","modified":1486300066651},{"_id":"public/categories/index.html","hash":"92d8002d0ed18d4f7914ad086a00eb3c3180d79d","modified":1486300066754},{"_id":"public/tags/index.html","hash":"27d2e0489b6ab09054ee4297f05cb941bff02349","modified":1486300066754},{"_id":"public/2017/02/05/20170205_BOOKS_CleanCode1/index.html","hash":"1bed9b6b78b460ba61b41b24d2b2ac7a5b668644","modified":1486300066759},{"_id":"public/2017/01/31/20170131_BOOKS_被討厭的勇氣1-1/index.html","hash":"41e10d93514f72be660dc03f268754b2c82cc8cd","modified":1486300066759},{"_id":"public/2017/01/31/20170131_BOOKS_被討厭的勇氣1-2/index.html","hash":"ebc55c205f74381bd0102cd294318b8115ababc5","modified":1486300066759},{"_id":"public/2016/12/28/20161228_FOODS_雞排/index.html","hash":"b3d324928b42ce7282d7a33ba1b7e29e8ed43962","modified":1486300066759},{"_id":"public/2015/08/19/20150819_APP_TTtimerForOIT/index.html","hash":"c150baa7d9c5c7c6c89c340ee0c91d80cefd5ba1","modified":1486300066759},{"_id":"public/2015/08/18/20150818_JS_buildCallApply/index.html","hash":"4d7c17b2e33678a9969267d0db8bf1b09fe77571","modified":1486300066759},{"_id":"public/2015/08/16/20150816_JS_redis/index.html","hash":"30566a5ee6fb51c0a5519e9524807c10aedbfe24","modified":1486300066759},{"_id":"public/2015/08/02/20150802_JS_AngularReactOrOther/index.html","hash":"07c49ceb661a10a6832bacd053f0b78a4a5490ce","modified":1486300066759},{"_id":"public/2015/08/02/20150802_JS_JSDevilDay/index.html","hash":"cb5b982d6be9976647800485444bf58b04f6ae4d","modified":1486300066759},{"_id":"public/archives/index.html","hash":"d709e91dc0892fddcd1b613f97c2afceced6e158","modified":1486300066760},{"_id":"public/archives/2015/index.html","hash":"f03693041d7ac4bf5c7e3416c4305b5f3ab5dc18","modified":1486300066760},{"_id":"public/archives/2015/08/index.html","hash":"4814ecd590417b807144ad8d188dae5fe3bfaef5","modified":1486300066760},{"_id":"public/archives/2016/index.html","hash":"36cbd78ed829820399a22b8c9521083ba3c80b39","modified":1486300066760},{"_id":"public/archives/2016/12/index.html","hash":"f533818f886924136f58534e2600752c7e254c53","modified":1486300066760},{"_id":"public/archives/2017/index.html","hash":"506a7904acf22e3cf50607970722619dcdf118bd","modified":1486300066760},{"_id":"public/archives/2017/01/index.html","hash":"3bfff467c746b9483f97b0199a2d7387278effbf","modified":1486300066761},{"_id":"public/archives/2017/02/index.html","hash":"5764ec8dda934ca0077d0ef8ac5987aa3b815b09","modified":1486300066761},{"_id":"public/categoriesl/社群活動/index.html","hash":"7782e3b5822a9f37ae4f2a49939151e3d75d5821","modified":1486300066761},{"_id":"public/categoriesl/Node-js/index.html","hash":"ae1cb84968d18ff2969e8bdf913e28c3667a81b6","modified":1486300066761},{"_id":"public/categoriesl/JavaScript/index.html","hash":"a5ce33d213b7e123f1c0f199309b9ccbb684c4be","modified":1486300066761},{"_id":"public/categoriesl/雜七雜八/index.html","hash":"3f30a6779078f4860740a189e0cd0068da380de4","modified":1486300066761},{"_id":"public/categoriesl/好書筆記/index.html","hash":"68dcdf9def12d062c8042f9af01acedaaf88da94","modified":1486300066761},{"_id":"public/categoriesl/吃吃喝喝/index.html","hash":"d7f9872d6e9f878b6bf621feb3cc19f5985bd91c","modified":1486300066761},{"_id":"public/index.html","hash":"c3b6cffebcc29b83137fdd2be4ecbbbfb5ec3b10","modified":1486300066761},{"_id":"public/tags/社群活動/index.html","hash":"59882046adcfb1f89c8a30ff4cf1a5a26b4d96fa","modified":1486300066761},{"_id":"public/tags/JavaScript/index.html","hash":"102d4b25fadc1f58bf634bd6037ed81f926d551f","modified":1486300066761},{"_id":"public/tags/Angular-js/index.html","hash":"a468493df9940769b14cab573b1a47400b7d789f","modified":1486300066761},{"_id":"public/tags/React-js/index.html","hash":"a5072772159856d33095f87ecb0bd317c63d6ef2","modified":1486300066761},{"_id":"public/tags/ES6/index.html","hash":"631286731f59a369652b464e9050d7cb67e26257","modified":1486300066761},{"_id":"public/tags/Node-js/index.html","hash":"d75692778d3b84cb8cd9cf779f203771983b9535","modified":1486300066762},{"_id":"public/tags/學習筆記/index.html","hash":"359faef94883e0b47de41cbf71b0245567d16c0b","modified":1486300066771},{"_id":"public/tags/教學/index.html","hash":"9c79cb20f41882ba5c532742c634e3e060a32bff","modified":1486300066771},{"_id":"public/tags/Android/index.html","hash":"92ede6cc05660b88f63cfb2d9c5579455005a3b1","modified":1486300066771},{"_id":"public/tags/Java/index.html","hash":"11cb41de1c487135a10499271d3d9924ddc1293d","modified":1486300066771},{"_id":"public/tags/學生時期作品/index.html","hash":"c4e0a0e72bc3c7792974aeb5f71a2e6125f99b2a","modified":1486300066771},{"_id":"public/tags/讀書心得/index.html","hash":"c96bbde5d3cbaf861f5aa8f0fee818d6ca86b754","modified":1486300066771},{"_id":"public/tags/程式設計/index.html","hash":"0b1c3cfad0e80d4a6beb7a141af3f3819f536cc1","modified":1486300066771},{"_id":"public/tags/重點筆記/index.html","hash":"a1ff9d7c08ba7219a9649fbdb1938f4b571c8db5","modified":1486300066771},{"_id":"public/tags/吃吃喝喝/index.html","hash":"c0de93624a5687982bf3d3f546674d3b3ebb1356","modified":1486300066771},{"_id":"public/tags/美食介紹/index.html","hash":"f878e01de8e6dbf564992015a75cb500d4470b80","modified":1486300066771},{"_id":"public/tags/炸物/index.html","hash":"c92ddec2c3611a5f7ff1b8c2b8f8775bf0d5774f","modified":1486300066771},{"_id":"public/tags/夜市/index.html","hash":"7bf719aacf6c141c93f5ac57919131d4ed48eea6","modified":1486300066771},{"_id":"public/tags/心理學/index.html","hash":"eb0af5a34cd35a6c9156a68b581f63a8a2faf443","modified":1486300066771},{"_id":"public/tags/自我成長/index.html","hash":"b8f45a620a928e125bf3fe78a5d3ab1923028895","modified":1486300066771},{"_id":"public/images/javascript.jpg","hash":"40d3dbea4443273ddc3c9feffafb6277fcb41d8b","modified":1486300066771},{"_id":"public/images/favicon.png","hash":"028b7a5d727b0b0417cf903d060f86464be994d7","modified":1486300066771},{"_id":"public/images/logo.png","hash":"028b7a5d727b0b0417cf903d060f86464be994d7","modified":1486300066772},{"_id":"public/images/logo-v2.png","hash":"f889dee2852cba35ff08a658815757e7028c16f5","modified":1486300066772},{"_id":"public/images/me.jpg","hash":"0383a7120c65d68452917a61b6ae08ee79959478","modified":1486300066772},{"_id":"public/images/TTtimer/ic_launcher.png","hash":"80deb1892604a3ec7154a9d4bc36477ba8fd2c2f","modified":1486300066772},{"_id":"public/images/assets/white.png","hash":"695de6b09c134b24448a33f7a4048ba6d8e0cbb8","modified":1486300066772},{"_id":"public/images/books/CleanCode_thumbnail.jpg","hash":"2e321e715a452dade31b72d038b01500367c127b","modified":1486300066772},{"_id":"public/images/books/被討厭的勇氣.jpg","hash":"9dfc72e0fbf9cc441d7278c25a58ea9728b3fcf2","modified":1486300066772},{"_id":"public/images/books/CleanCode.jpg","hash":"7af426e4001071c7b235cf7accf9b1a6c81a04cf","modified":1486300066772},{"_id":"public/images/foods/雞排/惡魔雞排-thumbnail.jpg","hash":"47145118855ebd03149293b45e0c62ba41f25ad6","modified":1486300066772},{"_id":"public/images/foods/雞排/惡魔雞排.jpg","hash":"facff2903c5a8c43aef22b93c1513582d614a44b","modified":1486300066772},{"_id":"public/images/foods/雞排/狂暴惡魔雞排.jpg","hash":"1bac24617fb1920128327ff5e403bd76cbd56233","modified":1486300066772},{"_id":"public/images/foods/雞排/艋舺雞排.jpg","hash":"65f088c01c9e36d3b8c9945ea24f80249231458a","modified":1486300066772},{"_id":"public/images/foods/雞排/艋舺雞排側切面.jpg","hash":"a9057686ddfc415751d8a7a767264e2b76a29937","modified":1486300066772},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1486300066772},{"_id":"public/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1486300066772},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1486300066772},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1486300066772},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1486300066772},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1486300066772},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1486300066772},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1486300066772},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1486300066772},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1486300066772},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1486300066772},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1486300066772},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1486300066772},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1486300066772},{"_id":"public/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1486300066772},{"_id":"public/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1486300066773},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1486300066773},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1486300066773},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1486300066773},{"_id":"public/images/TTtimer/working_finish.jpg","hash":"31efdfa759f107c21ca160ab4b25a3a6f84ed064","modified":1486300067298},{"_id":"public/images/foods/雞排/天使雞排.jpg","hash":"b9c0706ec279ff4e9c967b6b1ed3e6cb8d448dff","modified":1486300067300},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1486300067305},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1486300067305},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1486300067305},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1486300067305},{"_id":"public/js/main.js","hash":"1faffdc7aa7f0d28e85edbf49c99de3ad0b65753","modified":1486300067313},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1486300067313},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1486300067313},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1486300067313},{"_id":"public/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1486300067313},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1486300067313},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1486300067313},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1486300067314},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1486300067314},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1486300067314},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1486300067314},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1486300067314},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1486300067314},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1486300067314},{"_id":"public/css/style.css","hash":"f0a54465143e6f1a9793af79e7eeb6a8fe43599d","modified":1486300067314},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1486300067314},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1486300067314},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1486300067314},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1486300067314},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1486300067315},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1486300067315},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1486300067315},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1486300067315},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1486300067315},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1486300067315},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1486300067316},{"_id":"public/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1486300067316},{"_id":"public/images/TTtimer/demo.jpg","hash":"2886b170772d9e8a21df2451a64f2a32682ad721","modified":1486300067316},{"_id":"public/images/TTtimer/demo2.jpg","hash":"1caf5b4d931d83f2394cd034b6cd805eeb4309c4","modified":1486300067316},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1486300067316},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1486300067333}],"Category":[{"name":"社群活動","_id":"ciysookv30004c0u0ug2bck9p"},{"name":"Node.js","_id":"ciysookvt000fc0u05qgy88g4"},{"name":"JavaScript","_id":"ciysookw0000kc0u0x6qj6p4m"},{"name":"雜七雜八","_id":"ciysookw2000nc0u0x2lzvjke"},{"name":"好書筆記","_id":"ciysookw4000sc0u0uttdurns"},{"name":"吃吃喝喝","_id":"ciysookw7000yc0u04s9gexxg"}],"Data":[],"Page":[{"title":"About","date":"2017-01-31T01:40:49.000Z","layout":"about","_content":"\n# AndrewChen\n\n### Node.js backend developer\n\n*****\n\n#### <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> &nbsp;&nbsp;&nbsp; Taipei, Taiwan\n#### <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp; chenpoanandrew@gmail.com\n\n如果對部落格內容有任何疑問，或是發現錯誤歡迎透過 Facebook 或是 Gamil 聯絡，請各位多指教。更多關於工作經歷、個人接案經驗也會在日後逐步更新到部落格中。\n","source":"about/index.md","raw":"title: about\ndate: 2017-01-31 09:40:49\nlayout: \"about\"\n---\n\n# AndrewChen\n\n### Node.js backend developer\n\n*****\n\n#### <i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> &nbsp;&nbsp;&nbsp; Taipei, Taiwan\n#### <i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp; chenpoanandrew@gmail.com\n\n如果對部落格內容有任何疑問，或是發現錯誤歡迎透過 Facebook 或是 Gamil 聯絡，請各位多指教。更多關於工作經歷、個人接案經驗也會在日後逐步更新到部落格中。\n","updated":"2017-02-05T03:44:33.000Z","path":"about/index.html","comments":1,"_id":"ciysookuv0001c0u0qgc1uswc","content":"<h1 id=\"AndrewChen\"><a href=\"#AndrewChen\" class=\"headerlink\" title=\"AndrewChen\"></a>AndrewChen</h1><h3 id=\"Node-js-backend-developer\"><a href=\"#Node-js-backend-developer\" class=\"headerlink\" title=\"Node.js backend developer\"></a>Node.js backend developer</h3><hr>\n<h4 id=\"nbsp-nbsp-nbsp-Taipei-Taiwan\"><a href=\"#nbsp-nbsp-nbsp-Taipei-Taiwan\" class=\"headerlink\" title=\" &nbsp;&nbsp;&nbsp; Taipei, Taiwan\"></a><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> &nbsp;&nbsp;&nbsp; Taipei, Taiwan</h4><h4 id=\"nbsp-nbsp-chenpoanandrew-gmail-com\"><a href=\"#nbsp-nbsp-chenpoanandrew-gmail-com\" class=\"headerlink\" title=\" &nbsp;&nbsp; chenpoanandrew@gmail.com\"></a><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp; chenpoanandrew@gmail.com</h4><p>如果對部落格內容有任何疑問，或是發現錯誤歡迎透過 Facebook 或是 Gamil 聯絡，請各位多指教。更多關於工作經歷、個人接案經驗也會在日後逐步更新到部落格中。</p>\n","excerpt":"","more":"<h1 id=\"AndrewChen\"><a href=\"#AndrewChen\" class=\"headerlink\" title=\"AndrewChen\"></a>AndrewChen</h1><h3 id=\"Node-js-backend-developer\"><a href=\"#Node-js-backend-developer\" class=\"headerlink\" title=\"Node.js backend developer\"></a>Node.js backend developer</h3><hr>\n<h4 id=\"nbsp-nbsp-nbsp-Taipei-Taiwan\"><a href=\"#nbsp-nbsp-nbsp-Taipei-Taiwan\" class=\"headerlink\" title=\" &nbsp;&nbsp;&nbsp; Taipei, Taiwan\"></a><i class=\"fa fa-map-marker\" aria-hidden=\"true\"></i> &nbsp;&nbsp;&nbsp; Taipei, Taiwan</h4><h4 id=\"nbsp-nbsp-chenpoanandrew-gmail-com\"><a href=\"#nbsp-nbsp-chenpoanandrew-gmail-com\" class=\"headerlink\" title=\" &nbsp;&nbsp; chenpoanandrew@gmail.com\"></a><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i> &nbsp;&nbsp; chenpoanandrew@gmail.com</h4><p>如果對部落格內容有任何疑問，或是發現錯誤歡迎透過 Facebook 或是 Gamil 聯絡，請各位多指教。更多關於工作經歷、個人接案經驗也會在日後逐步更新到部落格中。</p>\n"},{"title":"Categories","date":"2017-02-02T11:31:23.000Z","layout":"categories","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"title: categories\ndate: 2017-02-02 19:31:23\nlayout: categories\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-02-04T06:59:56.000Z","path":"categories/index.html","_id":"ciysookv00003c0u01dtg6364","content":"","excerpt":"","more":""},{"title":"Tags","date":"2017-02-02T11:31:23.000Z","layout":"tags","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: tags\ndate: 2017-02-02 19:31:23\nlayout: tags\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-02-04T06:59:56.000Z","path":"tags/index.html","_id":"ciysookvd0007c0u0baf0x63f","content":"","excerpt":"","more":""}],"Post":[{"title":"淺談前端框架未來，Angular, React, 還是...？","date":"2015-08-02T01:13:44.000Z","thumbnail":"http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png","_content":"\n> 本篇文上是本人Andrew Chen為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![前端框架未來？React, Angular or ..?](http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png)\n\n前端入坑深似海，一入宅門出不來。這肯定是許多前端工程師可以體認到的共同感觸，前端真可以說是一個坑，維繫大家能夠持續學習的動機，除了熱情，應該就還是熱情吧。\n\n## 淺談前端框架\n\n<!--more-->\n\n隨著前端應用變化越來越多，因此許多前端框架不斷的推陳出新，從早期大家所熟知的 [batman.js](http://batmanjs.org), [backbone.js](http://backbonejs.org), [emberjs](http://emberjs.com) 在中期也開始出現了許多不同框架，其中到了 Google 踏進 Angular.js 之後前端框架正式熱門起來，也掀起另外一波大戰。\n\n隨著世代的轉移，JavaScript 漸漸語法轉移到 ES6，語法不同，開始有了不同應用，也因此又出現了令人亮眼的新秀：[Aurelia](http://aurelia.io)。\n\n由於前端框架的世界更新相當迅速，不斷有新的Framwork出現，各家開發者對自己熟悉的框架各執其詞，其實相當難定義何者叫好。\n\n## 前端框架未來？React, Angular ?\n\n[React](http://facebook.github.io/react/) 和 [Angular](http://aurelia.io) 目前為前端兩大流行的框架，兩者的風格迥異。\n\nReact 主打 Single Source of True 和 Flux 的單項資料流，重新以元件的思維角度去設計 WebApp，最後又採用相同思維可以進行開發 iOS, Android native 程式框架 - React Native 讓大家眼睛為之一亮。\n\n而在Angular目前的情況較為不明朗，相當多的開發者正在使用能穩定運作的 1.x 版本，但是 Angular 2.x 的版本卻面臨了相當大的改版，而且並沒有支援 1.x 的部分。 Angular 最大亮點在雙向資料綁定，簡潔的資料綁定和監控配上快節奏的開發技巧時，產生令人驚豔的開發速度。\n\nReact 跟 Angular 整體的核心思維是相當不同的，React 特色在於簡化的開發邏輯與資料流，單純的單項資料流讓開發流程和除錯都容易了許多，React 的結構設計也讓抽取元件變得直觀與單純，React 傾向於將開發簡化，在設計好架構與資料結構後就減少犯錯的機會。\n\n但從另一個角度來說，React針對單一的操作，要撰寫的程式碼多出了許多，整個架構也變得龐大。而 Angular 則相反，Angular 在處理資料時相當快速且方便，雙向的資料綁定讓開者並不需要思考太多元件對應的關係，但也因此最終可能會讓整個專案陷入混亂，Angular 在抽取元件時比 React 需要更多的開發技巧，對整體團隊的開發素質要求也相對的更高。\n\n## 新的選擇 - Aurelia\n\nAurelia 或許可以說介於 React 和 Angular 兩者之間，Aurelia 目前為相當新秀的開發框架，他本身與 Angular 的資料綁定方式相當類似，不僅僅對 Angular 的開發者相當容易上手，安插在 HTML5 中的屬性也更加語意化。\n\nAurelia 的核心圍繞在模板上，因此他似乎同時擁有了 React 類似元件的觀念，又同時有 Angular 綁定資料的手法，算是相當多元，除此之外 Aurelia 對 ES6, ES7 擁有更高的支援度。\n\n當然目前 Aurelia 還在持續開發中，雖然版本尚未穩定，但是已經是個值得注目的前端框架，可以開始試著去執行，了解 Aurelia ，或許在現今 Single Page App 爆炸性成長的階段，Aurelia 能在未來佔有一席之地。\n\n也許未來 JavaScript 真的能夠做到前後端統一程式碼進行開發，也有可能踏入 hardware 開發領域，這都需要時間來證明，當然也需要各位的投入，就讓我們持續關注這個世代的變化吧。\n","source":"_posts/20150802_JS_AngularReactOrOther.md","raw":"title: 淺談前端框架未來，Angular, React, 還是...？\ndate: 2015-08-02 09:13:44\ncategories: 社群活動\nthumbnail: http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png\ntags:\n- 社群活動\n- JavaScript\n- Angular.js\n- React.js\n\n---\n\n> 本篇文上是本人Andrew Chen為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![前端框架未來？React, Angular or ..?](http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png)\n\n前端入坑深似海，一入宅門出不來。這肯定是許多前端工程師可以體認到的共同感觸，前端真可以說是一個坑，維繫大家能夠持續學習的動機，除了熱情，應該就還是熱情吧。\n\n## 淺談前端框架\n\n<!--more-->\n\n隨著前端應用變化越來越多，因此許多前端框架不斷的推陳出新，從早期大家所熟知的 [batman.js](http://batmanjs.org), [backbone.js](http://backbonejs.org), [emberjs](http://emberjs.com) 在中期也開始出現了許多不同框架，其中到了 Google 踏進 Angular.js 之後前端框架正式熱門起來，也掀起另外一波大戰。\n\n隨著世代的轉移，JavaScript 漸漸語法轉移到 ES6，語法不同，開始有了不同應用，也因此又出現了令人亮眼的新秀：[Aurelia](http://aurelia.io)。\n\n由於前端框架的世界更新相當迅速，不斷有新的Framwork出現，各家開發者對自己熟悉的框架各執其詞，其實相當難定義何者叫好。\n\n## 前端框架未來？React, Angular ?\n\n[React](http://facebook.github.io/react/) 和 [Angular](http://aurelia.io) 目前為前端兩大流行的框架，兩者的風格迥異。\n\nReact 主打 Single Source of True 和 Flux 的單項資料流，重新以元件的思維角度去設計 WebApp，最後又採用相同思維可以進行開發 iOS, Android native 程式框架 - React Native 讓大家眼睛為之一亮。\n\n而在Angular目前的情況較為不明朗，相當多的開發者正在使用能穩定運作的 1.x 版本，但是 Angular 2.x 的版本卻面臨了相當大的改版，而且並沒有支援 1.x 的部分。 Angular 最大亮點在雙向資料綁定，簡潔的資料綁定和監控配上快節奏的開發技巧時，產生令人驚豔的開發速度。\n\nReact 跟 Angular 整體的核心思維是相當不同的，React 特色在於簡化的開發邏輯與資料流，單純的單項資料流讓開發流程和除錯都容易了許多，React 的結構設計也讓抽取元件變得直觀與單純，React 傾向於將開發簡化，在設計好架構與資料結構後就減少犯錯的機會。\n\n但從另一個角度來說，React針對單一的操作，要撰寫的程式碼多出了許多，整個架構也變得龐大。而 Angular 則相反，Angular 在處理資料時相當快速且方便，雙向的資料綁定讓開者並不需要思考太多元件對應的關係，但也因此最終可能會讓整個專案陷入混亂，Angular 在抽取元件時比 React 需要更多的開發技巧，對整體團隊的開發素質要求也相對的更高。\n\n## 新的選擇 - Aurelia\n\nAurelia 或許可以說介於 React 和 Angular 兩者之間，Aurelia 目前為相當新秀的開發框架，他本身與 Angular 的資料綁定方式相當類似，不僅僅對 Angular 的開發者相當容易上手，安插在 HTML5 中的屬性也更加語意化。\n\nAurelia 的核心圍繞在模板上，因此他似乎同時擁有了 React 類似元件的觀念，又同時有 Angular 綁定資料的手法，算是相當多元，除此之外 Aurelia 對 ES6, ES7 擁有更高的支援度。\n\n當然目前 Aurelia 還在持續開發中，雖然版本尚未穩定，但是已經是個值得注目的前端框架，可以開始試著去執行，了解 Aurelia ，或許在現今 Single Page App 爆炸性成長的階段，Aurelia 能在未來佔有一席之地。\n\n也許未來 JavaScript 真的能夠做到前後端統一程式碼進行開發，也有可能踏入 hardware 開發領域，這都需要時間來證明，當然也需要各位的投入，就讓我們持續關注這個世代的變化吧。\n","slug":"20150802_JS_AngularReactOrOther","published":1,"updated":"2017-02-04T06:59:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookup0000c0u00ygkckbx","content":"<blockquote>\n<p>本篇文上是本人Andrew Chen為<a href=\"http://jsdc.tw\" target=\"_blank\" rel=\"external\">JSDC 2015</a>撰寫<br>感謝<a href=\"https://www.facebook.com/clonncd?fref=ts\" target=\"_blank\" rel=\"external\">Caeser Chi</a>給予指導</p>\n</blockquote>\n<p><img src=\"http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png\" alt=\"前端框架未來？React, Angular or ..?\"></p>\n<p>前端入坑深似海，一入宅門出不來。這肯定是許多前端工程師可以體認到的共同感觸，前端真可以說是一個坑，維繫大家能夠持續學習的動機，除了熱情，應該就還是熱情吧。</p>\n<h2 id=\"淺談前端框架\"><a href=\"#淺談前端框架\" class=\"headerlink\" title=\"淺談前端框架\"></a>淺談前端框架</h2><a id=\"more\"></a>\n<p>隨著前端應用變化越來越多，因此許多前端框架不斷的推陳出新，從早期大家所熟知的 <a href=\"http://batmanjs.org\" target=\"_blank\" rel=\"external\">batman.js</a>, <a href=\"http://backbonejs.org\" target=\"_blank\" rel=\"external\">backbone.js</a>, <a href=\"http://emberjs.com\" target=\"_blank\" rel=\"external\">emberjs</a> 在中期也開始出現了許多不同框架，其中到了 Google 踏進 Angular.js 之後前端框架正式熱門起來，也掀起另外一波大戰。</p>\n<p>隨著世代的轉移，JavaScript 漸漸語法轉移到 ES6，語法不同，開始有了不同應用，也因此又出現了令人亮眼的新秀：<a href=\"http://aurelia.io\" target=\"_blank\" rel=\"external\">Aurelia</a>。</p>\n<p>由於前端框架的世界更新相當迅速，不斷有新的Framwork出現，各家開發者對自己熟悉的框架各執其詞，其實相當難定義何者叫好。</p>\n<h2 id=\"前端框架未來？React-Angular\"><a href=\"#前端框架未來？React-Angular\" class=\"headerlink\" title=\"前端框架未來？React, Angular ?\"></a>前端框架未來？React, Angular ?</h2><p><a href=\"http://facebook.github.io/react/\" target=\"_blank\" rel=\"external\">React</a> 和 <a href=\"http://aurelia.io\" target=\"_blank\" rel=\"external\">Angular</a> 目前為前端兩大流行的框架，兩者的風格迥異。</p>\n<p>React 主打 Single Source of True 和 Flux 的單項資料流，重新以元件的思維角度去設計 WebApp，最後又採用相同思維可以進行開發 iOS, Android native 程式框架 - React Native 讓大家眼睛為之一亮。</p>\n<p>而在Angular目前的情況較為不明朗，相當多的開發者正在使用能穩定運作的 1.x 版本，但是 Angular 2.x 的版本卻面臨了相當大的改版，而且並沒有支援 1.x 的部分。 Angular 最大亮點在雙向資料綁定，簡潔的資料綁定和監控配上快節奏的開發技巧時，產生令人驚豔的開發速度。</p>\n<p>React 跟 Angular 整體的核心思維是相當不同的，React 特色在於簡化的開發邏輯與資料流，單純的單項資料流讓開發流程和除錯都容易了許多，React 的結構設計也讓抽取元件變得直觀與單純，React 傾向於將開發簡化，在設計好架構與資料結構後就減少犯錯的機會。</p>\n<p>但從另一個角度來說，React針對單一的操作，要撰寫的程式碼多出了許多，整個架構也變得龐大。而 Angular 則相反，Angular 在處理資料時相當快速且方便，雙向的資料綁定讓開者並不需要思考太多元件對應的關係，但也因此最終可能會讓整個專案陷入混亂，Angular 在抽取元件時比 React 需要更多的開發技巧，對整體團隊的開發素質要求也相對的更高。</p>\n<h2 id=\"新的選擇-Aurelia\"><a href=\"#新的選擇-Aurelia\" class=\"headerlink\" title=\"新的選擇 - Aurelia\"></a>新的選擇 - Aurelia</h2><p>Aurelia 或許可以說介於 React 和 Angular 兩者之間，Aurelia 目前為相當新秀的開發框架，他本身與 Angular 的資料綁定方式相當類似，不僅僅對 Angular 的開發者相當容易上手，安插在 HTML5 中的屬性也更加語意化。</p>\n<p>Aurelia 的核心圍繞在模板上，因此他似乎同時擁有了 React 類似元件的觀念，又同時有 Angular 綁定資料的手法，算是相當多元，除此之外 Aurelia 對 ES6, ES7 擁有更高的支援度。</p>\n<p>當然目前 Aurelia 還在持續開發中，雖然版本尚未穩定，但是已經是個值得注目的前端框架，可以開始試著去執行，了解 Aurelia ，或許在現今 Single Page App 爆炸性成長的階段，Aurelia 能在未來佔有一席之地。</p>\n<p>也許未來 JavaScript 真的能夠做到前後端統一程式碼進行開發，也有可能踏入 hardware 開發領域，這都需要時間來證明，當然也需要各位的投入，就讓我們持續關注這個世代的變化吧。</p>\n","excerpt":"<blockquote>\n<p>本篇文上是本人Andrew Chen為<a href=\"http://jsdc.tw\">JSDC 2015</a>撰寫<br>感謝<a href=\"https://www.facebook.com/clonncd?fref=ts\">Caeser Chi</a>給予指導</p>\n</blockquote>\n<p><img src=\"http://cdn.xenyomedia.com/sites/default/files/blog/rwd.png\" alt=\"前端框架未來？React, Angular or ..?\"></p>\n<p>前端入坑深似海，一入宅門出不來。這肯定是許多前端工程師可以體認到的共同感觸，前端真可以說是一個坑，維繫大家能夠持續學習的動機，除了熱情，應該就還是熱情吧。</p>\n<h2 id=\"淺談前端框架\"><a href=\"#淺談前端框架\" class=\"headerlink\" title=\"淺談前端框架\"></a>淺談前端框架</h2>","more":"<p>隨著前端應用變化越來越多，因此許多前端框架不斷的推陳出新，從早期大家所熟知的 <a href=\"http://batmanjs.org\">batman.js</a>, <a href=\"http://backbonejs.org\">backbone.js</a>, <a href=\"http://emberjs.com\">emberjs</a> 在中期也開始出現了許多不同框架，其中到了 Google 踏進 Angular.js 之後前端框架正式熱門起來，也掀起另外一波大戰。</p>\n<p>隨著世代的轉移，JavaScript 漸漸語法轉移到 ES6，語法不同，開始有了不同應用，也因此又出現了令人亮眼的新秀：<a href=\"http://aurelia.io\">Aurelia</a>。</p>\n<p>由於前端框架的世界更新相當迅速，不斷有新的Framwork出現，各家開發者對自己熟悉的框架各執其詞，其實相當難定義何者叫好。</p>\n<h2 id=\"前端框架未來？React-Angular\"><a href=\"#前端框架未來？React-Angular\" class=\"headerlink\" title=\"前端框架未來？React, Angular ?\"></a>前端框架未來？React, Angular ?</h2><p><a href=\"http://facebook.github.io/react/\">React</a> 和 <a href=\"http://aurelia.io\">Angular</a> 目前為前端兩大流行的框架，兩者的風格迥異。</p>\n<p>React 主打 Single Source of True 和 Flux 的單項資料流，重新以元件的思維角度去設計 WebApp，最後又採用相同思維可以進行開發 iOS, Android native 程式框架 - React Native 讓大家眼睛為之一亮。</p>\n<p>而在Angular目前的情況較為不明朗，相當多的開發者正在使用能穩定運作的 1.x 版本，但是 Angular 2.x 的版本卻面臨了相當大的改版，而且並沒有支援 1.x 的部分。 Angular 最大亮點在雙向資料綁定，簡潔的資料綁定和監控配上快節奏的開發技巧時，產生令人驚豔的開發速度。</p>\n<p>React 跟 Angular 整體的核心思維是相當不同的，React 特色在於簡化的開發邏輯與資料流，單純的單項資料流讓開發流程和除錯都容易了許多，React 的結構設計也讓抽取元件變得直觀與單純，React 傾向於將開發簡化，在設計好架構與資料結構後就減少犯錯的機會。</p>\n<p>但從另一個角度來說，React針對單一的操作，要撰寫的程式碼多出了許多，整個架構也變得龐大。而 Angular 則相反，Angular 在處理資料時相當快速且方便，雙向的資料綁定讓開者並不需要思考太多元件對應的關係，但也因此最終可能會讓整個專案陷入混亂，Angular 在抽取元件時比 React 需要更多的開發技巧，對整體團隊的開發素質要求也相對的更高。</p>\n<h2 id=\"新的選擇-Aurelia\"><a href=\"#新的選擇-Aurelia\" class=\"headerlink\" title=\"新的選擇 - Aurelia\"></a>新的選擇 - Aurelia</h2><p>Aurelia 或許可以說介於 React 和 Angular 兩者之間，Aurelia 目前為相當新秀的開發框架，他本身與 Angular 的資料綁定方式相當類似，不僅僅對 Angular 的開發者相當容易上手，安插在 HTML5 中的屬性也更加語意化。</p>\n<p>Aurelia 的核心圍繞在模板上，因此他似乎同時擁有了 React 類似元件的觀念，又同時有 Angular 綁定資料的手法，算是相當多元，除此之外 Aurelia 對 ES6, ES7 擁有更高的支援度。</p>\n<p>當然目前 Aurelia 還在持續開發中，雖然版本尚未穩定，但是已經是個值得注目的前端框架，可以開始試著去執行，了解 Aurelia ，或許在現今 Single Page App 爆炸性成長的階段，Aurelia 能在未來佔有一席之地。</p>\n<p>也許未來 JavaScript 真的能夠做到前後端統一程式碼進行開發，也有可能踏入 hardware 開發領域，這都需要時間來證明，當然也需要各位的投入，就讓我們持續關注這個世代的變化吧。</p>"},{"title":"JS Devil Day 參與心得","date":"2015-08-02T01:05:42.000Z","thumbnail":"https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg","_content":"\n> 本篇文上是我為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![JS Devil Day](https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg)\n\nJS Devil Day 是本次 JSDC 2015 所舉辦第一場對外 Meetup，也是首次透過北中南三方連線方式進行，本次以參與者角色，記錄此次活動。\n\nJS Devil Day 當天主要有三個主題：Angular.js、ECMAScript6、講者對談與交流。\n\n## 專家分享\n\n<!--more-->\n\n儘管對 Angular.js相當不熟悉，透過講者阿梨的分享讓我對Angular.js的概念有些許的了解，事後座談時講者也推薦初學者直接以Angular.js 2.0作為起手版本。\n\n接著是 Jeremy 對 ES6、webpack 提出了幾個重點，在 ES6 中可以明顯地感受到 JavaScript 已經開始嘗試解決 ES5 一些為人詬病的問題，包括區域變數、類別、模組化等等，同時 ES6 內建了 promise 和 generator ，同時在 ES6 解決了過複雜的 callback function和流程控制，另外 ES6 採用許多 coffeeScript 語法讓結構更為簡潔。\n\n個人認為 ES6 讓 Javascript 成為了更完整的開發語言，也讓 Javascript 減少了許多舊有的小問題，也不必仰賴開發者用奇技淫巧去嘗試解決問題。\n\n現今主流瀏覽器諸如：Chrome、Safari、Firefox 等等，已經逐漸開始支援 ES6，但尚未完全支援。在瀏覽器完全支援 ES6 之前，我們可以透過 babel 在程式執行之前將 ES6 的程式碼轉譯成 ES5，讓瀏覽器完全整的支援 ES6 程式碼。\n\n另外 Jeremy 提到 webpack 和 JSCS ，協助團隊開發更為順暢，開發工具和技巧相當的重要。順暢的開發過程除了提高效率之外，也保護了開發者健康的肝。\n","source":"_posts/20150802_JS_JSDevilDay.md","raw":"title: JS Devil day 參與心得\ndate: 2015-08-02 09:05:42\nthumbnail: https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg\ncategories: 社群活動\ntags:\n- 社群活動\n- JavaScript\n- ES6\n---\n\n> 本篇文上是我為[JSDC 2015](http://jsdc.tw)撰寫\n> 感謝[Caeser Chi](https://www.facebook.com/clonncd?fref=ts)給予指導\n\n![JS Devil Day](https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg)\n\nJS Devil Day 是本次 JSDC 2015 所舉辦第一場對外 Meetup，也是首次透過北中南三方連線方式進行，本次以參與者角色，記錄此次活動。\n\nJS Devil Day 當天主要有三個主題：Angular.js、ECMAScript6、講者對談與交流。\n\n## 專家分享\n\n<!--more-->\n\n儘管對 Angular.js相當不熟悉，透過講者阿梨的分享讓我對Angular.js的概念有些許的了解，事後座談時講者也推薦初學者直接以Angular.js 2.0作為起手版本。\n\n接著是 Jeremy 對 ES6、webpack 提出了幾個重點，在 ES6 中可以明顯地感受到 JavaScript 已經開始嘗試解決 ES5 一些為人詬病的問題，包括區域變數、類別、模組化等等，同時 ES6 內建了 promise 和 generator ，同時在 ES6 解決了過複雜的 callback function和流程控制，另外 ES6 採用許多 coffeeScript 語法讓結構更為簡潔。\n\n個人認為 ES6 讓 Javascript 成為了更完整的開發語言，也讓 Javascript 減少了許多舊有的小問題，也不必仰賴開發者用奇技淫巧去嘗試解決問題。\n\n現今主流瀏覽器諸如：Chrome、Safari、Firefox 等等，已經逐漸開始支援 ES6，但尚未完全支援。在瀏覽器完全支援 ES6 之前，我們可以透過 babel 在程式執行之前將 ES6 的程式碼轉譯成 ES5，讓瀏覽器完全整的支援 ES6 程式碼。\n\n另外 Jeremy 提到 webpack 和 JSCS ，協助團隊開發更為順暢，開發工具和技巧相當的重要。順暢的開發過程除了提高效率之外，也保護了開發者健康的肝。\n","slug":"20150802_JS_JSDevilDay","published":1,"updated":"2017-02-04T06:59:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookux0002c0u01z4ijvxl","content":"<blockquote>\n<p>本篇文上是我為<a href=\"http://jsdc.tw\" target=\"_blank\" rel=\"external\">JSDC 2015</a>撰寫<br>感謝<a href=\"https://www.facebook.com/clonncd?fref=ts\" target=\"_blank\" rel=\"external\">Caeser Chi</a>給予指導</p>\n</blockquote>\n<p><img src=\"https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg\" alt=\"JS Devil Day\"></p>\n<p>JS Devil Day 是本次 JSDC 2015 所舉辦第一場對外 Meetup，也是首次透過北中南三方連線方式進行，本次以參與者角色，記錄此次活動。</p>\n<p>JS Devil Day 當天主要有三個主題：Angular.js、ECMAScript6、講者對談與交流。</p>\n<h2 id=\"專家分享\"><a href=\"#專家分享\" class=\"headerlink\" title=\"專家分享\"></a>專家分享</h2><a id=\"more\"></a>\n<p>儘管對 Angular.js相當不熟悉，透過講者阿梨的分享讓我對Angular.js的概念有些許的了解，事後座談時講者也推薦初學者直接以Angular.js 2.0作為起手版本。</p>\n<p>接著是 Jeremy 對 ES6、webpack 提出了幾個重點，在 ES6 中可以明顯地感受到 JavaScript 已經開始嘗試解決 ES5 一些為人詬病的問題，包括區域變數、類別、模組化等等，同時 ES6 內建了 promise 和 generator ，同時在 ES6 解決了過複雜的 callback function和流程控制，另外 ES6 採用許多 coffeeScript 語法讓結構更為簡潔。</p>\n<p>個人認為 ES6 讓 Javascript 成為了更完整的開發語言，也讓 Javascript 減少了許多舊有的小問題，也不必仰賴開發者用奇技淫巧去嘗試解決問題。</p>\n<p>現今主流瀏覽器諸如：Chrome、Safari、Firefox 等等，已經逐漸開始支援 ES6，但尚未完全支援。在瀏覽器完全支援 ES6 之前，我們可以透過 babel 在程式執行之前將 ES6 的程式碼轉譯成 ES5，讓瀏覽器完全整的支援 ES6 程式碼。</p>\n<p>另外 Jeremy 提到 webpack 和 JSCS ，協助團隊開發更為順暢，開發工具和技巧相當的重要。順暢的開發過程除了提高效率之外，也保護了開發者健康的肝。</p>\n","excerpt":"<blockquote>\n<p>本篇文上是我為<a href=\"http://jsdc.tw\">JSDC 2015</a>撰寫<br>感謝<a href=\"https://www.facebook.com/clonncd?fref=ts\">Caeser Chi</a>給予指導</p>\n</blockquote>\n<p><img src=\"https://lh3.googleusercontent.com/-mm7RHTIWOAw/VXT1RxK7xrI/AAAAAAAAQK0/LQGMSNo2aNE/s0/post-0-0-83751300-1350904929_large.jpg\" alt=\"JS Devil Day\"></p>\n<p>JS Devil Day 是本次 JSDC 2015 所舉辦第一場對外 Meetup，也是首次透過北中南三方連線方式進行，本次以參與者角色，記錄此次活動。</p>\n<p>JS Devil Day 當天主要有三個主題：Angular.js、ECMAScript6、講者對談與交流。</p>\n<h2 id=\"專家分享\"><a href=\"#專家分享\" class=\"headerlink\" title=\"專家分享\"></a>專家分享</h2>","more":"<p>儘管對 Angular.js相當不熟悉，透過講者阿梨的分享讓我對Angular.js的概念有些許的了解，事後座談時講者也推薦初學者直接以Angular.js 2.0作為起手版本。</p>\n<p>接著是 Jeremy 對 ES6、webpack 提出了幾個重點，在 ES6 中可以明顯地感受到 JavaScript 已經開始嘗試解決 ES5 一些為人詬病的問題，包括區域變數、類別、模組化等等，同時 ES6 內建了 promise 和 generator ，同時在 ES6 解決了過複雜的 callback function和流程控制，另外 ES6 採用許多 coffeeScript 語法讓結構更為簡潔。</p>\n<p>個人認為 ES6 讓 Javascript 成為了更完整的開發語言，也讓 Javascript 減少了許多舊有的小問題，也不必仰賴開發者用奇技淫巧去嘗試解決問題。</p>\n<p>現今主流瀏覽器諸如：Chrome、Safari、Firefox 等等，已經逐漸開始支援 ES6，但尚未完全支援。在瀏覽器完全支援 ES6 之前，我們可以透過 babel 在程式執行之前將 ES6 的程式碼轉譯成 ES5，讓瀏覽器完全整的支援 ES6 程式碼。</p>\n<p>另外 Jeremy 提到 webpack 和 JSCS ，協助團隊開發更為順暢，開發工具和技巧相當的重要。順暢的開發過程除了提高效率之外，也保護了開發者健康的肝。</p>"},{"title":"Redis - Node.js 記憶體快取","date":"2015-08-16T03:01:07.000Z","thumbnail":"https://redislabs.com/wp-content/images/redis-logo.png","_content":"\n![Redis](https://redislabs.com/wp-content/images/redis-logo.png)\n\n* [Redis](http://redis.io)\n* [Redis - 官方文件](http://redis.io/documentation)\n* [Redis - npm](https://www.npmjs.com/package/redis)\n* [Redis - GUI](http://redisdesktop.com)\n\nRedis 是以 key-value 的形式在伺服器的記憶體中儲存資訊的方式，為伺服器命名做快取(cache)。有別於其他 noSQL 或是 RDB，key-value 即是使用一個 key 的值對應到一筆資料。而 Redis 的特色就是將這筆資料，寫在記憶體裡面。\n\n大概有幾種狀況會將資料寫入到快取中：\n\n* 在一定時間內會被大量請求的資料，如：新聞的 Top 10。\n* 某些伺服器會頻繁使用的資料，或全域變數。如：\n* 測試用的資料，短時間內要使用的假資料。\n* 也能當成 Session 使用。(相當不健康的觀念)\n\nRedis 本身會瓜分伺服器的記憶體來使用，Node.js 連線所使用的記憶體相對於 PHP/Apache 較少，除非能非常準確地掌握 Session 的數量，否則不建議 Redit 當成 Session 使用，同樣的意思不應該將 Redis 當成資料庫來只用。如果對 Redis 有相當大的需求，應該特地架設 Redis 的伺服器，避免兩套系統互相搶奪記憶體資源。\n\n## 安裝\n\n<!--more-->\n\n先從官方網站下載 Redis，解開壓縮檔之後，在資料夾下執行以下指令\n\n``` bat\n$ make\n```\n\n輸入指令後，Redis 會自行安裝，需要一段時間\n\n``` bat\n$ make test\n```\n\nRedis 會自行進行測試，測時完成後即可啟動，啟動並不需要在指定的資料夾下，屬於全域的\n\n``` bat\n$ redis-server\n```\n\n接著在 [Redis - GUI](http://redisdesktop.com) 的介面中進行連線就可以檢視現在 Redis 內的資料。\n\n\n## 使用\n\n在 Node.js 引用 Redis 的套件並且連線\n\n``` javascript\nvar redis = require(\"redis\").createClient('6379', '127.0.0.1'); //port, IP\n```\n\nredis.set 寫入值\n\n``` javascript\nredis.set( key, value, function( err, reply ){\n  console.log( reply.toString() ); // 新增成功會回傳 ok\n});\n```\n\nredis.get 取得值\n\n``` javascript\nredis.get( key, function( err, reply ){\n  console.log( reply.toString() ); // 新增會回傳 value\n});\n```\n\ncache 資料的存活時間\n\n``` javascript\nredis.expire( key, 60);\n```\n\nredis 錯誤 callback function\n\n``` javascript\nredis.on( \"connect\", callback );\n```\n\nredis 錯誤 callback function\n\n``` javascript\nredis.on( \"error\", callback );\n```\n\nredis 驗證\n如果在 redis.conf 中有設定需要驗證的話，須在在此填入驗證碼，類似密碼的意思。\n\n``` javascript\nredis.auth(\"AndrewChen\");\n```\n\n## 結語\n\nRedis 基本上安裝完成就成功一半了，簡易的 set/get 即可使用，Redis 的操作本身不難，但謹慎的使用，小心記憶體的使用量，避免超額使用或是佔據了伺服器的空間。另外定期簡單的透過GUI介面檢查 Redis 的狀況也是相當不錯的選擇。\n","source":"_posts/20150816_JS_redis.md","raw":"title: Redis - Node.js 記憶體快取\ndate: 2015-08-16 11:01:07\ncategories: Node.js\nthumbnail: https://redislabs.com/wp-content/images/redis-logo.png\ntags:\n- Node.js\n- JavaScript\n- 學習筆記\n- 教學\n\n---\n\n![Redis](https://redislabs.com/wp-content/images/redis-logo.png)\n\n* [Redis](http://redis.io)\n* [Redis - 官方文件](http://redis.io/documentation)\n* [Redis - npm](https://www.npmjs.com/package/redis)\n* [Redis - GUI](http://redisdesktop.com)\n\nRedis 是以 key-value 的形式在伺服器的記憶體中儲存資訊的方式，為伺服器命名做快取(cache)。有別於其他 noSQL 或是 RDB，key-value 即是使用一個 key 的值對應到一筆資料。而 Redis 的特色就是將這筆資料，寫在記憶體裡面。\n\n大概有幾種狀況會將資料寫入到快取中：\n\n* 在一定時間內會被大量請求的資料，如：新聞的 Top 10。\n* 某些伺服器會頻繁使用的資料，或全域變數。如：\n* 測試用的資料，短時間內要使用的假資料。\n* 也能當成 Session 使用。(相當不健康的觀念)\n\nRedis 本身會瓜分伺服器的記憶體來使用，Node.js 連線所使用的記憶體相對於 PHP/Apache 較少，除非能非常準確地掌握 Session 的數量，否則不建議 Redit 當成 Session 使用，同樣的意思不應該將 Redis 當成資料庫來只用。如果對 Redis 有相當大的需求，應該特地架設 Redis 的伺服器，避免兩套系統互相搶奪記憶體資源。\n\n## 安裝\n\n<!--more-->\n\n先從官方網站下載 Redis，解開壓縮檔之後，在資料夾下執行以下指令\n\n``` bat\n$ make\n```\n\n輸入指令後，Redis 會自行安裝，需要一段時間\n\n``` bat\n$ make test\n```\n\nRedis 會自行進行測試，測時完成後即可啟動，啟動並不需要在指定的資料夾下，屬於全域的\n\n``` bat\n$ redis-server\n```\n\n接著在 [Redis - GUI](http://redisdesktop.com) 的介面中進行連線就可以檢視現在 Redis 內的資料。\n\n\n## 使用\n\n在 Node.js 引用 Redis 的套件並且連線\n\n``` javascript\nvar redis = require(\"redis\").createClient('6379', '127.0.0.1'); //port, IP\n```\n\nredis.set 寫入值\n\n``` javascript\nredis.set( key, value, function( err, reply ){\n  console.log( reply.toString() ); // 新增成功會回傳 ok\n});\n```\n\nredis.get 取得值\n\n``` javascript\nredis.get( key, function( err, reply ){\n  console.log( reply.toString() ); // 新增會回傳 value\n});\n```\n\ncache 資料的存活時間\n\n``` javascript\nredis.expire( key, 60);\n```\n\nredis 錯誤 callback function\n\n``` javascript\nredis.on( \"connect\", callback );\n```\n\nredis 錯誤 callback function\n\n``` javascript\nredis.on( \"error\", callback );\n```\n\nredis 驗證\n如果在 redis.conf 中有設定需要驗證的話，須在在此填入驗證碼，類似密碼的意思。\n\n``` javascript\nredis.auth(\"AndrewChen\");\n```\n\n## 結語\n\nRedis 基本上安裝完成就成功一半了，簡易的 set/get 即可使用，Redis 的操作本身不難，但謹慎的使用，小心記憶體的使用量，避免超額使用或是佔據了伺服器的空間。另外定期簡單的透過GUI介面檢查 Redis 的狀況也是相當不錯的選擇。\n","slug":"20150816_JS_redis","published":1,"updated":"2017-02-04T06:59:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvc0006c0u03ead1pul","content":"<p><img src=\"https://redislabs.com/wp-content/images/redis-logo.png\" alt=\"Redis\"></p>\n<ul>\n<li><a href=\"http://redis.io\" target=\"_blank\" rel=\"external\">Redis</a></li>\n<li><a href=\"http://redis.io/documentation\" target=\"_blank\" rel=\"external\">Redis - 官方文件</a></li>\n<li><a href=\"https://www.npmjs.com/package/redis\" target=\"_blank\" rel=\"external\">Redis - npm</a></li>\n<li><a href=\"http://redisdesktop.com\" target=\"_blank\" rel=\"external\">Redis - GUI</a></li>\n</ul>\n<p>Redis 是以 key-value 的形式在伺服器的記憶體中儲存資訊的方式，為伺服器命名做快取(cache)。有別於其他 noSQL 或是 RDB，key-value 即是使用一個 key 的值對應到一筆資料。而 Redis 的特色就是將這筆資料，寫在記憶體裡面。</p>\n<p>大概有幾種狀況會將資料寫入到快取中：</p>\n<ul>\n<li>在一定時間內會被大量請求的資料，如：新聞的 Top 10。</li>\n<li>某些伺服器會頻繁使用的資料，或全域變數。如：</li>\n<li>測試用的資料，短時間內要使用的假資料。</li>\n<li>也能當成 Session 使用。(相當不健康的觀念)</li>\n</ul>\n<p>Redis 本身會瓜分伺服器的記憶體來使用，Node.js 連線所使用的記憶體相對於 PHP/Apache 較少，除非能非常準確地掌握 Session 的數量，否則不建議 Redit 當成 Session 使用，同樣的意思不應該將 Redis 當成資料庫來只用。如果對 Redis 有相當大的需求，應該特地架設 Redis 的伺服器，避免兩套系統互相搶奪記憶體資源。</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2><a id=\"more\"></a>\n<p>先從官方網站下載 Redis，解開壓縮檔之後，在資料夾下執行以下指令</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make</div></pre></td></tr></table></figure>\n<p>輸入指令後，Redis 會自行安裝，需要一段時間</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make test</div></pre></td></tr></table></figure>\n<p>Redis 會自行進行測試，測時完成後即可啟動，啟動並不需要在指定的資料夾下，屬於全域的</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ redis-server</div></pre></td></tr></table></figure>\n<p>接著在 <a href=\"http://redisdesktop.com\" target=\"_blank\" rel=\"external\">Redis - GUI</a> 的介面中進行連線就可以檢視現在 Redis 內的資料。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在 Node.js 引用 Redis 的套件並且連線</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> redis = <span class=\"built_in\">require</span>(<span class=\"string\">\"redis\"</span>).createClient(<span class=\"string\">'6379'</span>, <span class=\"string\">'127.0.0.1'</span>); <span class=\"comment\">//port, IP</span></div></pre></td></tr></table></figure>\n<p>redis.set 寫入值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.set( key, value, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> err, reply </span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log( reply.toString() ); <span class=\"comment\">// 新增成功會回傳 ok</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>redis.get 取得值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.get( key, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> err, reply </span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log( reply.toString() ); <span class=\"comment\">// 新增會回傳 value</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>cache 資料的存活時間</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.expire( key, <span class=\"number\">60</span>);</div></pre></td></tr></table></figure>\n<p>redis 錯誤 callback function</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.on( <span class=\"string\">\"connect\"</span>, callback );</div></pre></td></tr></table></figure>\n<p>redis 錯誤 callback function</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.on( <span class=\"string\">\"error\"</span>, callback );</div></pre></td></tr></table></figure>\n<p>redis 驗證<br>如果在 redis.conf 中有設定需要驗證的話，須在在此填入驗證碼，類似密碼的意思。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.auth(<span class=\"string\">\"AndrewChen\"</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>Redis 基本上安裝完成就成功一半了，簡易的 set/get 即可使用，Redis 的操作本身不難，但謹慎的使用，小心記憶體的使用量，避免超額使用或是佔據了伺服器的空間。另外定期簡單的透過GUI介面檢查 Redis 的狀況也是相當不錯的選擇。</p>\n","excerpt":"<p><img src=\"https://redislabs.com/wp-content/images/redis-logo.png\" alt=\"Redis\"></p>\n<ul>\n<li><a href=\"http://redis.io\">Redis</a></li>\n<li><a href=\"http://redis.io/documentation\">Redis - 官方文件</a></li>\n<li><a href=\"https://www.npmjs.com/package/redis\">Redis - npm</a></li>\n<li><a href=\"http://redisdesktop.com\">Redis - GUI</a></li>\n</ul>\n<p>Redis 是以 key-value 的形式在伺服器的記憶體中儲存資訊的方式，為伺服器命名做快取(cache)。有別於其他 noSQL 或是 RDB，key-value 即是使用一個 key 的值對應到一筆資料。而 Redis 的特色就是將這筆資料，寫在記憶體裡面。</p>\n<p>大概有幾種狀況會將資料寫入到快取中：</p>\n<ul>\n<li>在一定時間內會被大量請求的資料，如：新聞的 Top 10。</li>\n<li>某些伺服器會頻繁使用的資料，或全域變數。如：</li>\n<li>測試用的資料，短時間內要使用的假資料。</li>\n<li>也能當成 Session 使用。(相當不健康的觀念)</li>\n</ul>\n<p>Redis 本身會瓜分伺服器的記憶體來使用，Node.js 連線所使用的記憶體相對於 PHP/Apache 較少，除非能非常準確地掌握 Session 的數量，否則不建議 Redit 當成 Session 使用，同樣的意思不應該將 Redis 當成資料庫來只用。如果對 Redis 有相當大的需求，應該特地架設 Redis 的伺服器，避免兩套系統互相搶奪記憶體資源。</p>\n<h2 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h2>","more":"<p>先從官方網站下載 Redis，解開壓縮檔之後，在資料夾下執行以下指令</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make</div></pre></td></tr></table></figure>\n<p>輸入指令後，Redis 會自行安裝，需要一段時間</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ make test</div></pre></td></tr></table></figure>\n<p>Redis 會自行進行測試，測時完成後即可啟動，啟動並不需要在指定的資料夾下，屬於全域的</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ redis-server</div></pre></td></tr></table></figure>\n<p>接著在 <a href=\"http://redisdesktop.com\">Redis - GUI</a> 的介面中進行連線就可以檢視現在 Redis 內的資料。</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在 Node.js 引用 Redis 的套件並且連線</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> redis = <span class=\"built_in\">require</span>(<span class=\"string\">\"redis\"</span>).createClient(<span class=\"string\">'6379'</span>, <span class=\"string\">'127.0.0.1'</span>); <span class=\"comment\">//port, IP</span></div></pre></td></tr></table></figure>\n<p>redis.set 寫入值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.set( key, value, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> err, reply </span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log( reply.toString() ); <span class=\"comment\">// 新增成功會回傳 ok</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>redis.get 取得值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.get( key, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> err, reply </span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log( reply.toString() ); <span class=\"comment\">// 新增會回傳 value</span></div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>cache 資料的存活時間</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.expire( key, <span class=\"number\">60</span>);</div></pre></td></tr></table></figure>\n<p>redis 錯誤 callback function</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.on( <span class=\"string\">\"connect\"</span>, callback );</div></pre></td></tr></table></figure>\n<p>redis 錯誤 callback function</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.on( <span class=\"string\">\"error\"</span>, callback );</div></pre></td></tr></table></figure>\n<p>redis 驗證<br>如果在 redis.conf 中有設定需要驗證的話，須在在此填入驗證碼，類似密碼的意思。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">redis.auth(<span class=\"string\">\"AndrewChen\"</span>);</div></pre></td></tr></table></figure>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>Redis 基本上安裝完成就成功一半了，簡易的 set/get 即可使用，Redis 的操作本身不難，但謹慎的使用，小心記憶體的使用量，避免超額使用或是佔據了伺服器的空間。另外定期簡單的透過GUI介面檢查 Redis 的狀況也是相當不錯的選擇。</p>"},{"title":"JavaScript - .Bind() .Apply() .Call()","date":"2015-08-18T14:30:15.000Z","thumbnail":"/images/javascript.jpg","_content":"\n![javascript](/images/javascript.jpg)\n\n學習筆記，JavaScript 在綁定 Function 時有三種方式，分別為 `.bind()`,`.call()`, `.apply()`, 而這三種又有些許的差異：\n\n<!--more-->\n\n#### function .bind()\n\n.bind() 不會立即執行 function，並設定 `this` 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 `this` 的範疇。\n\n``` js\nfunc.bind( null, 1 ,2 ,3 ) ;   // 不會立即執行\n```\n\n#### function .call()\n\n.call() 呼叫 function，並設定 `this` 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 `this` 的範疇。\n\n``` js\nfunc.call( null, 1 ,2 ,3 ) ;   // 逐一傳入參數 (立即執行)\n```\n\n#### function .apply()\n\n.apply() 呼叫 function，並設定 `this` 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 `this` 的範疇。而參數是統一用一個陣列包起來，apply 會自行拆開傳入。\n\n\n``` js\nfunc.apply( null, [ 1, 2, 3 ] );  // 參數統一用 array 傳入 (立即執行)\n```\n","source":"_posts/20150818_JS_buildCallApply.md","raw":"title: JavaScript - .bind() .apply() .call()\ndate: 2015-08-18 22:30:15\ncategories: JavaScript\nthumbnail: /images/javascript.jpg\ntags:\n- JavaScript\n- 學習筆記\n- 教學\n\n---\n\n![javascript](/images/javascript.jpg)\n\n學習筆記，JavaScript 在綁定 Function 時有三種方式，分別為 `.bind()`,`.call()`, `.apply()`, 而這三種又有些許的差異：\n\n<!--more-->\n\n#### function .bind()\n\n.bind() 不會立即執行 function，並設定 `this` 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 `this` 的範疇。\n\n``` js\nfunc.bind( null, 1 ,2 ,3 ) ;   // 不會立即執行\n```\n\n#### function .call()\n\n.call() 呼叫 function，並設定 `this` 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 `this` 的範疇。\n\n``` js\nfunc.call( null, 1 ,2 ,3 ) ;   // 逐一傳入參數 (立即執行)\n```\n\n#### function .apply()\n\n.apply() 呼叫 function，並設定 `this` 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 `this` 的範疇。而參數是統一用一個陣列包起來，apply 會自行拆開傳入。\n\n\n``` js\nfunc.apply( null, [ 1, 2, 3 ] );  // 參數統一用 array 傳入 (立即執行)\n```\n","slug":"20150818_JS_buildCallApply","published":1,"updated":"2017-02-04T06:59:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvg0008c0u04zl1kxq6","content":"<p><img src=\"/images/javascript.jpg\" alt=\"javascript\"></p>\n<p>學習筆記，JavaScript 在綁定 Function 時有三種方式，分別為 <code>.bind()</code>,<code>.call()</code>, <code>.apply()</code>, 而這三種又有些許的差異：</p>\n<a id=\"more\"></a>\n<h4 id=\"function-bind\"><a href=\"#function-bind\" class=\"headerlink\" title=\"function .bind()\"></a>function .bind()</h4><p>.bind() 不會立即執行 function，並設定 <code>this</code> 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 <code>this</code> 的範疇。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.bind( <span class=\"literal\">null</span>, <span class=\"number\">1</span> ,<span class=\"number\">2</span> ,<span class=\"number\">3</span> ) ;   <span class=\"comment\">// 不會立即執行</span></div></pre></td></tr></table></figure>\n<h4 id=\"function-call\"><a href=\"#function-call\" class=\"headerlink\" title=\"function .call()\"></a>function .call()</h4><p>.call() 呼叫 function，並設定 <code>this</code> 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 <code>this</code> 的範疇。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.call( <span class=\"literal\">null</span>, <span class=\"number\">1</span> ,<span class=\"number\">2</span> ,<span class=\"number\">3</span> ) ;   <span class=\"comment\">// 逐一傳入參數 (立即執行)</span></div></pre></td></tr></table></figure>\n<h4 id=\"function-apply\"><a href=\"#function-apply\" class=\"headerlink\" title=\"function .apply()\"></a>function .apply()</h4><p>.apply() 呼叫 function，並設定 <code>this</code> 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 <code>this</code> 的範疇。而參數是統一用一個陣列包起來，apply 會自行拆開傳入。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.apply( <span class=\"literal\">null</span>, [ <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> ] );  <span class=\"comment\">// 參數統一用 array 傳入 (立即執行)</span></div></pre></td></tr></table></figure>\n","excerpt":"<p><img src=\"/images/javascript.jpg\" alt=\"javascript\"></p>\n<p>學習筆記，JavaScript 在綁定 Function 時有三種方式，分別為 <code>.bind()</code>,<code>.call()</code>, <code>.apply()</code>, 而這三種又有些許的差異：</p>","more":"<h4 id=\"function-bind\"><a href=\"#function-bind\" class=\"headerlink\" title=\"function .bind()\"></a>function .bind()</h4><p>.bind() 不會立即執行 function，並設定 <code>this</code> 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 <code>this</code> 的範疇。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.bind( <span class=\"literal\">null</span>, <span class=\"number\">1</span> ,<span class=\"number\">2</span> ,<span class=\"number\">3</span> ) ;   <span class=\"comment\">// 不會立即執行</span></div></pre></td></tr></table></figure>\n<h4 id=\"function-call\"><a href=\"#function-call\" class=\"headerlink\" title=\"function .call()\"></a>function .call()</h4><p>.call() 呼叫 function，並設定 <code>this</code> 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 <code>this</code> 的範疇。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.call( <span class=\"literal\">null</span>, <span class=\"number\">1</span> ,<span class=\"number\">2</span> ,<span class=\"number\">3</span> ) ;   <span class=\"comment\">// 逐一傳入參數 (立即執行)</span></div></pre></td></tr></table></figure>\n<h4 id=\"function-apply\"><a href=\"#function-apply\" class=\"headerlink\" title=\"function .apply()\"></a>function .apply()</h4><p>.apply() 呼叫 function，並設定 <code>this</code> 範疇與傳入參數。傳入第一個參數是 scope，指定 function 內 <code>this</code> 的範疇。而參數是統一用一個陣列包起來，apply 會自行拆開傳入。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">func.apply( <span class=\"literal\">null</span>, [ <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span> ] );  <span class=\"comment\">// 參數統一用 array 傳入 (立即執行)</span></div></pre></td></tr></table></figure>"},{"title":"Android App - TTtimer","date":"2015-08-19T07:46:12.000Z","thumbnail":"/images/TTtimer/ic_launcher.png","_content":"\n<center>\n![TTtimer](/images/TTtimer/ic_launcher.png)\n</center>\n\n名稱：TTtimer\n類型：Andriod App / Java, 未上架\n時間：2015/1 (大三上學期)\n用途：期末作業\n\n## 簡介\n\nAndroid APP - TTtime 是我在大三上學期修 Amy 老師 Java 課程的期末作品。這隻 APP 大概是我個人最喜歡期末作品之一，包括結構和設計是我個人最喜歡的，當時我有不少的時間與不曉得發揮空間。TTtimer 的設計概念出自於 10,000 小時，意指在某一個專業區域中努力 10,000 小時才能成為該專業領域中的佼佼者(這個理念最後被我個人推翻了)。而 TTtimer 即是此類型的計時器，選擇目標的專業項目後，持續累計時間來達成最初設定的目標，並透過累計時間的百分比、累計總數來給予獎勵或是頭銜的稱號。\n\n<!--more-->\n\n<center>\n\t<img src=\"/images/TTtimer/working_finish.jpg\" alt=\"TTtimer Working\" style=\"width:200px;\"/>\n</center>\n\n以下為 APP 使用到的技術重點，有需要的同學可以在裡面尋找相關自訓。有機會的話相我想把這個 APP 上架，最為一次學習經驗。\n\n## Source Code 分享\n\nSource Code 放置在 Google Drive 上面，分享給需要範例的同學們。\n\n[[Android APP]  TTtimer-for-AS-v1.0](https://drive.google.com/open?id=0B1p_o3Z5VQBeXzlXUlRNWExCUVE)\n\n## 技術簡介\n\n#### 物件導向設計\n\nAPP 中，每個 `任務` 都是以一個物件包裝，包括包裝這個 `任務` 本身的資訊、進度、累計時間等等。而累計時間輸出時，可是轉換成百分比的函數，也是包裝在 PlaneToTime 的類別裡面。物件導向設計可參考的是以下主要幾個類別：\n\n* MyTimer\n* MicroTimer\n* Plan\n* PlanToTime\n\nMyTimer 和 MicroTimer 類別主要功能就是計時器，在每個計畫中都會使用到一個計時計，並且有簡化一些時間I/O的機制，主要是根據我當時自己的需求所包裝的。而 Plan 和 PlanToTime 包裝了 `計畫` 和 `有時目標間的計畫`，事實上在最後 APP 實作的時候，並沒有 `無目標時間的計畫`，也就是說類別 Plan 只是單純被 PlanToTime 繼承，作用類似於一個基底類別，其實並沒有實作的功能，這屬於我個人設計錯誤，因為一開始有構想 `無目標時間的計畫`。因此在後面會發現，底層設計的取得獎勵的方式，略有不同，僅僅因為當初規劃時我的想法岔開了。\n\n包裝這四個類別，在我專案開發中後期其為吃香，傳送資料時不太需要考慮資料格式。簡單思考：傳遞一個物件比起傳遞四個不同型別的參數，何者容易？當然是包裝好的一個物件，一次傳遞來得輕鬆方便。另外，包裝物件可以在多人開發時，資料格式的缺漏檢查，或是避免掉不必要的資料傳遞誤會與錯誤。\n\n#### 計時器\n\n計時器只有兩個原則，每秒(或是其他時間)的觸發事件，然後再撰寫自己紀錄的方式。計時器 Andriod 有預設事件，少量的計時器每秒的 tick 相當精準，不要一次開一大堆就好。也別用計時器去處理監聽事件，基本上 Andriod 大部份的物件都有自己的監聽事件，不需要自行去撰寫計時器去檢查。在 TTtimer 中牽涉到的類別如下：\n\n* MainActivity\n* TiemRiver\n* SysSet\n\n之前被問過幾次 Android App 的計時計怎麼處理，計時器的影子可以在 `Mainctivity` 中找到，當初設計是在 APP 一啟動時，背後就有一個碼表在計時，而計時計的參數被我抽取到 `TimeRiver` 和 `SysSet` 的類別中，其實 `TimeRiver` 的類別中的設定參數直接抽取到 `SysSet`，目前的方式是多個任務會共用同一個碼錶，避免每開一起一個新的任務就啟用新的碼表消耗效能。\n\n#### SQLite\n\n如果 SQLite 無法正常啟用，記得注意 Android 本身的版本是否要更新，之前個人在測試時就發生過無法啟動的狀況。情急之下用 txt 自己刻了一套類似功能的 documentation SQL。現在想想挺好笑的，結果期中考過後我發現手機系統要更新，更新好就能使用 SQLite 了，只好默默的砍掉整個手刻的 SQL。\n\n關於 SQLite 我使用在兩個部分：儲存計畫、系統參數。\n\n* PlanSQL\n* SystemSettingSQL\n\n兩者都相當直接的包裝了基本的 Sqlite 的 CRUD (新增/修改/刪除/查詢)，基本上 SQLite 在類別設計完成後，撰寫一次，確認每次 APP 開啟後跟 SQLite 的 IO 正常後，我就再也沒有修改過內部的程式碼。所以理想的話只要努力一次就好，並不需要開發途中不斷地維護那段程式碼。 SQLite 需要注意的重點是測試資料的問題。在開發時頻繁的測試過程中，程式碼除錯時會頻繁地影響到資料庫資料的變動，導致錯誤解決了卻仍然出現問題。主因是資料錯誤，產生 Garbage in garbage out 的結果。建議在開發期間每次 APP 啟動時就初始化一次資料，清空資料庫並且寫入測試用的資料，最終在 APP 發佈時只要將初始化資料的程式碼註解掉即可。\n\n另外需要注意的事情是，程式碼要有解析空資料的能力。意思是多半在測試時，資料庫內已經有測試資料，往往忽略了有可能無資料的情況，反而在拿掉測試資料後才發現 APP 啟動的一瞬間就會因為資料讀取失敗而崩潰。\n\n#### 動態新增控制項\n\n這大概是我被詢問最頻繁的項目了。處理這部分的是以下兩個類別：\n\n* AddBtn\n* ViewList\n\n動態新增控制項的步驟就是：宣告 > 設定 > 掛載。除非是要做 APP 遊戲，不然 Andriod 內建的 ListView 應該能解決大部份的問題，當初我在這塊也是修改了好幾個版本，一開始因為好玩也是手刻 ListView，再建立 Scroll view。不過內建的 ListView 和手刻的邏輯基本上是相同的，先將想要動態新增的物件製作成一份 ListItem 再由 ListView 去重複就對了。\n\n#### Android Lifecycle 生命週期\n\n![Andriod 生命週期 ](http://pic.pimg.tw/style77125tech/1369341764-3430810860.png)\n\n撰寫 Andriod APP 最重要的就是生命週期。簡而言之，生命週期就是我們在手機各種操作時，切換到 APP 畫面時對程式運行的影響，例如執行中的 APP 在按下 Home 鍵後會進入到 `onPause()` 的狀態，不同的狀態不可能讓 APP 一直處於運轉中，因此 APP 作業流程設計會圍繞著 Android Lifecycle 在運轉，也是設計的核心。但記得在 Lifecycle 中，我個人認為最不能仰賴 `onDestroy()`，仰賴關閉 APP 時才去執行，無法預測 APP 是在什麼情況下被關閉的，可能執行緒被中斷、手機沒電等等狀況。重要的資料同步，盡可能不要放在 `onDestroy` 的部分。\n\n#### 雙語系\n\nTTtiemr 支援雙語系，支援 `zh-Tw` 和 `en` 語系，根據手機設定的國籍去做辨識。在手機中抓取字串的方式都需要使用 `android:text=\"@string/show\"` 抓取，之前有聽過反映這樣相當不友善(且不容易辨識)，不過在後期翻譯時相當有趣，單純翻譯 `string` 的設定檔就可完成。如果從一開始就有遵守紀律，將對應的字串寫在設定檔內，在專案末期好好享受輕鬆翻譯 APP 語言的成果吧!\n\n#### 多解析度圖片\n\n在多解析度圖片這部分，我個人處理得相當糟糕，當初在 PC 上測試時雨手機上測試時發現差距極大，因此我大量的改用百分比去做設計。解決問題後我就沒有再去對多種解析度的螢幕下去做設計。\n\n#### Animation 動畫效果\n\n在 `WorkingActivity` 可以大量使用到動畫，Android 的動畫使用大致上是：宣告 > 設定參數 > 啟動。需要注意的是 Animation 的狀態，需要將正確的資料流操作掛載載正確的 Animation 事件上面，避免掉發生動畫時件不同步或是執行順序有問題的情況。Animation 玩起來相當有趣且有成就看，相當推薦大家玩玩。\n\n![screen shot](/images/TTtimer/demo.jpg)\n\n## 檔案簡介\n\npath: src/main/java/tw/com/oit/andrew/\n\n##### myclass/MyTimer\n\n計時計類別，主要是依照需求包裝了計時器去配合之後的 Andriod time tick。\n\n##### myclass/MicroTimer\n\n繼承了 MyTimer，加入了秒數的欄位，最後這兩個計時器使用的類別會被包在 Plan 和 PlanToTime 中使用。\n\n#### myclass/Plan\n\n包裝了每個計畫項目資訊，屬於 PlanToTime 的父類別，絕大多數重要的功能也是在這裡。\n\n#### myclass/PlanToTime\n\n在計畫項目資訊增加了目標時間，之後的 Activity 中使用的都是這個 class。兩個 Plan 相關的 class 是整個 APP 中 CP 最高的，但也是被反覆修改最多次的，良好的物件設計讓我在整個 APP 開發的後期有了相當不錯的資料控管，我能清楚的掌握資料的傳輸。\n\n#### system/Notify\n\n包裝了所有使用的通知視窗(Dialog)，從外部可以輕鬆的呼叫視窗，僅需要傳入必要的字串需求即可。\n\n#### system/SysSet\n\n系統設定檔。應該與 TimeRiver 合併。\n\n#### system/TimeRiver\n\n系統設定檔。主要是針對計時器的部分，這部分的設定會被記錄在 SQLite 中，確保每次重新啟動時都會是使用者設定的值。\n\n#### tenthousandtimer/MainActivity\n\n主要介面的操作，拿讀取進來的資料動態新增控制項，並且宣告、啟動計時器。\n\n#### tenthousandtimer/MetalsActivity\n\n單純檢視獎牌與頭銜等訊息，可以視為單純的 ListView Demo。\n\n#### tenthousandtimer/MyMenu\n\n針對 Menu 包裝操作，命名並沒有使用 Activity 是用來區別這個是一包裝操作的 class 並非直接掛載在頁面上的。\n\n#### tenthousandtimer/SettingActivity\n\n設定頁面，設邊使用了固定的控制項，然後將設定的資訊寫在上面的 system 類別中，並儲存在 SQLite。\n\n#### tenthousandtimer/WelcomActivity\n\n歡迎界面，在裡面載入 SQLite 的資料，其實這沒有必要，在 MainActivity 中載入即可，單純為了好看。\n\n#### tenthousandtimer/WorkingActivity\n\n在 WorkingActivity 中大量的使用了 Animation，如果在事後才掛上 Animation 容易導致先前設計的資料流多少出現錯誤。仔細研究 Animation 與主程式非同步的關係，就能解決這個問題，並不至於需要 APP 大改寫。\n\n#### tttsql/PlanSQL & tttsql/SystemSettingSQL\n\n包裝了 SQLite 的操作，包含了整批資料的 CRUD，這邊對於 SQLite 的操作相當基本，依據我的印象，資料更新的操作是直接用覆蓋的。基本上也不會出錯，在小量的資料下，效能也沒有問題。PlanSQL 和 SystemSettingSQL 分別包裝了不同的資料而已，基本上觀念完全相同。皆是在載入畫面時會讀取資料。記得注意 Andriod 的版本問題，另外 SQLite 自己也有版本問題，請確保測試資料正確，紀律性的測試可以省去很多麻煩。\n\n#### viewlist/AddBtn & viewlist/ViewList\n\n這兩個類別都包裝了動態新增物件的功能，新增動態物件其實相當麻煩，要考慮物件本身、事件、資料，因此我會盡可能將資訊都封裝在類別內，屆時只需要傳入必要參數即可，如任務有用物件包裝好，那理所當然直接傳遞物件即可。\n\n![screen shot](/images/TTtimer/demo2.jpg)\n\n## 結語\n\nTTtiemr 亦有存在問題，目前我個人也不知道該如何解決。TTtimer 似乎在重複開啟太多任務後，會導致手機效能降低，吃掉太多CPU或記憶體。但此部分已經超過我對 Andriod APP 的認知，需要更專業的技術。但 TTtimer 所使用的技術，除了連線的需求之外，能滿足絕大部份的 APP 開發。這次的 Andriod APP - TTtimer 分享希望能幫助到大家，如果有任何問題也可以 [Facebook](https://www.facebook.com/profile.php?id=100001317746154) 敲我或是寄信給我詢問細節，但請標明是誰詢問與相關的問題資訊。\n","source":"_posts/20150819_APP_TTtimerForOIT.md","raw":"title: Android App - TTtimer\ndate: 2015-08-19 15:46:12\ncategories: 雜七雜八\nthumbnail: /images/TTtimer/ic_launcher.png\ntags:\n- Android\n- Java\n- 學生時期作品\n\n---\n\n<center>\n![TTtimer](/images/TTtimer/ic_launcher.png)\n</center>\n\n名稱：TTtimer\n類型：Andriod App / Java, 未上架\n時間：2015/1 (大三上學期)\n用途：期末作業\n\n## 簡介\n\nAndroid APP - TTtime 是我在大三上學期修 Amy 老師 Java 課程的期末作品。這隻 APP 大概是我個人最喜歡期末作品之一，包括結構和設計是我個人最喜歡的，當時我有不少的時間與不曉得發揮空間。TTtimer 的設計概念出自於 10,000 小時，意指在某一個專業區域中努力 10,000 小時才能成為該專業領域中的佼佼者(這個理念最後被我個人推翻了)。而 TTtimer 即是此類型的計時器，選擇目標的專業項目後，持續累計時間來達成最初設定的目標，並透過累計時間的百分比、累計總數來給予獎勵或是頭銜的稱號。\n\n<!--more-->\n\n<center>\n\t<img src=\"/images/TTtimer/working_finish.jpg\" alt=\"TTtimer Working\" style=\"width:200px;\"/>\n</center>\n\n以下為 APP 使用到的技術重點，有需要的同學可以在裡面尋找相關自訓。有機會的話相我想把這個 APP 上架，最為一次學習經驗。\n\n## Source Code 分享\n\nSource Code 放置在 Google Drive 上面，分享給需要範例的同學們。\n\n[[Android APP]  TTtimer-for-AS-v1.0](https://drive.google.com/open?id=0B1p_o3Z5VQBeXzlXUlRNWExCUVE)\n\n## 技術簡介\n\n#### 物件導向設計\n\nAPP 中，每個 `任務` 都是以一個物件包裝，包括包裝這個 `任務` 本身的資訊、進度、累計時間等等。而累計時間輸出時，可是轉換成百分比的函數，也是包裝在 PlaneToTime 的類別裡面。物件導向設計可參考的是以下主要幾個類別：\n\n* MyTimer\n* MicroTimer\n* Plan\n* PlanToTime\n\nMyTimer 和 MicroTimer 類別主要功能就是計時器，在每個計畫中都會使用到一個計時計，並且有簡化一些時間I/O的機制，主要是根據我當時自己的需求所包裝的。而 Plan 和 PlanToTime 包裝了 `計畫` 和 `有時目標間的計畫`，事實上在最後 APP 實作的時候，並沒有 `無目標時間的計畫`，也就是說類別 Plan 只是單純被 PlanToTime 繼承，作用類似於一個基底類別，其實並沒有實作的功能，這屬於我個人設計錯誤，因為一開始有構想 `無目標時間的計畫`。因此在後面會發現，底層設計的取得獎勵的方式，略有不同，僅僅因為當初規劃時我的想法岔開了。\n\n包裝這四個類別，在我專案開發中後期其為吃香，傳送資料時不太需要考慮資料格式。簡單思考：傳遞一個物件比起傳遞四個不同型別的參數，何者容易？當然是包裝好的一個物件，一次傳遞來得輕鬆方便。另外，包裝物件可以在多人開發時，資料格式的缺漏檢查，或是避免掉不必要的資料傳遞誤會與錯誤。\n\n#### 計時器\n\n計時器只有兩個原則，每秒(或是其他時間)的觸發事件，然後再撰寫自己紀錄的方式。計時器 Andriod 有預設事件，少量的計時器每秒的 tick 相當精準，不要一次開一大堆就好。也別用計時器去處理監聽事件，基本上 Andriod 大部份的物件都有自己的監聽事件，不需要自行去撰寫計時器去檢查。在 TTtimer 中牽涉到的類別如下：\n\n* MainActivity\n* TiemRiver\n* SysSet\n\n之前被問過幾次 Android App 的計時計怎麼處理，計時器的影子可以在 `Mainctivity` 中找到，當初設計是在 APP 一啟動時，背後就有一個碼表在計時，而計時計的參數被我抽取到 `TimeRiver` 和 `SysSet` 的類別中，其實 `TimeRiver` 的類別中的設定參數直接抽取到 `SysSet`，目前的方式是多個任務會共用同一個碼錶，避免每開一起一個新的任務就啟用新的碼表消耗效能。\n\n#### SQLite\n\n如果 SQLite 無法正常啟用，記得注意 Android 本身的版本是否要更新，之前個人在測試時就發生過無法啟動的狀況。情急之下用 txt 自己刻了一套類似功能的 documentation SQL。現在想想挺好笑的，結果期中考過後我發現手機系統要更新，更新好就能使用 SQLite 了，只好默默的砍掉整個手刻的 SQL。\n\n關於 SQLite 我使用在兩個部分：儲存計畫、系統參數。\n\n* PlanSQL\n* SystemSettingSQL\n\n兩者都相當直接的包裝了基本的 Sqlite 的 CRUD (新增/修改/刪除/查詢)，基本上 SQLite 在類別設計完成後，撰寫一次，確認每次 APP 開啟後跟 SQLite 的 IO 正常後，我就再也沒有修改過內部的程式碼。所以理想的話只要努力一次就好，並不需要開發途中不斷地維護那段程式碼。 SQLite 需要注意的重點是測試資料的問題。在開發時頻繁的測試過程中，程式碼除錯時會頻繁地影響到資料庫資料的變動，導致錯誤解決了卻仍然出現問題。主因是資料錯誤，產生 Garbage in garbage out 的結果。建議在開發期間每次 APP 啟動時就初始化一次資料，清空資料庫並且寫入測試用的資料，最終在 APP 發佈時只要將初始化資料的程式碼註解掉即可。\n\n另外需要注意的事情是，程式碼要有解析空資料的能力。意思是多半在測試時，資料庫內已經有測試資料，往往忽略了有可能無資料的情況，反而在拿掉測試資料後才發現 APP 啟動的一瞬間就會因為資料讀取失敗而崩潰。\n\n#### 動態新增控制項\n\n這大概是我被詢問最頻繁的項目了。處理這部分的是以下兩個類別：\n\n* AddBtn\n* ViewList\n\n動態新增控制項的步驟就是：宣告 > 設定 > 掛載。除非是要做 APP 遊戲，不然 Andriod 內建的 ListView 應該能解決大部份的問題，當初我在這塊也是修改了好幾個版本，一開始因為好玩也是手刻 ListView，再建立 Scroll view。不過內建的 ListView 和手刻的邏輯基本上是相同的，先將想要動態新增的物件製作成一份 ListItem 再由 ListView 去重複就對了。\n\n#### Android Lifecycle 生命週期\n\n![Andriod 生命週期 ](http://pic.pimg.tw/style77125tech/1369341764-3430810860.png)\n\n撰寫 Andriod APP 最重要的就是生命週期。簡而言之，生命週期就是我們在手機各種操作時，切換到 APP 畫面時對程式運行的影響，例如執行中的 APP 在按下 Home 鍵後會進入到 `onPause()` 的狀態，不同的狀態不可能讓 APP 一直處於運轉中，因此 APP 作業流程設計會圍繞著 Android Lifecycle 在運轉，也是設計的核心。但記得在 Lifecycle 中，我個人認為最不能仰賴 `onDestroy()`，仰賴關閉 APP 時才去執行，無法預測 APP 是在什麼情況下被關閉的，可能執行緒被中斷、手機沒電等等狀況。重要的資料同步，盡可能不要放在 `onDestroy` 的部分。\n\n#### 雙語系\n\nTTtiemr 支援雙語系，支援 `zh-Tw` 和 `en` 語系，根據手機設定的國籍去做辨識。在手機中抓取字串的方式都需要使用 `android:text=\"@string/show\"` 抓取，之前有聽過反映這樣相當不友善(且不容易辨識)，不過在後期翻譯時相當有趣，單純翻譯 `string` 的設定檔就可完成。如果從一開始就有遵守紀律，將對應的字串寫在設定檔內，在專案末期好好享受輕鬆翻譯 APP 語言的成果吧!\n\n#### 多解析度圖片\n\n在多解析度圖片這部分，我個人處理得相當糟糕，當初在 PC 上測試時雨手機上測試時發現差距極大，因此我大量的改用百分比去做設計。解決問題後我就沒有再去對多種解析度的螢幕下去做設計。\n\n#### Animation 動畫效果\n\n在 `WorkingActivity` 可以大量使用到動畫，Android 的動畫使用大致上是：宣告 > 設定參數 > 啟動。需要注意的是 Animation 的狀態，需要將正確的資料流操作掛載載正確的 Animation 事件上面，避免掉發生動畫時件不同步或是執行順序有問題的情況。Animation 玩起來相當有趣且有成就看，相當推薦大家玩玩。\n\n![screen shot](/images/TTtimer/demo.jpg)\n\n## 檔案簡介\n\npath: src/main/java/tw/com/oit/andrew/\n\n##### myclass/MyTimer\n\n計時計類別，主要是依照需求包裝了計時器去配合之後的 Andriod time tick。\n\n##### myclass/MicroTimer\n\n繼承了 MyTimer，加入了秒數的欄位，最後這兩個計時器使用的類別會被包在 Plan 和 PlanToTime 中使用。\n\n#### myclass/Plan\n\n包裝了每個計畫項目資訊，屬於 PlanToTime 的父類別，絕大多數重要的功能也是在這裡。\n\n#### myclass/PlanToTime\n\n在計畫項目資訊增加了目標時間，之後的 Activity 中使用的都是這個 class。兩個 Plan 相關的 class 是整個 APP 中 CP 最高的，但也是被反覆修改最多次的，良好的物件設計讓我在整個 APP 開發的後期有了相當不錯的資料控管，我能清楚的掌握資料的傳輸。\n\n#### system/Notify\n\n包裝了所有使用的通知視窗(Dialog)，從外部可以輕鬆的呼叫視窗，僅需要傳入必要的字串需求即可。\n\n#### system/SysSet\n\n系統設定檔。應該與 TimeRiver 合併。\n\n#### system/TimeRiver\n\n系統設定檔。主要是針對計時器的部分，這部分的設定會被記錄在 SQLite 中，確保每次重新啟動時都會是使用者設定的值。\n\n#### tenthousandtimer/MainActivity\n\n主要介面的操作，拿讀取進來的資料動態新增控制項，並且宣告、啟動計時器。\n\n#### tenthousandtimer/MetalsActivity\n\n單純檢視獎牌與頭銜等訊息，可以視為單純的 ListView Demo。\n\n#### tenthousandtimer/MyMenu\n\n針對 Menu 包裝操作，命名並沒有使用 Activity 是用來區別這個是一包裝操作的 class 並非直接掛載在頁面上的。\n\n#### tenthousandtimer/SettingActivity\n\n設定頁面，設邊使用了固定的控制項，然後將設定的資訊寫在上面的 system 類別中，並儲存在 SQLite。\n\n#### tenthousandtimer/WelcomActivity\n\n歡迎界面，在裡面載入 SQLite 的資料，其實這沒有必要，在 MainActivity 中載入即可，單純為了好看。\n\n#### tenthousandtimer/WorkingActivity\n\n在 WorkingActivity 中大量的使用了 Animation，如果在事後才掛上 Animation 容易導致先前設計的資料流多少出現錯誤。仔細研究 Animation 與主程式非同步的關係，就能解決這個問題，並不至於需要 APP 大改寫。\n\n#### tttsql/PlanSQL & tttsql/SystemSettingSQL\n\n包裝了 SQLite 的操作，包含了整批資料的 CRUD，這邊對於 SQLite 的操作相當基本，依據我的印象，資料更新的操作是直接用覆蓋的。基本上也不會出錯，在小量的資料下，效能也沒有問題。PlanSQL 和 SystemSettingSQL 分別包裝了不同的資料而已，基本上觀念完全相同。皆是在載入畫面時會讀取資料。記得注意 Andriod 的版本問題，另外 SQLite 自己也有版本問題，請確保測試資料正確，紀律性的測試可以省去很多麻煩。\n\n#### viewlist/AddBtn & viewlist/ViewList\n\n這兩個類別都包裝了動態新增物件的功能，新增動態物件其實相當麻煩，要考慮物件本身、事件、資料，因此我會盡可能將資訊都封裝在類別內，屆時只需要傳入必要參數即可，如任務有用物件包裝好，那理所當然直接傳遞物件即可。\n\n![screen shot](/images/TTtimer/demo2.jpg)\n\n## 結語\n\nTTtiemr 亦有存在問題，目前我個人也不知道該如何解決。TTtimer 似乎在重複開啟太多任務後，會導致手機效能降低，吃掉太多CPU或記憶體。但此部分已經超過我對 Andriod APP 的認知，需要更專業的技術。但 TTtimer 所使用的技術，除了連線的需求之外，能滿足絕大部份的 APP 開發。這次的 Andriod APP - TTtimer 分享希望能幫助到大家，如果有任何問題也可以 [Facebook](https://www.facebook.com/profile.php?id=100001317746154) 敲我或是寄信給我詢問細節，但請標明是誰詢問與相關的問題資訊。\n","slug":"20150819_APP_TTtimerForOIT","published":1,"updated":"2017-02-04T06:59:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvl0009c0u0t3a3r1rp","content":"<center><br><img src=\"/images/TTtimer/ic_launcher.png\" alt=\"TTtimer\"><br></center>\n\n<p>名稱：TTtimer<br>類型：Andriod App / Java, 未上架<br>時間：2015/1 (大三上學期)<br>用途：期末作業</p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>Android APP - TTtime 是我在大三上學期修 Amy 老師 Java 課程的期末作品。這隻 APP 大概是我個人最喜歡期末作品之一，包括結構和設計是我個人最喜歡的，當時我有不少的時間與不曉得發揮空間。TTtimer 的設計概念出自於 10,000 小時，意指在某一個專業區域中努力 10,000 小時才能成為該專業領域中的佼佼者(這個理念最後被我個人推翻了)。而 TTtimer 即是此類型的計時器，選擇目標的專業項目後，持續累計時間來達成最初設定的目標，並透過累計時間的百分比、累計總數來給予獎勵或是頭銜的稱號。</p>\n<a id=\"more\"></a>\n<center><br>    <img src=\"/images/TTtimer/working_finish.jpg\" alt=\"TTtimer Working\" style=\"width:200px;\"><br></center>\n\n<p>以下為 APP 使用到的技術重點，有需要的同學可以在裡面尋找相關自訓。有機會的話相我想把這個 APP 上架，最為一次學習經驗。</p>\n<h2 id=\"Source-Code-分享\"><a href=\"#Source-Code-分享\" class=\"headerlink\" title=\"Source Code 分享\"></a>Source Code 分享</h2><p>Source Code 放置在 Google Drive 上面，分享給需要範例的同學們。</p>\n<p><a href=\"https://drive.google.com/open?id=0B1p_o3Z5VQBeXzlXUlRNWExCUVE\" target=\"_blank\" rel=\"external\">[Android APP]  TTtimer-for-AS-v1.0</a></p>\n<h2 id=\"技術簡介\"><a href=\"#技術簡介\" class=\"headerlink\" title=\"技術簡介\"></a>技術簡介</h2><h4 id=\"物件導向設計\"><a href=\"#物件導向設計\" class=\"headerlink\" title=\"物件導向設計\"></a>物件導向設計</h4><p>APP 中，每個 <code>任務</code> 都是以一個物件包裝，包括包裝這個 <code>任務</code> 本身的資訊、進度、累計時間等等。而累計時間輸出時，可是轉換成百分比的函數，也是包裝在 PlaneToTime 的類別裡面。物件導向設計可參考的是以下主要幾個類別：</p>\n<ul>\n<li>MyTimer</li>\n<li>MicroTimer</li>\n<li>Plan</li>\n<li>PlanToTime</li>\n</ul>\n<p>MyTimer 和 MicroTimer 類別主要功能就是計時器，在每個計畫中都會使用到一個計時計，並且有簡化一些時間I/O的機制，主要是根據我當時自己的需求所包裝的。而 Plan 和 PlanToTime 包裝了 <code>計畫</code> 和 <code>有時目標間的計畫</code>，事實上在最後 APP 實作的時候，並沒有 <code>無目標時間的計畫</code>，也就是說類別 Plan 只是單純被 PlanToTime 繼承，作用類似於一個基底類別，其實並沒有實作的功能，這屬於我個人設計錯誤，因為一開始有構想 <code>無目標時間的計畫</code>。因此在後面會發現，底層設計的取得獎勵的方式，略有不同，僅僅因為當初規劃時我的想法岔開了。</p>\n<p>包裝這四個類別，在我專案開發中後期其為吃香，傳送資料時不太需要考慮資料格式。簡單思考：傳遞一個物件比起傳遞四個不同型別的參數，何者容易？當然是包裝好的一個物件，一次傳遞來得輕鬆方便。另外，包裝物件可以在多人開發時，資料格式的缺漏檢查，或是避免掉不必要的資料傳遞誤會與錯誤。</p>\n<h4 id=\"計時器\"><a href=\"#計時器\" class=\"headerlink\" title=\"計時器\"></a>計時器</h4><p>計時器只有兩個原則，每秒(或是其他時間)的觸發事件，然後再撰寫自己紀錄的方式。計時器 Andriod 有預設事件，少量的計時器每秒的 tick 相當精準，不要一次開一大堆就好。也別用計時器去處理監聽事件，基本上 Andriod 大部份的物件都有自己的監聽事件，不需要自行去撰寫計時器去檢查。在 TTtimer 中牽涉到的類別如下：</p>\n<ul>\n<li>MainActivity</li>\n<li>TiemRiver</li>\n<li>SysSet</li>\n</ul>\n<p>之前被問過幾次 Android App 的計時計怎麼處理，計時器的影子可以在 <code>Mainctivity</code> 中找到，當初設計是在 APP 一啟動時，背後就有一個碼表在計時，而計時計的參數被我抽取到 <code>TimeRiver</code> 和 <code>SysSet</code> 的類別中，其實 <code>TimeRiver</code> 的類別中的設定參數直接抽取到 <code>SysSet</code>，目前的方式是多個任務會共用同一個碼錶，避免每開一起一個新的任務就啟用新的碼表消耗效能。</p>\n<h4 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a>SQLite</h4><p>如果 SQLite 無法正常啟用，記得注意 Android 本身的版本是否要更新，之前個人在測試時就發生過無法啟動的狀況。情急之下用 txt 自己刻了一套類似功能的 documentation SQL。現在想想挺好笑的，結果期中考過後我發現手機系統要更新，更新好就能使用 SQLite 了，只好默默的砍掉整個手刻的 SQL。</p>\n<p>關於 SQLite 我使用在兩個部分：儲存計畫、系統參數。</p>\n<ul>\n<li>PlanSQL</li>\n<li>SystemSettingSQL</li>\n</ul>\n<p>兩者都相當直接的包裝了基本的 Sqlite 的 CRUD (新增/修改/刪除/查詢)，基本上 SQLite 在類別設計完成後，撰寫一次，確認每次 APP 開啟後跟 SQLite 的 IO 正常後，我就再也沒有修改過內部的程式碼。所以理想的話只要努力一次就好，並不需要開發途中不斷地維護那段程式碼。 SQLite 需要注意的重點是測試資料的問題。在開發時頻繁的測試過程中，程式碼除錯時會頻繁地影響到資料庫資料的變動，導致錯誤解決了卻仍然出現問題。主因是資料錯誤，產生 Garbage in garbage out 的結果。建議在開發期間每次 APP 啟動時就初始化一次資料，清空資料庫並且寫入測試用的資料，最終在 APP 發佈時只要將初始化資料的程式碼註解掉即可。</p>\n<p>另外需要注意的事情是，程式碼要有解析空資料的能力。意思是多半在測試時，資料庫內已經有測試資料，往往忽略了有可能無資料的情況，反而在拿掉測試資料後才發現 APP 啟動的一瞬間就會因為資料讀取失敗而崩潰。</p>\n<h4 id=\"動態新增控制項\"><a href=\"#動態新增控制項\" class=\"headerlink\" title=\"動態新增控制項\"></a>動態新增控制項</h4><p>這大概是我被詢問最頻繁的項目了。處理這部分的是以下兩個類別：</p>\n<ul>\n<li>AddBtn</li>\n<li>ViewList</li>\n</ul>\n<p>動態新增控制項的步驟就是：宣告 &gt; 設定 &gt; 掛載。除非是要做 APP 遊戲，不然 Andriod 內建的 ListView 應該能解決大部份的問題，當初我在這塊也是修改了好幾個版本，一開始因為好玩也是手刻 ListView，再建立 Scroll view。不過內建的 ListView 和手刻的邏輯基本上是相同的，先將想要動態新增的物件製作成一份 ListItem 再由 ListView 去重複就對了。</p>\n<h4 id=\"Android-Lifecycle-生命週期\"><a href=\"#Android-Lifecycle-生命週期\" class=\"headerlink\" title=\"Android Lifecycle 生命週期\"></a>Android Lifecycle 生命週期</h4><p><img src=\"http://pic.pimg.tw/style77125tech/1369341764-3430810860.png\" alt=\"Andriod 生命週期 \"></p>\n<p>撰寫 Andriod APP 最重要的就是生命週期。簡而言之，生命週期就是我們在手機各種操作時，切換到 APP 畫面時對程式運行的影響，例如執行中的 APP 在按下 Home 鍵後會進入到 <code>onPause()</code> 的狀態，不同的狀態不可能讓 APP 一直處於運轉中，因此 APP 作業流程設計會圍繞著 Android Lifecycle 在運轉，也是設計的核心。但記得在 Lifecycle 中，我個人認為最不能仰賴 <code>onDestroy()</code>，仰賴關閉 APP 時才去執行，無法預測 APP 是在什麼情況下被關閉的，可能執行緒被中斷、手機沒電等等狀況。重要的資料同步，盡可能不要放在 <code>onDestroy</code> 的部分。</p>\n<h4 id=\"雙語系\"><a href=\"#雙語系\" class=\"headerlink\" title=\"雙語系\"></a>雙語系</h4><p>TTtiemr 支援雙語系，支援 <code>zh-Tw</code> 和 <code>en</code> 語系，根據手機設定的國籍去做辨識。在手機中抓取字串的方式都需要使用 <code>android:text=&quot;@string/show&quot;</code> 抓取，之前有聽過反映這樣相當不友善(且不容易辨識)，不過在後期翻譯時相當有趣，單純翻譯 <code>string</code> 的設定檔就可完成。如果從一開始就有遵守紀律，將對應的字串寫在設定檔內，在專案末期好好享受輕鬆翻譯 APP 語言的成果吧!</p>\n<h4 id=\"多解析度圖片\"><a href=\"#多解析度圖片\" class=\"headerlink\" title=\"多解析度圖片\"></a>多解析度圖片</h4><p>在多解析度圖片這部分，我個人處理得相當糟糕，當初在 PC 上測試時雨手機上測試時發現差距極大，因此我大量的改用百分比去做設計。解決問題後我就沒有再去對多種解析度的螢幕下去做設計。</p>\n<h4 id=\"Animation-動畫效果\"><a href=\"#Animation-動畫效果\" class=\"headerlink\" title=\"Animation 動畫效果\"></a>Animation 動畫效果</h4><p>在 <code>WorkingActivity</code> 可以大量使用到動畫，Android 的動畫使用大致上是：宣告 &gt; 設定參數 &gt; 啟動。需要注意的是 Animation 的狀態，需要將正確的資料流操作掛載載正確的 Animation 事件上面，避免掉發生動畫時件不同步或是執行順序有問題的情況。Animation 玩起來相當有趣且有成就看，相當推薦大家玩玩。</p>\n<p><img src=\"/images/TTtimer/demo.jpg\" alt=\"screen shot\"></p>\n<h2 id=\"檔案簡介\"><a href=\"#檔案簡介\" class=\"headerlink\" title=\"檔案簡介\"></a>檔案簡介</h2><p>path: src/main/java/tw/com/oit/andrew/</p>\n<h5 id=\"myclass-MyTimer\"><a href=\"#myclass-MyTimer\" class=\"headerlink\" title=\"myclass/MyTimer\"></a>myclass/MyTimer</h5><p>計時計類別，主要是依照需求包裝了計時器去配合之後的 Andriod time tick。</p>\n<h5 id=\"myclass-MicroTimer\"><a href=\"#myclass-MicroTimer\" class=\"headerlink\" title=\"myclass/MicroTimer\"></a>myclass/MicroTimer</h5><p>繼承了 MyTimer，加入了秒數的欄位，最後這兩個計時器使用的類別會被包在 Plan 和 PlanToTime 中使用。</p>\n<h4 id=\"myclass-Plan\"><a href=\"#myclass-Plan\" class=\"headerlink\" title=\"myclass/Plan\"></a>myclass/Plan</h4><p>包裝了每個計畫項目資訊，屬於 PlanToTime 的父類別，絕大多數重要的功能也是在這裡。</p>\n<h4 id=\"myclass-PlanToTime\"><a href=\"#myclass-PlanToTime\" class=\"headerlink\" title=\"myclass/PlanToTime\"></a>myclass/PlanToTime</h4><p>在計畫項目資訊增加了目標時間，之後的 Activity 中使用的都是這個 class。兩個 Plan 相關的 class 是整個 APP 中 CP 最高的，但也是被反覆修改最多次的，良好的物件設計讓我在整個 APP 開發的後期有了相當不錯的資料控管，我能清楚的掌握資料的傳輸。</p>\n<h4 id=\"system-Notify\"><a href=\"#system-Notify\" class=\"headerlink\" title=\"system/Notify\"></a>system/Notify</h4><p>包裝了所有使用的通知視窗(Dialog)，從外部可以輕鬆的呼叫視窗，僅需要傳入必要的字串需求即可。</p>\n<h4 id=\"system-SysSet\"><a href=\"#system-SysSet\" class=\"headerlink\" title=\"system/SysSet\"></a>system/SysSet</h4><p>系統設定檔。應該與 TimeRiver 合併。</p>\n<h4 id=\"system-TimeRiver\"><a href=\"#system-TimeRiver\" class=\"headerlink\" title=\"system/TimeRiver\"></a>system/TimeRiver</h4><p>系統設定檔。主要是針對計時器的部分，這部分的設定會被記錄在 SQLite 中，確保每次重新啟動時都會是使用者設定的值。</p>\n<h4 id=\"tenthousandtimer-MainActivity\"><a href=\"#tenthousandtimer-MainActivity\" class=\"headerlink\" title=\"tenthousandtimer/MainActivity\"></a>tenthousandtimer/MainActivity</h4><p>主要介面的操作，拿讀取進來的資料動態新增控制項，並且宣告、啟動計時器。</p>\n<h4 id=\"tenthousandtimer-MetalsActivity\"><a href=\"#tenthousandtimer-MetalsActivity\" class=\"headerlink\" title=\"tenthousandtimer/MetalsActivity\"></a>tenthousandtimer/MetalsActivity</h4><p>單純檢視獎牌與頭銜等訊息，可以視為單純的 ListView Demo。</p>\n<h4 id=\"tenthousandtimer-MyMenu\"><a href=\"#tenthousandtimer-MyMenu\" class=\"headerlink\" title=\"tenthousandtimer/MyMenu\"></a>tenthousandtimer/MyMenu</h4><p>針對 Menu 包裝操作，命名並沒有使用 Activity 是用來區別這個是一包裝操作的 class 並非直接掛載在頁面上的。</p>\n<h4 id=\"tenthousandtimer-SettingActivity\"><a href=\"#tenthousandtimer-SettingActivity\" class=\"headerlink\" title=\"tenthousandtimer/SettingActivity\"></a>tenthousandtimer/SettingActivity</h4><p>設定頁面，設邊使用了固定的控制項，然後將設定的資訊寫在上面的 system 類別中，並儲存在 SQLite。</p>\n<h4 id=\"tenthousandtimer-WelcomActivity\"><a href=\"#tenthousandtimer-WelcomActivity\" class=\"headerlink\" title=\"tenthousandtimer/WelcomActivity\"></a>tenthousandtimer/WelcomActivity</h4><p>歡迎界面，在裡面載入 SQLite 的資料，其實這沒有必要，在 MainActivity 中載入即可，單純為了好看。</p>\n<h4 id=\"tenthousandtimer-WorkingActivity\"><a href=\"#tenthousandtimer-WorkingActivity\" class=\"headerlink\" title=\"tenthousandtimer/WorkingActivity\"></a>tenthousandtimer/WorkingActivity</h4><p>在 WorkingActivity 中大量的使用了 Animation，如果在事後才掛上 Animation 容易導致先前設計的資料流多少出現錯誤。仔細研究 Animation 與主程式非同步的關係，就能解決這個問題，並不至於需要 APP 大改寫。</p>\n<h4 id=\"tttsql-PlanSQL-amp-tttsql-SystemSettingSQL\"><a href=\"#tttsql-PlanSQL-amp-tttsql-SystemSettingSQL\" class=\"headerlink\" title=\"tttsql/PlanSQL &amp; tttsql/SystemSettingSQL\"></a>tttsql/PlanSQL &amp; tttsql/SystemSettingSQL</h4><p>包裝了 SQLite 的操作，包含了整批資料的 CRUD，這邊對於 SQLite 的操作相當基本，依據我的印象，資料更新的操作是直接用覆蓋的。基本上也不會出錯，在小量的資料下，效能也沒有問題。PlanSQL 和 SystemSettingSQL 分別包裝了不同的資料而已，基本上觀念完全相同。皆是在載入畫面時會讀取資料。記得注意 Andriod 的版本問題，另外 SQLite 自己也有版本問題，請確保測試資料正確，紀律性的測試可以省去很多麻煩。</p>\n<h4 id=\"viewlist-AddBtn-amp-viewlist-ViewList\"><a href=\"#viewlist-AddBtn-amp-viewlist-ViewList\" class=\"headerlink\" title=\"viewlist/AddBtn &amp; viewlist/ViewList\"></a>viewlist/AddBtn &amp; viewlist/ViewList</h4><p>這兩個類別都包裝了動態新增物件的功能，新增動態物件其實相當麻煩，要考慮物件本身、事件、資料，因此我會盡可能將資訊都封裝在類別內，屆時只需要傳入必要參數即可，如任務有用物件包裝好，那理所當然直接傳遞物件即可。</p>\n<p><img src=\"/images/TTtimer/demo2.jpg\" alt=\"screen shot\"></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>TTtiemr 亦有存在問題，目前我個人也不知道該如何解決。TTtimer 似乎在重複開啟太多任務後，會導致手機效能降低，吃掉太多CPU或記憶體。但此部分已經超過我對 Andriod APP 的認知，需要更專業的技術。但 TTtimer 所使用的技術，除了連線的需求之外，能滿足絕大部份的 APP 開發。這次的 Andriod APP - TTtimer 分享希望能幫助到大家，如果有任何問題也可以 <a href=\"https://www.facebook.com/profile.php?id=100001317746154\" target=\"_blank\" rel=\"external\">Facebook</a> 敲我或是寄信給我詢問細節，但請標明是誰詢問與相關的問題資訊。</p>\n","excerpt":"<center><br><img src=\"/images/TTtimer/ic_launcher.png\" alt=\"TTtimer\"><br></center>\n\n<p>名稱：TTtimer<br>類型：Andriod App / Java, 未上架<br>時間：2015/1 (大三上學期)<br>用途：期末作業</p>\n<h2 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h2><p>Android APP - TTtime 是我在大三上學期修 Amy 老師 Java 課程的期末作品。這隻 APP 大概是我個人最喜歡期末作品之一，包括結構和設計是我個人最喜歡的，當時我有不少的時間與不曉得發揮空間。TTtimer 的設計概念出自於 10,000 小時，意指在某一個專業區域中努力 10,000 小時才能成為該專業領域中的佼佼者(這個理念最後被我個人推翻了)。而 TTtimer 即是此類型的計時器，選擇目標的專業項目後，持續累計時間來達成最初設定的目標，並透過累計時間的百分比、累計總數來給予獎勵或是頭銜的稱號。</p>","more":"<center><br>    <img src=\"/images/TTtimer/working_finish.jpg\" alt=\"TTtimer Working\" style=\"width:200px;\"/><br></center>\n\n<p>以下為 APP 使用到的技術重點，有需要的同學可以在裡面尋找相關自訓。有機會的話相我想把這個 APP 上架，最為一次學習經驗。</p>\n<h2 id=\"Source-Code-分享\"><a href=\"#Source-Code-分享\" class=\"headerlink\" title=\"Source Code 分享\"></a>Source Code 分享</h2><p>Source Code 放置在 Google Drive 上面，分享給需要範例的同學們。</p>\n<p><a href=\"https://drive.google.com/open?id=0B1p_o3Z5VQBeXzlXUlRNWExCUVE\">[Android APP]  TTtimer-for-AS-v1.0</a></p>\n<h2 id=\"技術簡介\"><a href=\"#技術簡介\" class=\"headerlink\" title=\"技術簡介\"></a>技術簡介</h2><h4 id=\"物件導向設計\"><a href=\"#物件導向設計\" class=\"headerlink\" title=\"物件導向設計\"></a>物件導向設計</h4><p>APP 中，每個 <code>任務</code> 都是以一個物件包裝，包括包裝這個 <code>任務</code> 本身的資訊、進度、累計時間等等。而累計時間輸出時，可是轉換成百分比的函數，也是包裝在 PlaneToTime 的類別裡面。物件導向設計可參考的是以下主要幾個類別：</p>\n<ul>\n<li>MyTimer</li>\n<li>MicroTimer</li>\n<li>Plan</li>\n<li>PlanToTime</li>\n</ul>\n<p>MyTimer 和 MicroTimer 類別主要功能就是計時器，在每個計畫中都會使用到一個計時計，並且有簡化一些時間I/O的機制，主要是根據我當時自己的需求所包裝的。而 Plan 和 PlanToTime 包裝了 <code>計畫</code> 和 <code>有時目標間的計畫</code>，事實上在最後 APP 實作的時候，並沒有 <code>無目標時間的計畫</code>，也就是說類別 Plan 只是單純被 PlanToTime 繼承，作用類似於一個基底類別，其實並沒有實作的功能，這屬於我個人設計錯誤，因為一開始有構想 <code>無目標時間的計畫</code>。因此在後面會發現，底層設計的取得獎勵的方式，略有不同，僅僅因為當初規劃時我的想法岔開了。</p>\n<p>包裝這四個類別，在我專案開發中後期其為吃香，傳送資料時不太需要考慮資料格式。簡單思考：傳遞一個物件比起傳遞四個不同型別的參數，何者容易？當然是包裝好的一個物件，一次傳遞來得輕鬆方便。另外，包裝物件可以在多人開發時，資料格式的缺漏檢查，或是避免掉不必要的資料傳遞誤會與錯誤。</p>\n<h4 id=\"計時器\"><a href=\"#計時器\" class=\"headerlink\" title=\"計時器\"></a>計時器</h4><p>計時器只有兩個原則，每秒(或是其他時間)的觸發事件，然後再撰寫自己紀錄的方式。計時器 Andriod 有預設事件，少量的計時器每秒的 tick 相當精準，不要一次開一大堆就好。也別用計時器去處理監聽事件，基本上 Andriod 大部份的物件都有自己的監聽事件，不需要自行去撰寫計時器去檢查。在 TTtimer 中牽涉到的類別如下：</p>\n<ul>\n<li>MainActivity</li>\n<li>TiemRiver</li>\n<li>SysSet</li>\n</ul>\n<p>之前被問過幾次 Android App 的計時計怎麼處理，計時器的影子可以在 <code>Mainctivity</code> 中找到，當初設計是在 APP 一啟動時，背後就有一個碼表在計時，而計時計的參數被我抽取到 <code>TimeRiver</code> 和 <code>SysSet</code> 的類別中，其實 <code>TimeRiver</code> 的類別中的設定參數直接抽取到 <code>SysSet</code>，目前的方式是多個任務會共用同一個碼錶，避免每開一起一個新的任務就啟用新的碼表消耗效能。</p>\n<h4 id=\"SQLite\"><a href=\"#SQLite\" class=\"headerlink\" title=\"SQLite\"></a>SQLite</h4><p>如果 SQLite 無法正常啟用，記得注意 Android 本身的版本是否要更新，之前個人在測試時就發生過無法啟動的狀況。情急之下用 txt 自己刻了一套類似功能的 documentation SQL。現在想想挺好笑的，結果期中考過後我發現手機系統要更新，更新好就能使用 SQLite 了，只好默默的砍掉整個手刻的 SQL。</p>\n<p>關於 SQLite 我使用在兩個部分：儲存計畫、系統參數。</p>\n<ul>\n<li>PlanSQL</li>\n<li>SystemSettingSQL</li>\n</ul>\n<p>兩者都相當直接的包裝了基本的 Sqlite 的 CRUD (新增/修改/刪除/查詢)，基本上 SQLite 在類別設計完成後，撰寫一次，確認每次 APP 開啟後跟 SQLite 的 IO 正常後，我就再也沒有修改過內部的程式碼。所以理想的話只要努力一次就好，並不需要開發途中不斷地維護那段程式碼。 SQLite 需要注意的重點是測試資料的問題。在開發時頻繁的測試過程中，程式碼除錯時會頻繁地影響到資料庫資料的變動，導致錯誤解決了卻仍然出現問題。主因是資料錯誤，產生 Garbage in garbage out 的結果。建議在開發期間每次 APP 啟動時就初始化一次資料，清空資料庫並且寫入測試用的資料，最終在 APP 發佈時只要將初始化資料的程式碼註解掉即可。</p>\n<p>另外需要注意的事情是，程式碼要有解析空資料的能力。意思是多半在測試時，資料庫內已經有測試資料，往往忽略了有可能無資料的情況，反而在拿掉測試資料後才發現 APP 啟動的一瞬間就會因為資料讀取失敗而崩潰。</p>\n<h4 id=\"動態新增控制項\"><a href=\"#動態新增控制項\" class=\"headerlink\" title=\"動態新增控制項\"></a>動態新增控制項</h4><p>這大概是我被詢問最頻繁的項目了。處理這部分的是以下兩個類別：</p>\n<ul>\n<li>AddBtn</li>\n<li>ViewList</li>\n</ul>\n<p>動態新增控制項的步驟就是：宣告 &gt; 設定 &gt; 掛載。除非是要做 APP 遊戲，不然 Andriod 內建的 ListView 應該能解決大部份的問題，當初我在這塊也是修改了好幾個版本，一開始因為好玩也是手刻 ListView，再建立 Scroll view。不過內建的 ListView 和手刻的邏輯基本上是相同的，先將想要動態新增的物件製作成一份 ListItem 再由 ListView 去重複就對了。</p>\n<h4 id=\"Android-Lifecycle-生命週期\"><a href=\"#Android-Lifecycle-生命週期\" class=\"headerlink\" title=\"Android Lifecycle 生命週期\"></a>Android Lifecycle 生命週期</h4><p><img src=\"http://pic.pimg.tw/style77125tech/1369341764-3430810860.png\" alt=\"Andriod 生命週期 \"></p>\n<p>撰寫 Andriod APP 最重要的就是生命週期。簡而言之，生命週期就是我們在手機各種操作時，切換到 APP 畫面時對程式運行的影響，例如執行中的 APP 在按下 Home 鍵後會進入到 <code>onPause()</code> 的狀態，不同的狀態不可能讓 APP 一直處於運轉中，因此 APP 作業流程設計會圍繞著 Android Lifecycle 在運轉，也是設計的核心。但記得在 Lifecycle 中，我個人認為最不能仰賴 <code>onDestroy()</code>，仰賴關閉 APP 時才去執行，無法預測 APP 是在什麼情況下被關閉的，可能執行緒被中斷、手機沒電等等狀況。重要的資料同步，盡可能不要放在 <code>onDestroy</code> 的部分。</p>\n<h4 id=\"雙語系\"><a href=\"#雙語系\" class=\"headerlink\" title=\"雙語系\"></a>雙語系</h4><p>TTtiemr 支援雙語系，支援 <code>zh-Tw</code> 和 <code>en</code> 語系，根據手機設定的國籍去做辨識。在手機中抓取字串的方式都需要使用 <code>android:text=&quot;@string/show&quot;</code> 抓取，之前有聽過反映這樣相當不友善(且不容易辨識)，不過在後期翻譯時相當有趣，單純翻譯 <code>string</code> 的設定檔就可完成。如果從一開始就有遵守紀律，將對應的字串寫在設定檔內，在專案末期好好享受輕鬆翻譯 APP 語言的成果吧!</p>\n<h4 id=\"多解析度圖片\"><a href=\"#多解析度圖片\" class=\"headerlink\" title=\"多解析度圖片\"></a>多解析度圖片</h4><p>在多解析度圖片這部分，我個人處理得相當糟糕，當初在 PC 上測試時雨手機上測試時發現差距極大，因此我大量的改用百分比去做設計。解決問題後我就沒有再去對多種解析度的螢幕下去做設計。</p>\n<h4 id=\"Animation-動畫效果\"><a href=\"#Animation-動畫效果\" class=\"headerlink\" title=\"Animation 動畫效果\"></a>Animation 動畫效果</h4><p>在 <code>WorkingActivity</code> 可以大量使用到動畫，Android 的動畫使用大致上是：宣告 &gt; 設定參數 &gt; 啟動。需要注意的是 Animation 的狀態，需要將正確的資料流操作掛載載正確的 Animation 事件上面，避免掉發生動畫時件不同步或是執行順序有問題的情況。Animation 玩起來相當有趣且有成就看，相當推薦大家玩玩。</p>\n<p><img src=\"/images/TTtimer/demo.jpg\" alt=\"screen shot\"></p>\n<h2 id=\"檔案簡介\"><a href=\"#檔案簡介\" class=\"headerlink\" title=\"檔案簡介\"></a>檔案簡介</h2><p>path: src/main/java/tw/com/oit/andrew/</p>\n<h5 id=\"myclass-MyTimer\"><a href=\"#myclass-MyTimer\" class=\"headerlink\" title=\"myclass/MyTimer\"></a>myclass/MyTimer</h5><p>計時計類別，主要是依照需求包裝了計時器去配合之後的 Andriod time tick。</p>\n<h5 id=\"myclass-MicroTimer\"><a href=\"#myclass-MicroTimer\" class=\"headerlink\" title=\"myclass/MicroTimer\"></a>myclass/MicroTimer</h5><p>繼承了 MyTimer，加入了秒數的欄位，最後這兩個計時器使用的類別會被包在 Plan 和 PlanToTime 中使用。</p>\n<h4 id=\"myclass-Plan\"><a href=\"#myclass-Plan\" class=\"headerlink\" title=\"myclass/Plan\"></a>myclass/Plan</h4><p>包裝了每個計畫項目資訊，屬於 PlanToTime 的父類別，絕大多數重要的功能也是在這裡。</p>\n<h4 id=\"myclass-PlanToTime\"><a href=\"#myclass-PlanToTime\" class=\"headerlink\" title=\"myclass/PlanToTime\"></a>myclass/PlanToTime</h4><p>在計畫項目資訊增加了目標時間，之後的 Activity 中使用的都是這個 class。兩個 Plan 相關的 class 是整個 APP 中 CP 最高的，但也是被反覆修改最多次的，良好的物件設計讓我在整個 APP 開發的後期有了相當不錯的資料控管，我能清楚的掌握資料的傳輸。</p>\n<h4 id=\"system-Notify\"><a href=\"#system-Notify\" class=\"headerlink\" title=\"system/Notify\"></a>system/Notify</h4><p>包裝了所有使用的通知視窗(Dialog)，從外部可以輕鬆的呼叫視窗，僅需要傳入必要的字串需求即可。</p>\n<h4 id=\"system-SysSet\"><a href=\"#system-SysSet\" class=\"headerlink\" title=\"system/SysSet\"></a>system/SysSet</h4><p>系統設定檔。應該與 TimeRiver 合併。</p>\n<h4 id=\"system-TimeRiver\"><a href=\"#system-TimeRiver\" class=\"headerlink\" title=\"system/TimeRiver\"></a>system/TimeRiver</h4><p>系統設定檔。主要是針對計時器的部分，這部分的設定會被記錄在 SQLite 中，確保每次重新啟動時都會是使用者設定的值。</p>\n<h4 id=\"tenthousandtimer-MainActivity\"><a href=\"#tenthousandtimer-MainActivity\" class=\"headerlink\" title=\"tenthousandtimer/MainActivity\"></a>tenthousandtimer/MainActivity</h4><p>主要介面的操作，拿讀取進來的資料動態新增控制項，並且宣告、啟動計時器。</p>\n<h4 id=\"tenthousandtimer-MetalsActivity\"><a href=\"#tenthousandtimer-MetalsActivity\" class=\"headerlink\" title=\"tenthousandtimer/MetalsActivity\"></a>tenthousandtimer/MetalsActivity</h4><p>單純檢視獎牌與頭銜等訊息，可以視為單純的 ListView Demo。</p>\n<h4 id=\"tenthousandtimer-MyMenu\"><a href=\"#tenthousandtimer-MyMenu\" class=\"headerlink\" title=\"tenthousandtimer/MyMenu\"></a>tenthousandtimer/MyMenu</h4><p>針對 Menu 包裝操作，命名並沒有使用 Activity 是用來區別這個是一包裝操作的 class 並非直接掛載在頁面上的。</p>\n<h4 id=\"tenthousandtimer-SettingActivity\"><a href=\"#tenthousandtimer-SettingActivity\" class=\"headerlink\" title=\"tenthousandtimer/SettingActivity\"></a>tenthousandtimer/SettingActivity</h4><p>設定頁面，設邊使用了固定的控制項，然後將設定的資訊寫在上面的 system 類別中，並儲存在 SQLite。</p>\n<h4 id=\"tenthousandtimer-WelcomActivity\"><a href=\"#tenthousandtimer-WelcomActivity\" class=\"headerlink\" title=\"tenthousandtimer/WelcomActivity\"></a>tenthousandtimer/WelcomActivity</h4><p>歡迎界面，在裡面載入 SQLite 的資料，其實這沒有必要，在 MainActivity 中載入即可，單純為了好看。</p>\n<h4 id=\"tenthousandtimer-WorkingActivity\"><a href=\"#tenthousandtimer-WorkingActivity\" class=\"headerlink\" title=\"tenthousandtimer/WorkingActivity\"></a>tenthousandtimer/WorkingActivity</h4><p>在 WorkingActivity 中大量的使用了 Animation，如果在事後才掛上 Animation 容易導致先前設計的資料流多少出現錯誤。仔細研究 Animation 與主程式非同步的關係，就能解決這個問題，並不至於需要 APP 大改寫。</p>\n<h4 id=\"tttsql-PlanSQL-amp-tttsql-SystemSettingSQL\"><a href=\"#tttsql-PlanSQL-amp-tttsql-SystemSettingSQL\" class=\"headerlink\" title=\"tttsql/PlanSQL &amp; tttsql/SystemSettingSQL\"></a>tttsql/PlanSQL &amp; tttsql/SystemSettingSQL</h4><p>包裝了 SQLite 的操作，包含了整批資料的 CRUD，這邊對於 SQLite 的操作相當基本，依據我的印象，資料更新的操作是直接用覆蓋的。基本上也不會出錯，在小量的資料下，效能也沒有問題。PlanSQL 和 SystemSettingSQL 分別包裝了不同的資料而已，基本上觀念完全相同。皆是在載入畫面時會讀取資料。記得注意 Andriod 的版本問題，另外 SQLite 自己也有版本問題，請確保測試資料正確，紀律性的測試可以省去很多麻煩。</p>\n<h4 id=\"viewlist-AddBtn-amp-viewlist-ViewList\"><a href=\"#viewlist-AddBtn-amp-viewlist-ViewList\" class=\"headerlink\" title=\"viewlist/AddBtn &amp; viewlist/ViewList\"></a>viewlist/AddBtn &amp; viewlist/ViewList</h4><p>這兩個類別都包裝了動態新增物件的功能，新增動態物件其實相當麻煩，要考慮物件本身、事件、資料，因此我會盡可能將資訊都封裝在類別內，屆時只需要傳入必要參數即可，如任務有用物件包裝好，那理所當然直接傳遞物件即可。</p>\n<p><img src=\"/images/TTtimer/demo2.jpg\" alt=\"screen shot\"></p>\n<h2 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h2><p>TTtiemr 亦有存在問題，目前我個人也不知道該如何解決。TTtimer 似乎在重複開啟太多任務後，會導致手機效能降低，吃掉太多CPU或記憶體。但此部分已經超過我對 Andriod APP 的認知，需要更專業的技術。但 TTtimer 所使用的技術，除了連線的需求之外，能滿足絕大部份的 APP 開發。這次的 Andriod APP - TTtimer 分享希望能幫助到大家，如果有任何問題也可以 <a href=\"https://www.facebook.com/profile.php?id=100001317746154\">Facebook</a> 敲我或是寄信給我詢問細節，但請標明是誰詢問與相關的問題資訊。</p>"},{"title":"CleanCode 無瑕的程式碼 (上篇)","date":"2017-02-05T02:10:15.000Z","thumbnail":"/images/books/CleanCode_thumbnail.jpg","_content":"\n無瑕的程式碼，其實是我第二次詳細閱讀這本書。第一次是在大學一年級，剛開始寫程式的我根本完全看不懂書中在寫什麼啊！每字每句話都能看懂，卻完全無法理解意義或是體悟到任何的道理，丟在書架上幾年後，工作之餘再重新看了一次。這次感觸良多，有些是我犯過的錯，有些對我來說是重要的警告。總之，我認為這是一本程式設計師必讀的書，說是學習一種新的知識或是撰寫技巧其實並不精確，個人覺得是幫助自己釐清撰寫程式碼時的思考、自我反省的一本書。看完這本書仍然取決於我們自己要改變多少做事的風格。\n\n# 無瑕的程式碼\n\n![無瑕的程式碼 CleanCode](/images/books/CleanCode.jpg)\n\n為什麼需要花時間維程式碼的整潔？真正的\"無瑕\"的程式碼的定義是什麼？在第一章節作者給了一個大概的方向：無暇程式碼就是在追求程式碼的表達能力，且沒有任何一個流派是絕對正確的。維護整潔的程式碼，不僅僅是程式設計師對於專業的自我要求，也是在日益龐大的系統開發中，迫切需要重視的問題。或許在小型的專案中我們能仰賴記憶力、猜測、或是一些經驗推導來維持整個專案的運作。隨著團隊的人數擴增、專案程式碼行數的成長、甚至單純是客戶的要求朝三暮四的變化，整潔的程式碼開始成為必要的開發條件，不論是實質上的效率問題，甚至是影響到日後的修改、維護，缺乏整潔觀念的程式碼必然會帶來一場災難。\n\n# 整潔程式碼的第一步\n\n前面二到五章討論著變數命名、函數、註解、程式碼編排等等細節的技巧，在這部分我在學生時期就有特別在注意，但往往沒有相當明確的方向與見解，以下綜合書中的資訊和我在職場前輩身上學到的智慧，大致整理成以下幾個重點：\n\n### 排版、正確註解\n\n排版和正確語意的註解是相當基本的東西，基本除了不要亂雷別人之外，沒有什麼爭議問題。最需要討論的應該就是註解的量，有些開發者會相當仰賴註解把事情說清楚，而另一派的開發者認為，當前開發的語言幾乎都是高階語言了，我們透過變數和函數的命名就應該將事情說明清楚。我個人是支持後者的說法，在工作經驗中也是比較偏向後者的作風。註解只用來補足某些程式碼無法陳述的部分而已，嘗試更精確地名命、重構程式碼才是正確的整潔方式。\n\n而註解掉的廢棄程式碼則是完全不應該出現的，刪除時應當對程式碼負責。總之，這是版本控管的事情了，他本身就不應該留在那邊。註解下來的程式碼，只會變成永遠的殘存程式碼放在那邊而已，而沒有人敢去刪除它，留著他感覺很重要，但是註解掉就代表不需要了。\n\n### 不要白目、避免自己犯錯\n\n不論是常數、變數、函數甚至類別命名等，最重要的事情是如實的反應內容，當然擁有很多命名的規則，或是慣用的習慣，但最大的重點是忠實的反應實際上的內容。同時不要使用無意義的命名：諸如 `tmp`, `data` 這些命名其實是我在學生時期撰寫程式碼常用的，當然因為我多半是一個認自己寫，我總是知道 `tmp` 我多半用在拆解資料，`data` 通常我用在 API 或是函數回傳的資料。但真正的主因是學生時期的系統往往不太複雜，就算我繳交過最複雜的幾個 APP 和選課系統，往往都是瀑布式開發，一次完成的。命名最大的影響在於：當我們回頭看自己的程式碼時。當我們回頭追尋問題、修改功能、甚至是看別人的程式碼時，這些無意義的命名將會造成很大的影響，問題小則浪費時間，大則用錯變數、重疊使用變數，造成交叉感染。當然白目的命名就更不可取了 `magicNumber`、`justDoThis()` 等，當我們自己在撰寫時可能覺得情投意合，完全表達了我們想表達的狀況，但往往會造成更多的誤導。\n\n而在命名的選擇中，需要仔細的衡量 \"完全表達內容\" 和 \"避免贅述\"，並且找到適當的平衡點，不要一昧的把變數名稱拉長來完整描述狀況，適當即可。何謂適當？我自己認為這就是專業的 Developer 和 Programer 之間的第一個差距，在龐大的組織中會針對開發做細節的規範，但如果只會死板地遵循規範，不應該是一個稱為智力型工作者的 Developer 該有的樣子。\n\n### 函數即映射\n\n這是在前一份工作的前輩指點，幾個月前的自己對於函數命名犯下許多錯誤，但當時並不知覺，在之後雷到自己。`函數即映射` 很明確的指出，每個函數的名稱應該正確的描述自己內部的行為，同時可推導出 pure function 的觀念，一個操作或是一個動作，就是一個函數，片段的函數在組合包裝成更大的功能，層層包裝之中，必須分工明確，這樣才能完整地描述整件事情的操作流程。這其中有一個相當重要的觀念需要注意，函數不應該有副作用，超出預期功能的函數並不會比較方便，而是製造更多的麻煩而已。\n\n### 善用物件及資料結構來表達\n\n類似於封裝的觀念，了解物件真正要做的事情是什麼，完整的命名後打包，正確的封裝來避免外界的干擾，同時也是減少對外界傳達不必要的資訊。而針對 Node.js 在這部分的觀念，個人認為重點是善用第三方套件，用大家熟機的套見就像使用物件一樣，將程式更明確的語易化，而熟悉的套件功能，也減少了閱讀程式碼的成本，更明確的闡述一切。舉例套件 `lodash`，lodash中友需許多多已經包裝好的片段功能，協助我們取出資料、整理資料等等，很多功能其實也只要單純一兩個迴圈加上幾個if便可以完成，但在不考慮效能的情況下，第三方套件會比自己撰寫的迴圈來得更語意明確。\n\n### 層層的錯誤處理\n\n錯誤處理是大型型系統開中最重要的環節，在中後期開發或是功能橋接的階段，不可避免的事面對各種錯誤，而如何尋找出錯誤，除了仰賴工程師自己的技巧之外，透過錯誤處理系統正確的承接錯誤的來源也相當重要，正確的定義每個錯誤，避免整個系統只使用少數幾個甚至一個錯誤包裝。先前我覺得全域是的承接錯誤很方便很帥，結果在系統開發中後期造成了不少的困擾。當然逐層追回仍然能解析出來錯誤真正的原因，但是在每個承接錯誤的地方加上註記，或許會來得更好。\n","source":"_posts/20170205_BOOKS_CleanCode1.md","raw":"title: CleanCode 無瑕的程式碼 (上篇)\ndate: 2017-02-05 10:10:15\ncategories: 好書筆記\nthumbnail: /images/books/CleanCode_thumbnail.jpg\ntags:\n- 讀書心得\n- 程式設計\n- 重點筆記\n---\n\n無瑕的程式碼，其實是我第二次詳細閱讀這本書。第一次是在大學一年級，剛開始寫程式的我根本完全看不懂書中在寫什麼啊！每字每句話都能看懂，卻完全無法理解意義或是體悟到任何的道理，丟在書架上幾年後，工作之餘再重新看了一次。這次感觸良多，有些是我犯過的錯，有些對我來說是重要的警告。總之，我認為這是一本程式設計師必讀的書，說是學習一種新的知識或是撰寫技巧其實並不精確，個人覺得是幫助自己釐清撰寫程式碼時的思考、自我反省的一本書。看完這本書仍然取決於我們自己要改變多少做事的風格。\n\n# 無瑕的程式碼\n\n![無瑕的程式碼 CleanCode](/images/books/CleanCode.jpg)\n\n為什麼需要花時間維程式碼的整潔？真正的\"無瑕\"的程式碼的定義是什麼？在第一章節作者給了一個大概的方向：無暇程式碼就是在追求程式碼的表達能力，且沒有任何一個流派是絕對正確的。維護整潔的程式碼，不僅僅是程式設計師對於專業的自我要求，也是在日益龐大的系統開發中，迫切需要重視的問題。或許在小型的專案中我們能仰賴記憶力、猜測、或是一些經驗推導來維持整個專案的運作。隨著團隊的人數擴增、專案程式碼行數的成長、甚至單純是客戶的要求朝三暮四的變化，整潔的程式碼開始成為必要的開發條件，不論是實質上的效率問題，甚至是影響到日後的修改、維護，缺乏整潔觀念的程式碼必然會帶來一場災難。\n\n# 整潔程式碼的第一步\n\n前面二到五章討論著變數命名、函數、註解、程式碼編排等等細節的技巧，在這部分我在學生時期就有特別在注意，但往往沒有相當明確的方向與見解，以下綜合書中的資訊和我在職場前輩身上學到的智慧，大致整理成以下幾個重點：\n\n### 排版、正確註解\n\n排版和正確語意的註解是相當基本的東西，基本除了不要亂雷別人之外，沒有什麼爭議問題。最需要討論的應該就是註解的量，有些開發者會相當仰賴註解把事情說清楚，而另一派的開發者認為，當前開發的語言幾乎都是高階語言了，我們透過變數和函數的命名就應該將事情說明清楚。我個人是支持後者的說法，在工作經驗中也是比較偏向後者的作風。註解只用來補足某些程式碼無法陳述的部分而已，嘗試更精確地名命、重構程式碼才是正確的整潔方式。\n\n而註解掉的廢棄程式碼則是完全不應該出現的，刪除時應當對程式碼負責。總之，這是版本控管的事情了，他本身就不應該留在那邊。註解下來的程式碼，只會變成永遠的殘存程式碼放在那邊而已，而沒有人敢去刪除它，留著他感覺很重要，但是註解掉就代表不需要了。\n\n### 不要白目、避免自己犯錯\n\n不論是常數、變數、函數甚至類別命名等，最重要的事情是如實的反應內容，當然擁有很多命名的規則，或是慣用的習慣，但最大的重點是忠實的反應實際上的內容。同時不要使用無意義的命名：諸如 `tmp`, `data` 這些命名其實是我在學生時期撰寫程式碼常用的，當然因為我多半是一個認自己寫，我總是知道 `tmp` 我多半用在拆解資料，`data` 通常我用在 API 或是函數回傳的資料。但真正的主因是學生時期的系統往往不太複雜，就算我繳交過最複雜的幾個 APP 和選課系統，往往都是瀑布式開發，一次完成的。命名最大的影響在於：當我們回頭看自己的程式碼時。當我們回頭追尋問題、修改功能、甚至是看別人的程式碼時，這些無意義的命名將會造成很大的影響，問題小則浪費時間，大則用錯變數、重疊使用變數，造成交叉感染。當然白目的命名就更不可取了 `magicNumber`、`justDoThis()` 等，當我們自己在撰寫時可能覺得情投意合，完全表達了我們想表達的狀況，但往往會造成更多的誤導。\n\n而在命名的選擇中，需要仔細的衡量 \"完全表達內容\" 和 \"避免贅述\"，並且找到適當的平衡點，不要一昧的把變數名稱拉長來完整描述狀況，適當即可。何謂適當？我自己認為這就是專業的 Developer 和 Programer 之間的第一個差距，在龐大的組織中會針對開發做細節的規範，但如果只會死板地遵循規範，不應該是一個稱為智力型工作者的 Developer 該有的樣子。\n\n### 函數即映射\n\n這是在前一份工作的前輩指點，幾個月前的自己對於函數命名犯下許多錯誤，但當時並不知覺，在之後雷到自己。`函數即映射` 很明確的指出，每個函數的名稱應該正確的描述自己內部的行為，同時可推導出 pure function 的觀念，一個操作或是一個動作，就是一個函數，片段的函數在組合包裝成更大的功能，層層包裝之中，必須分工明確，這樣才能完整地描述整件事情的操作流程。這其中有一個相當重要的觀念需要注意，函數不應該有副作用，超出預期功能的函數並不會比較方便，而是製造更多的麻煩而已。\n\n### 善用物件及資料結構來表達\n\n類似於封裝的觀念，了解物件真正要做的事情是什麼，完整的命名後打包，正確的封裝來避免外界的干擾，同時也是減少對外界傳達不必要的資訊。而針對 Node.js 在這部分的觀念，個人認為重點是善用第三方套件，用大家熟機的套見就像使用物件一樣，將程式更明確的語易化，而熟悉的套件功能，也減少了閱讀程式碼的成本，更明確的闡述一切。舉例套件 `lodash`，lodash中友需許多多已經包裝好的片段功能，協助我們取出資料、整理資料等等，很多功能其實也只要單純一兩個迴圈加上幾個if便可以完成，但在不考慮效能的情況下，第三方套件會比自己撰寫的迴圈來得更語意明確。\n\n### 層層的錯誤處理\n\n錯誤處理是大型型系統開中最重要的環節，在中後期開發或是功能橋接的階段，不可避免的事面對各種錯誤，而如何尋找出錯誤，除了仰賴工程師自己的技巧之外，透過錯誤處理系統正確的承接錯誤的來源也相當重要，正確的定義每個錯誤，避免整個系統只使用少數幾個甚至一個錯誤包裝。先前我覺得全域是的承接錯誤很方便很帥，結果在系統開發中後期造成了不少的困擾。當然逐層追回仍然能解析出來錯誤真正的原因，但是在每個承接錯誤的地方加上註記，或許會來得更好。\n","slug":"20170205_BOOKS_CleanCode1","published":1,"updated":"2017-02-05T13:03:24.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvp000cc0u0fgeunws7","content":"<p>無瑕的程式碼，其實是我第二次詳細閱讀這本書。第一次是在大學一年級，剛開始寫程式的我根本完全看不懂書中在寫什麼啊！每字每句話都能看懂，卻完全無法理解意義或是體悟到任何的道理，丟在書架上幾年後，工作之餘再重新看了一次。這次感觸良多，有些是我犯過的錯，有些對我來說是重要的警告。總之，我認為這是一本程式設計師必讀的書，說是學習一種新的知識或是撰寫技巧其實並不精確，個人覺得是幫助自己釐清撰寫程式碼時的思考、自我反省的一本書。看完這本書仍然取決於我們自己要改變多少做事的風格。</p>\n<h1 id=\"無瑕的程式碼\"><a href=\"#無瑕的程式碼\" class=\"headerlink\" title=\"無瑕的程式碼\"></a>無瑕的程式碼</h1><p><img src=\"/images/books/CleanCode.jpg\" alt=\"無瑕的程式碼 CleanCode\"></p>\n<p>為什麼需要花時間維程式碼的整潔？真正的”無瑕”的程式碼的定義是什麼？在第一章節作者給了一個大概的方向：無暇程式碼就是在追求程式碼的表達能力，且沒有任何一個流派是絕對正確的。維護整潔的程式碼，不僅僅是程式設計師對於專業的自我要求，也是在日益龐大的系統開發中，迫切需要重視的問題。或許在小型的專案中我們能仰賴記憶力、猜測、或是一些經驗推導來維持整個專案的運作。隨著團隊的人數擴增、專案程式碼行數的成長、甚至單純是客戶的要求朝三暮四的變化，整潔的程式碼開始成為必要的開發條件，不論是實質上的效率問題，甚至是影響到日後的修改、維護，缺乏整潔觀念的程式碼必然會帶來一場災難。</p>\n<h1 id=\"整潔程式碼的第一步\"><a href=\"#整潔程式碼的第一步\" class=\"headerlink\" title=\"整潔程式碼的第一步\"></a>整潔程式碼的第一步</h1><p>前面二到五章討論著變數命名、函數、註解、程式碼編排等等細節的技巧，在這部分我在學生時期就有特別在注意，但往往沒有相當明確的方向與見解，以下綜合書中的資訊和我在職場前輩身上學到的智慧，大致整理成以下幾個重點：</p>\n<h3 id=\"排版、正確註解\"><a href=\"#排版、正確註解\" class=\"headerlink\" title=\"排版、正確註解\"></a>排版、正確註解</h3><p>排版和正確語意的註解是相當基本的東西，基本除了不要亂雷別人之外，沒有什麼爭議問題。最需要討論的應該就是註解的量，有些開發者會相當仰賴註解把事情說清楚，而另一派的開發者認為，當前開發的語言幾乎都是高階語言了，我們透過變數和函數的命名就應該將事情說明清楚。我個人是支持後者的說法，在工作經驗中也是比較偏向後者的作風。註解只用來補足某些程式碼無法陳述的部分而已，嘗試更精確地名命、重構程式碼才是正確的整潔方式。</p>\n<p>而註解掉的廢棄程式碼則是完全不應該出現的，刪除時應當對程式碼負責。總之，這是版本控管的事情了，他本身就不應該留在那邊。註解下來的程式碼，只會變成永遠的殘存程式碼放在那邊而已，而沒有人敢去刪除它，留著他感覺很重要，但是註解掉就代表不需要了。</p>\n<h3 id=\"不要白目、避免自己犯錯\"><a href=\"#不要白目、避免自己犯錯\" class=\"headerlink\" title=\"不要白目、避免自己犯錯\"></a>不要白目、避免自己犯錯</h3><p>不論是常數、變數、函數甚至類別命名等，最重要的事情是如實的反應內容，當然擁有很多命名的規則，或是慣用的習慣，但最大的重點是忠實的反應實際上的內容。同時不要使用無意義的命名：諸如 <code>tmp</code>, <code>data</code> 這些命名其實是我在學生時期撰寫程式碼常用的，當然因為我多半是一個認自己寫，我總是知道 <code>tmp</code> 我多半用在拆解資料，<code>data</code> 通常我用在 API 或是函數回傳的資料。但真正的主因是學生時期的系統往往不太複雜，就算我繳交過最複雜的幾個 APP 和選課系統，往往都是瀑布式開發，一次完成的。命名最大的影響在於：當我們回頭看自己的程式碼時。當我們回頭追尋問題、修改功能、甚至是看別人的程式碼時，這些無意義的命名將會造成很大的影響，問題小則浪費時間，大則用錯變數、重疊使用變數，造成交叉感染。當然白目的命名就更不可取了 <code>magicNumber</code>、<code>justDoThis()</code> 等，當我們自己在撰寫時可能覺得情投意合，完全表達了我們想表達的狀況，但往往會造成更多的誤導。</p>\n<p>而在命名的選擇中，需要仔細的衡量 “完全表達內容” 和 “避免贅述”，並且找到適當的平衡點，不要一昧的把變數名稱拉長來完整描述狀況，適當即可。何謂適當？我自己認為這就是專業的 Developer 和 Programer 之間的第一個差距，在龐大的組織中會針對開發做細節的規範，但如果只會死板地遵循規範，不應該是一個稱為智力型工作者的 Developer 該有的樣子。</p>\n<h3 id=\"函數即映射\"><a href=\"#函數即映射\" class=\"headerlink\" title=\"函數即映射\"></a>函數即映射</h3><p>這是在前一份工作的前輩指點，幾個月前的自己對於函數命名犯下許多錯誤，但當時並不知覺，在之後雷到自己。<code>函數即映射</code> 很明確的指出，每個函數的名稱應該正確的描述自己內部的行為，同時可推導出 pure function 的觀念，一個操作或是一個動作，就是一個函數，片段的函數在組合包裝成更大的功能，層層包裝之中，必須分工明確，這樣才能完整地描述整件事情的操作流程。這其中有一個相當重要的觀念需要注意，函數不應該有副作用，超出預期功能的函數並不會比較方便，而是製造更多的麻煩而已。</p>\n<h3 id=\"善用物件及資料結構來表達\"><a href=\"#善用物件及資料結構來表達\" class=\"headerlink\" title=\"善用物件及資料結構來表達\"></a>善用物件及資料結構來表達</h3><p>類似於封裝的觀念，了解物件真正要做的事情是什麼，完整的命名後打包，正確的封裝來避免外界的干擾，同時也是減少對外界傳達不必要的資訊。而針對 Node.js 在這部分的觀念，個人認為重點是善用第三方套件，用大家熟機的套見就像使用物件一樣，將程式更明確的語易化，而熟悉的套件功能，也減少了閱讀程式碼的成本，更明確的闡述一切。舉例套件 <code>lodash</code>，lodash中友需許多多已經包裝好的片段功能，協助我們取出資料、整理資料等等，很多功能其實也只要單純一兩個迴圈加上幾個if便可以完成，但在不考慮效能的情況下，第三方套件會比自己撰寫的迴圈來得更語意明確。</p>\n<h3 id=\"層層的錯誤處理\"><a href=\"#層層的錯誤處理\" class=\"headerlink\" title=\"層層的錯誤處理\"></a>層層的錯誤處理</h3><p>錯誤處理是大型型系統開中最重要的環節，在中後期開發或是功能橋接的階段，不可避免的事面對各種錯誤，而如何尋找出錯誤，除了仰賴工程師自己的技巧之外，透過錯誤處理系統正確的承接錯誤的來源也相當重要，正確的定義每個錯誤，避免整個系統只使用少數幾個甚至一個錯誤包裝。先前我覺得全域是的承接錯誤很方便很帥，結果在系統開發中後期造成了不少的困擾。當然逐層追回仍然能解析出來錯誤真正的原因，但是在每個承接錯誤的地方加上註記，或許會來得更好。</p>\n","excerpt":"","more":"<p>無瑕的程式碼，其實是我第二次詳細閱讀這本書。第一次是在大學一年級，剛開始寫程式的我根本完全看不懂書中在寫什麼啊！每字每句話都能看懂，卻完全無法理解意義或是體悟到任何的道理，丟在書架上幾年後，工作之餘再重新看了一次。這次感觸良多，有些是我犯過的錯，有些對我來說是重要的警告。總之，我認為這是一本程式設計師必讀的書，說是學習一種新的知識或是撰寫技巧其實並不精確，個人覺得是幫助自己釐清撰寫程式碼時的思考、自我反省的一本書。看完這本書仍然取決於我們自己要改變多少做事的風格。</p>\n<h1 id=\"無瑕的程式碼\"><a href=\"#無瑕的程式碼\" class=\"headerlink\" title=\"無瑕的程式碼\"></a>無瑕的程式碼</h1><p><img src=\"/images/books/CleanCode.jpg\" alt=\"無瑕的程式碼 CleanCode\"></p>\n<p>為什麼需要花時間維程式碼的整潔？真正的”無瑕”的程式碼的定義是什麼？在第一章節作者給了一個大概的方向：無暇程式碼就是在追求程式碼的表達能力，且沒有任何一個流派是絕對正確的。維護整潔的程式碼，不僅僅是程式設計師對於專業的自我要求，也是在日益龐大的系統開發中，迫切需要重視的問題。或許在小型的專案中我們能仰賴記憶力、猜測、或是一些經驗推導來維持整個專案的運作。隨著團隊的人數擴增、專案程式碼行數的成長、甚至單純是客戶的要求朝三暮四的變化，整潔的程式碼開始成為必要的開發條件，不論是實質上的效率問題，甚至是影響到日後的修改、維護，缺乏整潔觀念的程式碼必然會帶來一場災難。</p>\n<h1 id=\"整潔程式碼的第一步\"><a href=\"#整潔程式碼的第一步\" class=\"headerlink\" title=\"整潔程式碼的第一步\"></a>整潔程式碼的第一步</h1><p>前面二到五章討論著變數命名、函數、註解、程式碼編排等等細節的技巧，在這部分我在學生時期就有特別在注意，但往往沒有相當明確的方向與見解，以下綜合書中的資訊和我在職場前輩身上學到的智慧，大致整理成以下幾個重點：</p>\n<h3 id=\"排版、正確註解\"><a href=\"#排版、正確註解\" class=\"headerlink\" title=\"排版、正確註解\"></a>排版、正確註解</h3><p>排版和正確語意的註解是相當基本的東西，基本除了不要亂雷別人之外，沒有什麼爭議問題。最需要討論的應該就是註解的量，有些開發者會相當仰賴註解把事情說清楚，而另一派的開發者認為，當前開發的語言幾乎都是高階語言了，我們透過變數和函數的命名就應該將事情說明清楚。我個人是支持後者的說法，在工作經驗中也是比較偏向後者的作風。註解只用來補足某些程式碼無法陳述的部分而已，嘗試更精確地名命、重構程式碼才是正確的整潔方式。</p>\n<p>而註解掉的廢棄程式碼則是完全不應該出現的，刪除時應當對程式碼負責。總之，這是版本控管的事情了，他本身就不應該留在那邊。註解下來的程式碼，只會變成永遠的殘存程式碼放在那邊而已，而沒有人敢去刪除它，留著他感覺很重要，但是註解掉就代表不需要了。</p>\n<h3 id=\"不要白目、避免自己犯錯\"><a href=\"#不要白目、避免自己犯錯\" class=\"headerlink\" title=\"不要白目、避免自己犯錯\"></a>不要白目、避免自己犯錯</h3><p>不論是常數、變數、函數甚至類別命名等，最重要的事情是如實的反應內容，當然擁有很多命名的規則，或是慣用的習慣，但最大的重點是忠實的反應實際上的內容。同時不要使用無意義的命名：諸如 <code>tmp</code>, <code>data</code> 這些命名其實是我在學生時期撰寫程式碼常用的，當然因為我多半是一個認自己寫，我總是知道 <code>tmp</code> 我多半用在拆解資料，<code>data</code> 通常我用在 API 或是函數回傳的資料。但真正的主因是學生時期的系統往往不太複雜，就算我繳交過最複雜的幾個 APP 和選課系統，往往都是瀑布式開發，一次完成的。命名最大的影響在於：當我們回頭看自己的程式碼時。當我們回頭追尋問題、修改功能、甚至是看別人的程式碼時，這些無意義的命名將會造成很大的影響，問題小則浪費時間，大則用錯變數、重疊使用變數，造成交叉感染。當然白目的命名就更不可取了 <code>magicNumber</code>、<code>justDoThis()</code> 等，當我們自己在撰寫時可能覺得情投意合，完全表達了我們想表達的狀況，但往往會造成更多的誤導。</p>\n<p>而在命名的選擇中，需要仔細的衡量 “完全表達內容” 和 “避免贅述”，並且找到適當的平衡點，不要一昧的把變數名稱拉長來完整描述狀況，適當即可。何謂適當？我自己認為這就是專業的 Developer 和 Programer 之間的第一個差距，在龐大的組織中會針對開發做細節的規範，但如果只會死板地遵循規範，不應該是一個稱為智力型工作者的 Developer 該有的樣子。</p>\n<h3 id=\"函數即映射\"><a href=\"#函數即映射\" class=\"headerlink\" title=\"函數即映射\"></a>函數即映射</h3><p>這是在前一份工作的前輩指點，幾個月前的自己對於函數命名犯下許多錯誤，但當時並不知覺，在之後雷到自己。<code>函數即映射</code> 很明確的指出，每個函數的名稱應該正確的描述自己內部的行為，同時可推導出 pure function 的觀念，一個操作或是一個動作，就是一個函數，片段的函數在組合包裝成更大的功能，層層包裝之中，必須分工明確，這樣才能完整地描述整件事情的操作流程。這其中有一個相當重要的觀念需要注意，函數不應該有副作用，超出預期功能的函數並不會比較方便，而是製造更多的麻煩而已。</p>\n<h3 id=\"善用物件及資料結構來表達\"><a href=\"#善用物件及資料結構來表達\" class=\"headerlink\" title=\"善用物件及資料結構來表達\"></a>善用物件及資料結構來表達</h3><p>類似於封裝的觀念，了解物件真正要做的事情是什麼，完整的命名後打包，正確的封裝來避免外界的干擾，同時也是減少對外界傳達不必要的資訊。而針對 Node.js 在這部分的觀念，個人認為重點是善用第三方套件，用大家熟機的套見就像使用物件一樣，將程式更明確的語易化，而熟悉的套件功能，也減少了閱讀程式碼的成本，更明確的闡述一切。舉例套件 <code>lodash</code>，lodash中友需許多多已經包裝好的片段功能，協助我們取出資料、整理資料等等，很多功能其實也只要單純一兩個迴圈加上幾個if便可以完成，但在不考慮效能的情況下，第三方套件會比自己撰寫的迴圈來得更語意明確。</p>\n<h3 id=\"層層的錯誤處理\"><a href=\"#層層的錯誤處理\" class=\"headerlink\" title=\"層層的錯誤處理\"></a>層層的錯誤處理</h3><p>錯誤處理是大型型系統開中最重要的環節，在中後期開發或是功能橋接的階段，不可避免的事面對各種錯誤，而如何尋找出錯誤，除了仰賴工程師自己的技巧之外，透過錯誤處理系統正確的承接錯誤的來源也相當重要，正確的定義每個錯誤，避免整個系統只使用少數幾個甚至一個錯誤包裝。先前我覺得全域是的承接錯誤很方便很帥，結果在系統開發中後期造成了不少的困擾。當然逐層追回仍然能解析出來錯誤真正的原因，但是在每個承接錯誤的地方加上註記，或許會來得更好。</p>\n"},{"title":"炸雞排試吃評比 !!","date":"2016-12-28T13:00:00.000Z","thumbnail":"/images/foods/雞排/惡魔雞排-thumbnail.jpg","_content":"\n終於在這次的聖誕節達成了雞排小成就：吃到了台灣著名的三大雞排!!!\n\n`天使雞排` - 瑞豐店 * 2\n`惡魔雞排` - 寧夏店 + 士林店\n`艋舺雞排` - 屏東店 + 鳳山店\n\n因為時間的關係，我前前後後在南北兩地吃到這三家雞排，總共嘗試了六次才有辦法寫出這篇文章。這三家共同的特色就是肉厚多汁，厚實的雞排肉完全不像在吃炸雞排，咬肉的感覺就像厚切牛排的概念一樣，肉厚的口感硬是跟傳統雞全不一樣。\n\n![惡魔雞排](/images/foods/雞排/惡魔雞排.jpg)\n\n<!--more-->\n\n### 雞排口味\n\n口味最重肉汁最多的是`惡魔雞排`，味道的個性鮮明且強烈，而`天使雞排`的肉汁也不妨多讓，味道適中並帶有肉的甜味 讓我允指回味啊！`艋舺雞排`的口味則相當經典，一樣炸的恰到好處，艋舺雞排的椒鹽粉味道相當明顯，但絕不會太嗆或是讓人不舒服。而除了`天使雞排`之外，另外兩家在北部的夜市已經相當容易尋找到他們的蹤跡。\n\n![忘記拍照的天使雞排](/images/foods/雞排/天使雞排.jpg)\n\n### 雞排肉質\n\n雞排的大小其實有蠻大的差距的，儘管就差那兩三口雞排，慾望的滿足感就是差非常多，但我個人認為雞排大小跟地段有直接關係，所以並沒有直接拿來當作比較的參考，我在高雄吃到的雞排就真的有台北的 1.4 倍大的感覺，就是有差那麼多。但因為地價相差甚遠，所以我覺得不能單方片的稱讚某雞排店的雞排好吃。但我仍然私心推薦 `天使雞排 - 瑞豐店`。\n\n![NONO的艋舺雞排](/images/foods/雞排/艋舺雞排.jpg)\n\n當然雞排這種東西吃下去其實也是看運氣，說不定當天那個員工心情不好，多炸了20秒鐘，那口感就差非常多了，品質控管在連鎖的店面上，面對不同的工讀生的操作，年免會有所差距，儘管都可能有時間管制，但天氣氣問的不同，員工反應速度不同等等細節因素，都大大的影響雞排的口感，或是單純就是那隻雞心情不好而已，吃下去雞肉就是不嫩，憂鬱太久的感覺。\n\n\n### 最重要的事\n\n我認為雞排在拿到之後，要在最快的時間內，以不燙到嘴的方式入口！雞排跟牛排一樣，高溫加熱起鍋後 \"靜置\" 也屬於烹飪的一環。以牛排來說，煎鍋起來後靜置 5-6 分鐘是一種烹飪方式，而雞排也是相同的狀況。簡單說，你拿到手之後，雞排也是不斷的在加熱的狀況！那要是晚五分鐘之，雞排就是處於相對過熟的情框了，因此強烈推薦，在不燙到舌頭的情況下，儘早享用你的雞排吧！\n\n![艋舺雞排側切面](/images/foods/雞排/艋舺雞排側切面.jpg)\n\n### 外傳\n\n另外`惡魔狂暴雞排`。是這趟旅程中的小插曲，我吃到的時候他才剛剛開幕不到一個禮拜，或許是意外，雞排炸的略焦，後半段就顯得相當乾硬，可能營業穩定下來之後就會變得非常好吃。\n\n![巧遇的惡魔狂暴雞排](/images/foods/雞排/狂暴惡魔雞排.jpg)\n","source":"_posts/20161228_FOODS_雞排.md","raw":"title: 炸雞排試吃評比 !!\ndate: 2016-12-28 21:00:00\ncategories: 吃吃喝喝\nthumbnail: /images/foods/雞排/惡魔雞排-thumbnail.jpg\ntags:\n- 吃吃喝喝\n- 美食介紹\n- 炸物\n- 夜市\n---\n\n終於在這次的聖誕節達成了雞排小成就：吃到了台灣著名的三大雞排!!!\n\n`天使雞排` - 瑞豐店 * 2\n`惡魔雞排` - 寧夏店 + 士林店\n`艋舺雞排` - 屏東店 + 鳳山店\n\n因為時間的關係，我前前後後在南北兩地吃到這三家雞排，總共嘗試了六次才有辦法寫出這篇文章。這三家共同的特色就是肉厚多汁，厚實的雞排肉完全不像在吃炸雞排，咬肉的感覺就像厚切牛排的概念一樣，肉厚的口感硬是跟傳統雞全不一樣。\n\n![惡魔雞排](/images/foods/雞排/惡魔雞排.jpg)\n\n<!--more-->\n\n### 雞排口味\n\n口味最重肉汁最多的是`惡魔雞排`，味道的個性鮮明且強烈，而`天使雞排`的肉汁也不妨多讓，味道適中並帶有肉的甜味 讓我允指回味啊！`艋舺雞排`的口味則相當經典，一樣炸的恰到好處，艋舺雞排的椒鹽粉味道相當明顯，但絕不會太嗆或是讓人不舒服。而除了`天使雞排`之外，另外兩家在北部的夜市已經相當容易尋找到他們的蹤跡。\n\n![忘記拍照的天使雞排](/images/foods/雞排/天使雞排.jpg)\n\n### 雞排肉質\n\n雞排的大小其實有蠻大的差距的，儘管就差那兩三口雞排，慾望的滿足感就是差非常多，但我個人認為雞排大小跟地段有直接關係，所以並沒有直接拿來當作比較的參考，我在高雄吃到的雞排就真的有台北的 1.4 倍大的感覺，就是有差那麼多。但因為地價相差甚遠，所以我覺得不能單方片的稱讚某雞排店的雞排好吃。但我仍然私心推薦 `天使雞排 - 瑞豐店`。\n\n![NONO的艋舺雞排](/images/foods/雞排/艋舺雞排.jpg)\n\n當然雞排這種東西吃下去其實也是看運氣，說不定當天那個員工心情不好，多炸了20秒鐘，那口感就差非常多了，品質控管在連鎖的店面上，面對不同的工讀生的操作，年免會有所差距，儘管都可能有時間管制，但天氣氣問的不同，員工反應速度不同等等細節因素，都大大的影響雞排的口感，或是單純就是那隻雞心情不好而已，吃下去雞肉就是不嫩，憂鬱太久的感覺。\n\n\n### 最重要的事\n\n我認為雞排在拿到之後，要在最快的時間內，以不燙到嘴的方式入口！雞排跟牛排一樣，高溫加熱起鍋後 \"靜置\" 也屬於烹飪的一環。以牛排來說，煎鍋起來後靜置 5-6 分鐘是一種烹飪方式，而雞排也是相同的狀況。簡單說，你拿到手之後，雞排也是不斷的在加熱的狀況！那要是晚五分鐘之，雞排就是處於相對過熟的情框了，因此強烈推薦，在不燙到舌頭的情況下，儘早享用你的雞排吧！\n\n![艋舺雞排側切面](/images/foods/雞排/艋舺雞排側切面.jpg)\n\n### 外傳\n\n另外`惡魔狂暴雞排`。是這趟旅程中的小插曲，我吃到的時候他才剛剛開幕不到一個禮拜，或許是意外，雞排炸的略焦，後半段就顯得相當乾硬，可能營業穩定下來之後就會變得非常好吃。\n\n![巧遇的惡魔狂暴雞排](/images/foods/雞排/狂暴惡魔雞排.jpg)\n","slug":"20161228_FOODS_雞排","published":1,"updated":"2017-02-04T06:59:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvs000ec0u0y60l2cyk","content":"<p>終於在這次的聖誕節達成了雞排小成就：吃到了台灣著名的三大雞排!!!</p>\n<p><code>天使雞排</code> - 瑞豐店 * 2<br><code>惡魔雞排</code> - 寧夏店 + 士林店<br><code>艋舺雞排</code> - 屏東店 + 鳳山店</p>\n<p>因為時間的關係，我前前後後在南北兩地吃到這三家雞排，總共嘗試了六次才有辦法寫出這篇文章。這三家共同的特色就是肉厚多汁，厚實的雞排肉完全不像在吃炸雞排，咬肉的感覺就像厚切牛排的概念一樣，肉厚的口感硬是跟傳統雞全不一樣。</p>\n<p><img src=\"/images/foods/雞排/惡魔雞排.jpg\" alt=\"惡魔雞排\"></p>\n<a id=\"more\"></a>\n<h3 id=\"雞排口味\"><a href=\"#雞排口味\" class=\"headerlink\" title=\"雞排口味\"></a>雞排口味</h3><p>口味最重肉汁最多的是<code>惡魔雞排</code>，味道的個性鮮明且強烈，而<code>天使雞排</code>的肉汁也不妨多讓，味道適中並帶有肉的甜味 讓我允指回味啊！<code>艋舺雞排</code>的口味則相當經典，一樣炸的恰到好處，艋舺雞排的椒鹽粉味道相當明顯，但絕不會太嗆或是讓人不舒服。而除了<code>天使雞排</code>之外，另外兩家在北部的夜市已經相當容易尋找到他們的蹤跡。</p>\n<p><img src=\"/images/foods/雞排/天使雞排.jpg\" alt=\"忘記拍照的天使雞排\"></p>\n<h3 id=\"雞排肉質\"><a href=\"#雞排肉質\" class=\"headerlink\" title=\"雞排肉質\"></a>雞排肉質</h3><p>雞排的大小其實有蠻大的差距的，儘管就差那兩三口雞排，慾望的滿足感就是差非常多，但我個人認為雞排大小跟地段有直接關係，所以並沒有直接拿來當作比較的參考，我在高雄吃到的雞排就真的有台北的 1.4 倍大的感覺，就是有差那麼多。但因為地價相差甚遠，所以我覺得不能單方片的稱讚某雞排店的雞排好吃。但我仍然私心推薦 <code>天使雞排 - 瑞豐店</code>。</p>\n<p><img src=\"/images/foods/雞排/艋舺雞排.jpg\" alt=\"NONO的艋舺雞排\"></p>\n<p>當然雞排這種東西吃下去其實也是看運氣，說不定當天那個員工心情不好，多炸了20秒鐘，那口感就差非常多了，品質控管在連鎖的店面上，面對不同的工讀生的操作，年免會有所差距，儘管都可能有時間管制，但天氣氣問的不同，員工反應速度不同等等細節因素，都大大的影響雞排的口感，或是單純就是那隻雞心情不好而已，吃下去雞肉就是不嫩，憂鬱太久的感覺。</p>\n<h3 id=\"最重要的事\"><a href=\"#最重要的事\" class=\"headerlink\" title=\"最重要的事\"></a>最重要的事</h3><p>我認為雞排在拿到之後，要在最快的時間內，以不燙到嘴的方式入口！雞排跟牛排一樣，高溫加熱起鍋後 “靜置” 也屬於烹飪的一環。以牛排來說，煎鍋起來後靜置 5-6 分鐘是一種烹飪方式，而雞排也是相同的狀況。簡單說，你拿到手之後，雞排也是不斷的在加熱的狀況！那要是晚五分鐘之，雞排就是處於相對過熟的情框了，因此強烈推薦，在不燙到舌頭的情況下，儘早享用你的雞排吧！</p>\n<p><img src=\"/images/foods/雞排/艋舺雞排側切面.jpg\" alt=\"艋舺雞排側切面\"></p>\n<h3 id=\"外傳\"><a href=\"#外傳\" class=\"headerlink\" title=\"外傳\"></a>外傳</h3><p>另外<code>惡魔狂暴雞排</code>。是這趟旅程中的小插曲，我吃到的時候他才剛剛開幕不到一個禮拜，或許是意外，雞排炸的略焦，後半段就顯得相當乾硬，可能營業穩定下來之後就會變得非常好吃。</p>\n<p><img src=\"/images/foods/雞排/狂暴惡魔雞排.jpg\" alt=\"巧遇的惡魔狂暴雞排\"></p>\n","excerpt":"<p>終於在這次的聖誕節達成了雞排小成就：吃到了台灣著名的三大雞排!!!</p>\n<p><code>天使雞排</code> - 瑞豐店 * 2<br><code>惡魔雞排</code> - 寧夏店 + 士林店<br><code>艋舺雞排</code> - 屏東店 + 鳳山店</p>\n<p>因為時間的關係，我前前後後在南北兩地吃到這三家雞排，總共嘗試了六次才有辦法寫出這篇文章。這三家共同的特色就是肉厚多汁，厚實的雞排肉完全不像在吃炸雞排，咬肉的感覺就像厚切牛排的概念一樣，肉厚的口感硬是跟傳統雞全不一樣。</p>\n<p><img src=\"/images/foods/雞排/惡魔雞排.jpg\" alt=\"惡魔雞排\"></p>","more":"<h3 id=\"雞排口味\"><a href=\"#雞排口味\" class=\"headerlink\" title=\"雞排口味\"></a>雞排口味</h3><p>口味最重肉汁最多的是<code>惡魔雞排</code>，味道的個性鮮明且強烈，而<code>天使雞排</code>的肉汁也不妨多讓，味道適中並帶有肉的甜味 讓我允指回味啊！<code>艋舺雞排</code>的口味則相當經典，一樣炸的恰到好處，艋舺雞排的椒鹽粉味道相當明顯，但絕不會太嗆或是讓人不舒服。而除了<code>天使雞排</code>之外，另外兩家在北部的夜市已經相當容易尋找到他們的蹤跡。</p>\n<p><img src=\"/images/foods/雞排/天使雞排.jpg\" alt=\"忘記拍照的天使雞排\"></p>\n<h3 id=\"雞排肉質\"><a href=\"#雞排肉質\" class=\"headerlink\" title=\"雞排肉質\"></a>雞排肉質</h3><p>雞排的大小其實有蠻大的差距的，儘管就差那兩三口雞排，慾望的滿足感就是差非常多，但我個人認為雞排大小跟地段有直接關係，所以並沒有直接拿來當作比較的參考，我在高雄吃到的雞排就真的有台北的 1.4 倍大的感覺，就是有差那麼多。但因為地價相差甚遠，所以我覺得不能單方片的稱讚某雞排店的雞排好吃。但我仍然私心推薦 <code>天使雞排 - 瑞豐店</code>。</p>\n<p><img src=\"/images/foods/雞排/艋舺雞排.jpg\" alt=\"NONO的艋舺雞排\"></p>\n<p>當然雞排這種東西吃下去其實也是看運氣，說不定當天那個員工心情不好，多炸了20秒鐘，那口感就差非常多了，品質控管在連鎖的店面上，面對不同的工讀生的操作，年免會有所差距，儘管都可能有時間管制，但天氣氣問的不同，員工反應速度不同等等細節因素，都大大的影響雞排的口感，或是單純就是那隻雞心情不好而已，吃下去雞肉就是不嫩，憂鬱太久的感覺。</p>\n<h3 id=\"最重要的事\"><a href=\"#最重要的事\" class=\"headerlink\" title=\"最重要的事\"></a>最重要的事</h3><p>我認為雞排在拿到之後，要在最快的時間內，以不燙到嘴的方式入口！雞排跟牛排一樣，高溫加熱起鍋後 “靜置” 也屬於烹飪的一環。以牛排來說，煎鍋起來後靜置 5-6 分鐘是一種烹飪方式，而雞排也是相同的狀況。簡單說，你拿到手之後，雞排也是不斷的在加熱的狀況！那要是晚五分鐘之，雞排就是處於相對過熟的情框了，因此強烈推薦，在不燙到舌頭的情況下，儘早享用你的雞排吧！</p>\n<p><img src=\"/images/foods/雞排/艋舺雞排側切面.jpg\" alt=\"艋舺雞排側切面\"></p>\n<h3 id=\"外傳\"><a href=\"#外傳\" class=\"headerlink\" title=\"外傳\"></a>外傳</h3><p>另外<code>惡魔狂暴雞排</code>。是這趟旅程中的小插曲，我吃到的時候他才剛剛開幕不到一個禮拜，或許是意外，雞排炸的略焦，後半段就顯得相當乾硬，可能營業穩定下來之後就會變得非常好吃。</p>\n<p><img src=\"/images/foods/雞排/狂暴惡魔雞排.jpg\" alt=\"巧遇的惡魔狂暴雞排\"></p>"},{"title":"被討厭的勇氣 1 (下篇)","date":"2017-01-31T02:10:15.000Z","thumbnail":"/images/books/被討厭的勇氣.jpg","_content":"\n# 被討厭的勇氣\n\n![被討厭的勇氣](/images/books/被討厭的勇氣.jpg)\n\n作者：岸見一郎、古賀史健\n譯者：葉小燕\n出版社：究竟出版\n\n### [被討厭的勇氣 1 (上篇)](http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-1/)\n\n接續著上半篇的心得，後半部的阿德勒開始討論自我定位的問題，當我們完全脫離別人的看法之後，我們自己該如何定位自己？更該如何跟別人相處，如何繼續地用自己的方式，在社會的洪流中生活下去。\n\n<!--more-->\n\n# 個體心理學與整體論\n\n> 無法再分割的最小單位。\n> 精神與肉體無法分割、\n> 理性與情感無法分割、\n> 意識與無意識無法分割\n\n這邊指的無法分割是指我們在表達情緒時，整體是不可分割的，當我們在發脾氣時、在爭論時，理性與情感是無法分割的，也就是無論我們多麽理性，我們仍然是透過整個整體在與人溝通，無論如何都是兼具了理性與感性。\n\n# 人際關係的終極目標在於 \"社會意識\"\n\n> 把別人當成夥伴，並感覺到有自己的歸屬，稱為社會意識。\n\n共同體，共同體的目標也是整個社會。\n\n> 把對自我的執著轉變成為對他人的關心。\n\n# 你不是世界的中心\n\n> 為什麼只關心我?\n> 做不到 \"課題分離\"，被認同需求束搏的人，也是極度以自我為中心的。\n\n阿德勒的觀點為：希望自己取得社會的認同，這個觀點也只是從自己出發而已。只在乎別人是如何看我的這種生活方式，就是所謂的自我中心，只關心\"我\"的生活型態。\n\n> 別人並不是為了滿足你的期望而活，你只是共同體的一部份，不是中心。\n\n重新去思考自己能帶來的價值，能為大家貢獻什麼，而不是單純的思考自己能從大家那邊得到什麼。而為大家帶來什麼貢獻，這點是出自於善意，並不是為了獲得大家的讚賞，而是實質的非強迫性幫助。\n\n> 歸屬感避不是與生俱來的，而是要靠自己的雙手去獲得。\n\n人際關係 --> 課題分離 --> 社會意識\n\n社會意識的觀點在於共同體，不斷拉高自己的高度，透過巨觀的思維來看整件事情。不要把事情看得很單一，例如：誰誰誰不愛我了，我的人生...。要拉高看事情的維度與角度，瞭解到這些事情是本來就有可能發生的，並不是針對自己，遭遇變故後這整個世界也仍然在運轉，並沒有因此而停止。\n\n> 在害怕關係崩壞的恐懼下過日子，其實只是為別人而活，是不自由的生活方式。\n\n# 不責罵，也不稱讚\n\n> 背後的目的都是操控。\n\n如果透過單一手段的話，很容易二元化整個世界的事情，並開始追究是非對錯，達成事情只是為了避免責罵，或獲得獎賞，當我們抽掉賞罰時，會感覺到是事情是沒有意義。這個心態並不樂見。\n\n> 阿德勒心理學否定縱向關係，支持一切的橫向關係。\n\n縱向關係就是導致介入他人的課題的直接原因。因為覺得自己會處理得比對方更好。縱向關係會在自己的對外的各個感情中傳染，當你用縱向關係的心態去瞧不起某人時，另外一方面就投射出縱向關西的崇拜或是尊重另一個人，反之亦然。當我們用縱向關係在看但人際關係時，就會出現階級的情況，這會讓人際關係陷入利益的狀態，例如跟XXX約遲到一下沒關係，但是跟OOO約絕對不能遲到。而這種縱向關係最終會反映在重要的事情決策上，或是面對對方的態度。\n\n> 只要你與任何一個人建立了縱向關係，不知不覺間\n> 你所有的人際關係都會採用縱向的方式。\n\n# 關於稱讚\n\n> 稱讚是一種有能力者給無能力者的評價。\n\n責備容易導致迴避的處事行為，不斷地稱讚會導致被稱讚的人缺乏信心，稱讚也常常讓人誤解是為了稱讚而稱讚的。這邊的情緒處理相當的複雜，真誠與誠實是相當難掌握的，說者無心聽者有意，純粹的鼓勵往往令人起疑。\n\n> 人只有在自己有價值的時候，才會有勇氣。\n\n感謝，或是橫向的稱讚，都屬於比較好的方式。讓人感覺到對整件事情有幫助，感覺到自己有價值。因此肯定他人的作為，是一個更扎實的稱讚方式。(在兼具情與理的表達方式一書中有類似的說法)。\n\n> 當一個人覺得我對共同體來說是有益的時候，就能感受到自己的價值。\n\n這邊就詮釋了自卑感議題，為了追隨別人的觀感，在自己的心中映射出理想的自己，現在的自己與理想中的自己有差距，進而產生了自卑感，這個自卑感也有可能用自傲、炫耀來包裝。自卑感有可能產生動力，也有可能找藉口來詮釋這個自卑感，這時就成了人生的謊言，用來迴避自己無法解決的課題。獲得感謝不是從別人那裡獲得好的評價，而是自己主觀的認識我對別人有貢獻，間接地解決了自卑感的問題，接著有可能可以逐漸解開人生的課題，這屬於一種橫向的幫助，比縱向的幫助、直接性的稱讚來的有效果。\n\n# 只要存在，就有價值\n\n> 我們不以行為的層級，而是已存在的層級來看待別人。\n\n> 社會意識，必須以人開始去做。就算其他人不配合，也和你沒關係。\n> 應該由你開始，完全不必考慮其他人是否提供協助。\n\n這大概是整本書最接近我自己核心思想的一句話。但難免受傷、難免難受。有本書 \"把這份愛傳下去\"， 核心邏輯就是這個，總要有人開始，而不計代價。這樣就能像湖中的漣漪，傳遍整個水面。由自己開市就是最好的方式。\n\n# 小結\n\n交友的課題，不只單單是交朋友，包括與朋友相處上的關係，職場上的人際手腕等等，與整個社為的人相處的關係，這遠比想像中來得複雜，這包括了人與人之間的對等溝通，並且透過自己讓社會變得更好。幫助的不只是整個社會，同時也是在幫助自己，與社會地位比自己低的人建立橫向關係，同事就是在幫助自己與長輩建立橫向溝通的方式，也消除了自己的自卑感。\n\n******\n\n# 認真地活在當下\n\n### 過多的自我意識，反而牽制自我\n\n> 不是肯的自我，而是接納自我\n\n* 接納自我\n* 信任他人\n* 貢獻他人\n\n##### 接納自我\n\n接納自我跟肯定自我是不同的，自我肯定是肯定成功，說服自己能辦到，接納自我是接受那個失敗的自己，當失敗時無力挽回。並在接納之後，繼續的盡最大的努力前進。\n\n> 積極正面的斷念\n\n這就是整個阿德勒心理學最重要的核心價值之一，積極正面，明確的了解自己該做什麼，並且壁面自己陷入過往的泥沼中。不過份的肯定自己，正面的為自己努力，同時嘗試去幫助他人，一切是為了讓自己更好，讓自己對攝位多少有點貢獻。\n\n> 主啊\n> 求你四我平靜的心，去接納無法改變的事情;\n> 賜給我勇氣，去改變可以改變的東西;\n> 並賜給我智慧，去分辨這兩者的差異。\n> --- 尼布爾<寧靜的祈禱文>\n\n我們並非能力不足，只是缺乏勇氣而已。\n\n### 信用和信任有什麼不同\n\n> 相信別人的時候不附加任何條件，再怎麼樣無條件信任他人，最後不過是遭受背叛而已。\n\n重點並不是無條件的幫助別人，應該是在能力範圍內，而在幫助別人時，就只是幫助而已。不要在對方請求幫助時馬上產生懷疑，人跟人互相猜忌，會變得更複雜，觀念與 \"把這份愛傳下去\" 雷同，只要關心自己怎麼做就好，關心自己能不能幫助人，而不是反覆思考是否受到詐騙。\n\n> 只要你害怕信任，終將無法與人建立深厚的關係。\n\n這邊的論點在現實社會中比較難令人接受。這篇像大同世界的思考，屬於一種改變世界的手段，如果從現在起每個人都真誠以待，那這個世界就會變得更單純、更歡樂。\n\n### 工作的本質在於對他人貢獻\n\n> 所謂的貢獻他人並不是捨棄自我去為某人鞠躬盡瘁，而是為了實際感受自我的價值\n\n在整體社會共同體中，社會意識是讓自己有安全感的來源。可以說是一種存在感、自我價值感。阿德勒心理中認為，改變自我需要呼費過去 50% 的歲數時間\n也就是 20 歲的人需要花 10 年改變，同理，越年輕的人開始嘗試是理解，就能越早改變。\n\n### 工作狂是人生的謊言\n\n> 無論在哪種情況下，發動攻擊的那個人是有問題的，絕不是大家都錯了。\n\n這邊同事要思考，自我價值、情緒是種工具以及社會意識。人與人之間相處的方式。\n\n> 別把焦點放在無關緊要的小部分，甚至打算用狹隘的觀點來評論全世界。\n\n這種事情的極端狀況就是憂鬱症、躁鬱症等行為。但也有可能是比較讓然感覺正面的事情：工作狂。\n\n> 以工作為藉口迴避其他責任。\n\n以工作為藉口迴避其他人生的課題。交友的課題、愛的課題。這種就屬於先前提到的：行為層級。以自身的行為定義自己，並不是真正的存在的層級，不夠透徹了解自身的價值。\n\n### 由這一瞬間開始變得幸福\n\n阿德勒認為：幸福來自己認定自身的價值。自己所做的貢獻，可能可見或是不可見。\n\n> 所謂的幸福，就是貢獻感。\n\n這就屬於社會意識的範疇，了解自己的存在、自己的貢獻後就不需要別人的人同來定義自己的供獻。不屬於追求別人的認同感時，就能放下那個來自人際關係的包袱\n不必成為別人或是某個自己期待受到肯定的人，而是自己就是自己，自我認同，就不會以行為的層級，而是真正存在的層級參與社會的共同體。\n\n### 想成為特別存在的人有兩條路\n\n> 為了得到別人的關注，脫離普通的狀態，成為特別的存在\n\n有可能特別好，也有可能特別壞。當我們透過不太正當的手段追求受到關注，例如小孩子的打鬧，或是其他蓄意引人注目的問題，屬於簡便的追求卓越，追求的是自己受到關注的感覺，某種層面上，這也屬於一種自私的行為，單純為了滿足自己而已。\n\n### 甘於平凡的勇氣\n\n> 我們沒有必要刻意誇耀自己的優越性\n\n### 人生是一連串的剎那\n\n活在當下。追求的是此刻的心態，回頭時候看到許多光彩，這邊的觀念偏向說，並不是所有的事情都要完美個站照規劃達成，才能擁有好結果。如果你去爬山，計畫爬到山頂，可是爬了一半就下來，仍然是去爬山，並不是一切都要按照計畫的完美執行。而是當下最努力的我們，才適當我們在回憶時最甘甜的剎那。\n\n> 過去發生什麼事情，和當下沒有關係，而未來會如何，也不是當下要考慮的問題。\n> 不要用直線去衡量自己已經走到了哪裡，要看看每個剎那是如何度過的。\n\n從更現實的角度來看，如果我現在即刻身亡，我會後悔什麼，我最在意的是什麼，這就是這個剎那。這相當的難實踐。\n\n> 只要貢獻他人這顆引導之星還在，就不會徬徨，做什麼都可以。\n\n將自己導向正確的路途上\n\n> 必須有人開始去做。就算其他人不配合，也和你沒關係。這就是我的建議。\n> 應該由你開始，完全不必考慮其他人是否提供協助\n\n現在，就是現在，當我們想通的這一瞬間。\n","source":"_posts/20170131_BOOKS_被討厭的勇氣1-2.md","raw":"title: 被討厭的勇氣 1 (下篇)\ndate: 2017-01-31 10:10:15\ncategories: 好書筆記\nthumbnail: /images/books/被討厭的勇氣.jpg\ntags:\n- 讀書心得\n- 心理學\n- 自我成長\n- 重點筆記\n---\n\n# 被討厭的勇氣\n\n![被討厭的勇氣](/images/books/被討厭的勇氣.jpg)\n\n作者：岸見一郎、古賀史健\n譯者：葉小燕\n出版社：究竟出版\n\n### [被討厭的勇氣 1 (上篇)](http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-1/)\n\n接續著上半篇的心得，後半部的阿德勒開始討論自我定位的問題，當我們完全脫離別人的看法之後，我們自己該如何定位自己？更該如何跟別人相處，如何繼續地用自己的方式，在社會的洪流中生活下去。\n\n<!--more-->\n\n# 個體心理學與整體論\n\n> 無法再分割的最小單位。\n> 精神與肉體無法分割、\n> 理性與情感無法分割、\n> 意識與無意識無法分割\n\n這邊指的無法分割是指我們在表達情緒時，整體是不可分割的，當我們在發脾氣時、在爭論時，理性與情感是無法分割的，也就是無論我們多麽理性，我們仍然是透過整個整體在與人溝通，無論如何都是兼具了理性與感性。\n\n# 人際關係的終極目標在於 \"社會意識\"\n\n> 把別人當成夥伴，並感覺到有自己的歸屬，稱為社會意識。\n\n共同體，共同體的目標也是整個社會。\n\n> 把對自我的執著轉變成為對他人的關心。\n\n# 你不是世界的中心\n\n> 為什麼只關心我?\n> 做不到 \"課題分離\"，被認同需求束搏的人，也是極度以自我為中心的。\n\n阿德勒的觀點為：希望自己取得社會的認同，這個觀點也只是從自己出發而已。只在乎別人是如何看我的這種生活方式，就是所謂的自我中心，只關心\"我\"的生活型態。\n\n> 別人並不是為了滿足你的期望而活，你只是共同體的一部份，不是中心。\n\n重新去思考自己能帶來的價值，能為大家貢獻什麼，而不是單純的思考自己能從大家那邊得到什麼。而為大家帶來什麼貢獻，這點是出自於善意，並不是為了獲得大家的讚賞，而是實質的非強迫性幫助。\n\n> 歸屬感避不是與生俱來的，而是要靠自己的雙手去獲得。\n\n人際關係 --> 課題分離 --> 社會意識\n\n社會意識的觀點在於共同體，不斷拉高自己的高度，透過巨觀的思維來看整件事情。不要把事情看得很單一，例如：誰誰誰不愛我了，我的人生...。要拉高看事情的維度與角度，瞭解到這些事情是本來就有可能發生的，並不是針對自己，遭遇變故後這整個世界也仍然在運轉，並沒有因此而停止。\n\n> 在害怕關係崩壞的恐懼下過日子，其實只是為別人而活，是不自由的生活方式。\n\n# 不責罵，也不稱讚\n\n> 背後的目的都是操控。\n\n如果透過單一手段的話，很容易二元化整個世界的事情，並開始追究是非對錯，達成事情只是為了避免責罵，或獲得獎賞，當我們抽掉賞罰時，會感覺到是事情是沒有意義。這個心態並不樂見。\n\n> 阿德勒心理學否定縱向關係，支持一切的橫向關係。\n\n縱向關係就是導致介入他人的課題的直接原因。因為覺得自己會處理得比對方更好。縱向關係會在自己的對外的各個感情中傳染，當你用縱向關係的心態去瞧不起某人時，另外一方面就投射出縱向關西的崇拜或是尊重另一個人，反之亦然。當我們用縱向關係在看但人際關係時，就會出現階級的情況，這會讓人際關係陷入利益的狀態，例如跟XXX約遲到一下沒關係，但是跟OOO約絕對不能遲到。而這種縱向關係最終會反映在重要的事情決策上，或是面對對方的態度。\n\n> 只要你與任何一個人建立了縱向關係，不知不覺間\n> 你所有的人際關係都會採用縱向的方式。\n\n# 關於稱讚\n\n> 稱讚是一種有能力者給無能力者的評價。\n\n責備容易導致迴避的處事行為，不斷地稱讚會導致被稱讚的人缺乏信心，稱讚也常常讓人誤解是為了稱讚而稱讚的。這邊的情緒處理相當的複雜，真誠與誠實是相當難掌握的，說者無心聽者有意，純粹的鼓勵往往令人起疑。\n\n> 人只有在自己有價值的時候，才會有勇氣。\n\n感謝，或是橫向的稱讚，都屬於比較好的方式。讓人感覺到對整件事情有幫助，感覺到自己有價值。因此肯定他人的作為，是一個更扎實的稱讚方式。(在兼具情與理的表達方式一書中有類似的說法)。\n\n> 當一個人覺得我對共同體來說是有益的時候，就能感受到自己的價值。\n\n這邊就詮釋了自卑感議題，為了追隨別人的觀感，在自己的心中映射出理想的自己，現在的自己與理想中的自己有差距，進而產生了自卑感，這個自卑感也有可能用自傲、炫耀來包裝。自卑感有可能產生動力，也有可能找藉口來詮釋這個自卑感，這時就成了人生的謊言，用來迴避自己無法解決的課題。獲得感謝不是從別人那裡獲得好的評價，而是自己主觀的認識我對別人有貢獻，間接地解決了自卑感的問題，接著有可能可以逐漸解開人生的課題，這屬於一種橫向的幫助，比縱向的幫助、直接性的稱讚來的有效果。\n\n# 只要存在，就有價值\n\n> 我們不以行為的層級，而是已存在的層級來看待別人。\n\n> 社會意識，必須以人開始去做。就算其他人不配合，也和你沒關係。\n> 應該由你開始，完全不必考慮其他人是否提供協助。\n\n這大概是整本書最接近我自己核心思想的一句話。但難免受傷、難免難受。有本書 \"把這份愛傳下去\"， 核心邏輯就是這個，總要有人開始，而不計代價。這樣就能像湖中的漣漪，傳遍整個水面。由自己開市就是最好的方式。\n\n# 小結\n\n交友的課題，不只單單是交朋友，包括與朋友相處上的關係，職場上的人際手腕等等，與整個社為的人相處的關係，這遠比想像中來得複雜，這包括了人與人之間的對等溝通，並且透過自己讓社會變得更好。幫助的不只是整個社會，同時也是在幫助自己，與社會地位比自己低的人建立橫向關係，同事就是在幫助自己與長輩建立橫向溝通的方式，也消除了自己的自卑感。\n\n******\n\n# 認真地活在當下\n\n### 過多的自我意識，反而牽制自我\n\n> 不是肯的自我，而是接納自我\n\n* 接納自我\n* 信任他人\n* 貢獻他人\n\n##### 接納自我\n\n接納自我跟肯定自我是不同的，自我肯定是肯定成功，說服自己能辦到，接納自我是接受那個失敗的自己，當失敗時無力挽回。並在接納之後，繼續的盡最大的努力前進。\n\n> 積極正面的斷念\n\n這就是整個阿德勒心理學最重要的核心價值之一，積極正面，明確的了解自己該做什麼，並且壁面自己陷入過往的泥沼中。不過份的肯定自己，正面的為自己努力，同時嘗試去幫助他人，一切是為了讓自己更好，讓自己對攝位多少有點貢獻。\n\n> 主啊\n> 求你四我平靜的心，去接納無法改變的事情;\n> 賜給我勇氣，去改變可以改變的東西;\n> 並賜給我智慧，去分辨這兩者的差異。\n> --- 尼布爾<寧靜的祈禱文>\n\n我們並非能力不足，只是缺乏勇氣而已。\n\n### 信用和信任有什麼不同\n\n> 相信別人的時候不附加任何條件，再怎麼樣無條件信任他人，最後不過是遭受背叛而已。\n\n重點並不是無條件的幫助別人，應該是在能力範圍內，而在幫助別人時，就只是幫助而已。不要在對方請求幫助時馬上產生懷疑，人跟人互相猜忌，會變得更複雜，觀念與 \"把這份愛傳下去\" 雷同，只要關心自己怎麼做就好，關心自己能不能幫助人，而不是反覆思考是否受到詐騙。\n\n> 只要你害怕信任，終將無法與人建立深厚的關係。\n\n這邊的論點在現實社會中比較難令人接受。這篇像大同世界的思考，屬於一種改變世界的手段，如果從現在起每個人都真誠以待，那這個世界就會變得更單純、更歡樂。\n\n### 工作的本質在於對他人貢獻\n\n> 所謂的貢獻他人並不是捨棄自我去為某人鞠躬盡瘁，而是為了實際感受自我的價值\n\n在整體社會共同體中，社會意識是讓自己有安全感的來源。可以說是一種存在感、自我價值感。阿德勒心理中認為，改變自我需要呼費過去 50% 的歲數時間\n也就是 20 歲的人需要花 10 年改變，同理，越年輕的人開始嘗試是理解，就能越早改變。\n\n### 工作狂是人生的謊言\n\n> 無論在哪種情況下，發動攻擊的那個人是有問題的，絕不是大家都錯了。\n\n這邊同事要思考，自我價值、情緒是種工具以及社會意識。人與人之間相處的方式。\n\n> 別把焦點放在無關緊要的小部分，甚至打算用狹隘的觀點來評論全世界。\n\n這種事情的極端狀況就是憂鬱症、躁鬱症等行為。但也有可能是比較讓然感覺正面的事情：工作狂。\n\n> 以工作為藉口迴避其他責任。\n\n以工作為藉口迴避其他人生的課題。交友的課題、愛的課題。這種就屬於先前提到的：行為層級。以自身的行為定義自己，並不是真正的存在的層級，不夠透徹了解自身的價值。\n\n### 由這一瞬間開始變得幸福\n\n阿德勒認為：幸福來自己認定自身的價值。自己所做的貢獻，可能可見或是不可見。\n\n> 所謂的幸福，就是貢獻感。\n\n這就屬於社會意識的範疇，了解自己的存在、自己的貢獻後就不需要別人的人同來定義自己的供獻。不屬於追求別人的認同感時，就能放下那個來自人際關係的包袱\n不必成為別人或是某個自己期待受到肯定的人，而是自己就是自己，自我認同，就不會以行為的層級，而是真正存在的層級參與社會的共同體。\n\n### 想成為特別存在的人有兩條路\n\n> 為了得到別人的關注，脫離普通的狀態，成為特別的存在\n\n有可能特別好，也有可能特別壞。當我們透過不太正當的手段追求受到關注，例如小孩子的打鬧，或是其他蓄意引人注目的問題，屬於簡便的追求卓越，追求的是自己受到關注的感覺，某種層面上，這也屬於一種自私的行為，單純為了滿足自己而已。\n\n### 甘於平凡的勇氣\n\n> 我們沒有必要刻意誇耀自己的優越性\n\n### 人生是一連串的剎那\n\n活在當下。追求的是此刻的心態，回頭時候看到許多光彩，這邊的觀念偏向說，並不是所有的事情都要完美個站照規劃達成，才能擁有好結果。如果你去爬山，計畫爬到山頂，可是爬了一半就下來，仍然是去爬山，並不是一切都要按照計畫的完美執行。而是當下最努力的我們，才適當我們在回憶時最甘甜的剎那。\n\n> 過去發生什麼事情，和當下沒有關係，而未來會如何，也不是當下要考慮的問題。\n> 不要用直線去衡量自己已經走到了哪裡，要看看每個剎那是如何度過的。\n\n從更現實的角度來看，如果我現在即刻身亡，我會後悔什麼，我最在意的是什麼，這就是這個剎那。這相當的難實踐。\n\n> 只要貢獻他人這顆引導之星還在，就不會徬徨，做什麼都可以。\n\n將自己導向正確的路途上\n\n> 必須有人開始去做。就算其他人不配合，也和你沒關係。這就是我的建議。\n> 應該由你開始，完全不必考慮其他人是否提供協助\n\n現在，就是現在，當我們想通的這一瞬間。\n","slug":"20170131_BOOKS_被討厭的勇氣1-2","published":1,"updated":"2017-02-05T10:48:51.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvv000hc0u05xtkk0ev","content":"<h1 id=\"被討厭的勇氣\"><a href=\"#被討厭的勇氣\" class=\"headerlink\" title=\"被討厭的勇氣\"></a>被討厭的勇氣</h1><p><img src=\"/images/books/被討厭的勇氣.jpg\" alt=\"被討厭的勇氣\"></p>\n<p>作者：岸見一郎、古賀史健<br>譯者：葉小燕<br>出版社：究竟出版</p>\n<h3 id=\"被討厭的勇氣-1-上篇\"><a href=\"#被討厭的勇氣-1-上篇\" class=\"headerlink\" title=\"被討厭的勇氣 1 (上篇)\"></a><a href=\"http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-1/\">被討厭的勇氣 1 (上篇)</a></h3><p>接續著上半篇的心得，後半部的阿德勒開始討論自我定位的問題，當我們完全脫離別人的看法之後，我們自己該如何定位自己？更該如何跟別人相處，如何繼續地用自己的方式，在社會的洪流中生活下去。</p>\n<a id=\"more\"></a>\n<h1 id=\"個體心理學與整體論\"><a href=\"#個體心理學與整體論\" class=\"headerlink\" title=\"個體心理學與整體論\"></a>個體心理學與整體論</h1><blockquote>\n<p>無法再分割的最小單位。<br>精神與肉體無法分割、<br>理性與情感無法分割、<br>意識與無意識無法分割</p>\n</blockquote>\n<p>這邊指的無法分割是指我們在表達情緒時，整體是不可分割的，當我們在發脾氣時、在爭論時，理性與情感是無法分割的，也就是無論我們多麽理性，我們仍然是透過整個整體在與人溝通，無論如何都是兼具了理性與感性。</p>\n<h1 id=\"人際關係的終極目標在於-“社會意識”\"><a href=\"#人際關係的終極目標在於-“社會意識”\" class=\"headerlink\" title=\"人際關係的終極目標在於 “社會意識”\"></a>人際關係的終極目標在於 “社會意識”</h1><blockquote>\n<p>把別人當成夥伴，並感覺到有自己的歸屬，稱為社會意識。</p>\n</blockquote>\n<p>共同體，共同體的目標也是整個社會。</p>\n<blockquote>\n<p>把對自我的執著轉變成為對他人的關心。</p>\n</blockquote>\n<h1 id=\"你不是世界的中心\"><a href=\"#你不是世界的中心\" class=\"headerlink\" title=\"你不是世界的中心\"></a>你不是世界的中心</h1><blockquote>\n<p>為什麼只關心我?<br>做不到 “課題分離”，被認同需求束搏的人，也是極度以自我為中心的。</p>\n</blockquote>\n<p>阿德勒的觀點為：希望自己取得社會的認同，這個觀點也只是從自己出發而已。只在乎別人是如何看我的這種生活方式，就是所謂的自我中心，只關心”我”的生活型態。</p>\n<blockquote>\n<p>別人並不是為了滿足你的期望而活，你只是共同體的一部份，不是中心。</p>\n</blockquote>\n<p>重新去思考自己能帶來的價值，能為大家貢獻什麼，而不是單純的思考自己能從大家那邊得到什麼。而為大家帶來什麼貢獻，這點是出自於善意，並不是為了獲得大家的讚賞，而是實質的非強迫性幫助。</p>\n<blockquote>\n<p>歸屬感避不是與生俱來的，而是要靠自己的雙手去獲得。</p>\n</blockquote>\n<p>人際關係 –&gt; 課題分離 –&gt; 社會意識</p>\n<p>社會意識的觀點在於共同體，不斷拉高自己的高度，透過巨觀的思維來看整件事情。不要把事情看得很單一，例如：誰誰誰不愛我了，我的人生…。要拉高看事情的維度與角度，瞭解到這些事情是本來就有可能發生的，並不是針對自己，遭遇變故後這整個世界也仍然在運轉，並沒有因此而停止。</p>\n<blockquote>\n<p>在害怕關係崩壞的恐懼下過日子，其實只是為別人而活，是不自由的生活方式。</p>\n</blockquote>\n<h1 id=\"不責罵，也不稱讚\"><a href=\"#不責罵，也不稱讚\" class=\"headerlink\" title=\"不責罵，也不稱讚\"></a>不責罵，也不稱讚</h1><blockquote>\n<p>背後的目的都是操控。</p>\n</blockquote>\n<p>如果透過單一手段的話，很容易二元化整個世界的事情，並開始追究是非對錯，達成事情只是為了避免責罵，或獲得獎賞，當我們抽掉賞罰時，會感覺到是事情是沒有意義。這個心態並不樂見。</p>\n<blockquote>\n<p>阿德勒心理學否定縱向關係，支持一切的橫向關係。</p>\n</blockquote>\n<p>縱向關係就是導致介入他人的課題的直接原因。因為覺得自己會處理得比對方更好。縱向關係會在自己的對外的各個感情中傳染，當你用縱向關係的心態去瞧不起某人時，另外一方面就投射出縱向關西的崇拜或是尊重另一個人，反之亦然。當我們用縱向關係在看但人際關係時，就會出現階級的情況，這會讓人際關係陷入利益的狀態，例如跟XXX約遲到一下沒關係，但是跟OOO約絕對不能遲到。而這種縱向關係最終會反映在重要的事情決策上，或是面對對方的態度。</p>\n<blockquote>\n<p>只要你與任何一個人建立了縱向關係，不知不覺間<br>你所有的人際關係都會採用縱向的方式。</p>\n</blockquote>\n<h1 id=\"關於稱讚\"><a href=\"#關於稱讚\" class=\"headerlink\" title=\"關於稱讚\"></a>關於稱讚</h1><blockquote>\n<p>稱讚是一種有能力者給無能力者的評價。</p>\n</blockquote>\n<p>責備容易導致迴避的處事行為，不斷地稱讚會導致被稱讚的人缺乏信心，稱讚也常常讓人誤解是為了稱讚而稱讚的。這邊的情緒處理相當的複雜，真誠與誠實是相當難掌握的，說者無心聽者有意，純粹的鼓勵往往令人起疑。</p>\n<blockquote>\n<p>人只有在自己有價值的時候，才會有勇氣。</p>\n</blockquote>\n<p>感謝，或是橫向的稱讚，都屬於比較好的方式。讓人感覺到對整件事情有幫助，感覺到自己有價值。因此肯定他人的作為，是一個更扎實的稱讚方式。(在兼具情與理的表達方式一書中有類似的說法)。</p>\n<blockquote>\n<p>當一個人覺得我對共同體來說是有益的時候，就能感受到自己的價值。</p>\n</blockquote>\n<p>這邊就詮釋了自卑感議題，為了追隨別人的觀感，在自己的心中映射出理想的自己，現在的自己與理想中的自己有差距，進而產生了自卑感，這個自卑感也有可能用自傲、炫耀來包裝。自卑感有可能產生動力，也有可能找藉口來詮釋這個自卑感，這時就成了人生的謊言，用來迴避自己無法解決的課題。獲得感謝不是從別人那裡獲得好的評價，而是自己主觀的認識我對別人有貢獻，間接地解決了自卑感的問題，接著有可能可以逐漸解開人生的課題，這屬於一種橫向的幫助，比縱向的幫助、直接性的稱讚來的有效果。</p>\n<h1 id=\"只要存在，就有價值\"><a href=\"#只要存在，就有價值\" class=\"headerlink\" title=\"只要存在，就有價值\"></a>只要存在，就有價值</h1><blockquote>\n<p>我們不以行為的層級，而是已存在的層級來看待別人。</p>\n<p>社會意識，必須以人開始去做。就算其他人不配合，也和你沒關係。<br>應該由你開始，完全不必考慮其他人是否提供協助。</p>\n</blockquote>\n<p>這大概是整本書最接近我自己核心思想的一句話。但難免受傷、難免難受。有本書 “把這份愛傳下去”， 核心邏輯就是這個，總要有人開始，而不計代價。這樣就能像湖中的漣漪，傳遍整個水面。由自己開市就是最好的方式。</p>\n<h1 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h1><p>交友的課題，不只單單是交朋友，包括與朋友相處上的關係，職場上的人際手腕等等，與整個社為的人相處的關係，這遠比想像中來得複雜，這包括了人與人之間的對等溝通，並且透過自己讓社會變得更好。幫助的不只是整個社會，同時也是在幫助自己，與社會地位比自己低的人建立橫向關係，同事就是在幫助自己與長輩建立橫向溝通的方式，也消除了自己的自卑感。</p>\n<hr>\n<h1 id=\"認真地活在當下\"><a href=\"#認真地活在當下\" class=\"headerlink\" title=\"認真地活在當下\"></a>認真地活在當下</h1><h3 id=\"過多的自我意識，反而牽制自我\"><a href=\"#過多的自我意識，反而牽制自我\" class=\"headerlink\" title=\"過多的自我意識，反而牽制自我\"></a>過多的自我意識，反而牽制自我</h3><blockquote>\n<p>不是肯的自我，而是接納自我</p>\n</blockquote>\n<ul>\n<li>接納自我</li>\n<li>信任他人</li>\n<li>貢獻他人</li>\n</ul>\n<h5 id=\"接納自我\"><a href=\"#接納自我\" class=\"headerlink\" title=\"接納自我\"></a>接納自我</h5><p>接納自我跟肯定自我是不同的，自我肯定是肯定成功，說服自己能辦到，接納自我是接受那個失敗的自己，當失敗時無力挽回。並在接納之後，繼續的盡最大的努力前進。</p>\n<blockquote>\n<p>積極正面的斷念</p>\n</blockquote>\n<p>這就是整個阿德勒心理學最重要的核心價值之一，積極正面，明確的了解自己該做什麼，並且壁面自己陷入過往的泥沼中。不過份的肯定自己，正面的為自己努力，同時嘗試去幫助他人，一切是為了讓自己更好，讓自己對攝位多少有點貢獻。</p>\n<blockquote>\n<p>主啊<br>求你四我平靜的心，去接納無法改變的事情;<br>賜給我勇氣，去改變可以改變的東西;<br>並賜給我智慧，去分辨這兩者的差異。<br>— 尼布爾&lt;寧靜的祈禱文&gt;</p>\n</blockquote>\n<p>我們並非能力不足，只是缺乏勇氣而已。</p>\n<h3 id=\"信用和信任有什麼不同\"><a href=\"#信用和信任有什麼不同\" class=\"headerlink\" title=\"信用和信任有什麼不同\"></a>信用和信任有什麼不同</h3><blockquote>\n<p>相信別人的時候不附加任何條件，再怎麼樣無條件信任他人，最後不過是遭受背叛而已。</p>\n</blockquote>\n<p>重點並不是無條件的幫助別人，應該是在能力範圍內，而在幫助別人時，就只是幫助而已。不要在對方請求幫助時馬上產生懷疑，人跟人互相猜忌，會變得更複雜，觀念與 “把這份愛傳下去” 雷同，只要關心自己怎麼做就好，關心自己能不能幫助人，而不是反覆思考是否受到詐騙。</p>\n<blockquote>\n<p>只要你害怕信任，終將無法與人建立深厚的關係。</p>\n</blockquote>\n<p>這邊的論點在現實社會中比較難令人接受。這篇像大同世界的思考，屬於一種改變世界的手段，如果從現在起每個人都真誠以待，那這個世界就會變得更單純、更歡樂。</p>\n<h3 id=\"工作的本質在於對他人貢獻\"><a href=\"#工作的本質在於對他人貢獻\" class=\"headerlink\" title=\"工作的本質在於對他人貢獻\"></a>工作的本質在於對他人貢獻</h3><blockquote>\n<p>所謂的貢獻他人並不是捨棄自我去為某人鞠躬盡瘁，而是為了實際感受自我的價值</p>\n</blockquote>\n<p>在整體社會共同體中，社會意識是讓自己有安全感的來源。可以說是一種存在感、自我價值感。阿德勒心理中認為，改變自我需要呼費過去 50% 的歲數時間<br>也就是 20 歲的人需要花 10 年改變，同理，越年輕的人開始嘗試是理解，就能越早改變。</p>\n<h3 id=\"工作狂是人生的謊言\"><a href=\"#工作狂是人生的謊言\" class=\"headerlink\" title=\"工作狂是人生的謊言\"></a>工作狂是人生的謊言</h3><blockquote>\n<p>無論在哪種情況下，發動攻擊的那個人是有問題的，絕不是大家都錯了。</p>\n</blockquote>\n<p>這邊同事要思考，自我價值、情緒是種工具以及社會意識。人與人之間相處的方式。</p>\n<blockquote>\n<p>別把焦點放在無關緊要的小部分，甚至打算用狹隘的觀點來評論全世界。</p>\n</blockquote>\n<p>這種事情的極端狀況就是憂鬱症、躁鬱症等行為。但也有可能是比較讓然感覺正面的事情：工作狂。</p>\n<blockquote>\n<p>以工作為藉口迴避其他責任。</p>\n</blockquote>\n<p>以工作為藉口迴避其他人生的課題。交友的課題、愛的課題。這種就屬於先前提到的：行為層級。以自身的行為定義自己，並不是真正的存在的層級，不夠透徹了解自身的價值。</p>\n<h3 id=\"由這一瞬間開始變得幸福\"><a href=\"#由這一瞬間開始變得幸福\" class=\"headerlink\" title=\"由這一瞬間開始變得幸福\"></a>由這一瞬間開始變得幸福</h3><p>阿德勒認為：幸福來自己認定自身的價值。自己所做的貢獻，可能可見或是不可見。</p>\n<blockquote>\n<p>所謂的幸福，就是貢獻感。</p>\n</blockquote>\n<p>這就屬於社會意識的範疇，了解自己的存在、自己的貢獻後就不需要別人的人同來定義自己的供獻。不屬於追求別人的認同感時，就能放下那個來自人際關係的包袱<br>不必成為別人或是某個自己期待受到肯定的人，而是自己就是自己，自我認同，就不會以行為的層級，而是真正存在的層級參與社會的共同體。</p>\n<h3 id=\"想成為特別存在的人有兩條路\"><a href=\"#想成為特別存在的人有兩條路\" class=\"headerlink\" title=\"想成為特別存在的人有兩條路\"></a>想成為特別存在的人有兩條路</h3><blockquote>\n<p>為了得到別人的關注，脫離普通的狀態，成為特別的存在</p>\n</blockquote>\n<p>有可能特別好，也有可能特別壞。當我們透過不太正當的手段追求受到關注，例如小孩子的打鬧，或是其他蓄意引人注目的問題，屬於簡便的追求卓越，追求的是自己受到關注的感覺，某種層面上，這也屬於一種自私的行為，單純為了滿足自己而已。</p>\n<h3 id=\"甘於平凡的勇氣\"><a href=\"#甘於平凡的勇氣\" class=\"headerlink\" title=\"甘於平凡的勇氣\"></a>甘於平凡的勇氣</h3><blockquote>\n<p>我們沒有必要刻意誇耀自己的優越性</p>\n</blockquote>\n<h3 id=\"人生是一連串的剎那\"><a href=\"#人生是一連串的剎那\" class=\"headerlink\" title=\"人生是一連串的剎那\"></a>人生是一連串的剎那</h3><p>活在當下。追求的是此刻的心態，回頭時候看到許多光彩，這邊的觀念偏向說，並不是所有的事情都要完美個站照規劃達成，才能擁有好結果。如果你去爬山，計畫爬到山頂，可是爬了一半就下來，仍然是去爬山，並不是一切都要按照計畫的完美執行。而是當下最努力的我們，才適當我們在回憶時最甘甜的剎那。</p>\n<blockquote>\n<p>過去發生什麼事情，和當下沒有關係，而未來會如何，也不是當下要考慮的問題。<br>不要用直線去衡量自己已經走到了哪裡，要看看每個剎那是如何度過的。</p>\n</blockquote>\n<p>從更現實的角度來看，如果我現在即刻身亡，我會後悔什麼，我最在意的是什麼，這就是這個剎那。這相當的難實踐。</p>\n<blockquote>\n<p>只要貢獻他人這顆引導之星還在，就不會徬徨，做什麼都可以。</p>\n</blockquote>\n<p>將自己導向正確的路途上</p>\n<blockquote>\n<p>必須有人開始去做。就算其他人不配合，也和你沒關係。這就是我的建議。<br>應該由你開始，完全不必考慮其他人是否提供協助</p>\n</blockquote>\n<p>現在，就是現在，當我們想通的這一瞬間。</p>\n","excerpt":"<h1 id=\"被討厭的勇氣\"><a href=\"#被討厭的勇氣\" class=\"headerlink\" title=\"被討厭的勇氣\"></a>被討厭的勇氣</h1><p><img src=\"/images/books/被討厭的勇氣.jpg\" alt=\"被討厭的勇氣\"></p>\n<p>作者：岸見一郎、古賀史健<br>譯者：葉小燕<br>出版社：究竟出版</p>\n<h3 id=\"被討厭的勇氣-1-上篇\"><a href=\"#被討厭的勇氣-1-上篇\" class=\"headerlink\" title=\"被討厭的勇氣 1 (上篇)\"></a><a href=\"http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-1/\">被討厭的勇氣 1 (上篇)</a></h3><p>接續著上半篇的心得，後半部的阿德勒開始討論自我定位的問題，當我們完全脫離別人的看法之後，我們自己該如何定位自己？更該如何跟別人相處，如何繼續地用自己的方式，在社會的洪流中生活下去。</p>","more":"<h1 id=\"個體心理學與整體論\"><a href=\"#個體心理學與整體論\" class=\"headerlink\" title=\"個體心理學與整體論\"></a>個體心理學與整體論</h1><blockquote>\n<p>無法再分割的最小單位。<br>精神與肉體無法分割、<br>理性與情感無法分割、<br>意識與無意識無法分割</p>\n</blockquote>\n<p>這邊指的無法分割是指我們在表達情緒時，整體是不可分割的，當我們在發脾氣時、在爭論時，理性與情感是無法分割的，也就是無論我們多麽理性，我們仍然是透過整個整體在與人溝通，無論如何都是兼具了理性與感性。</p>\n<h1 id=\"人際關係的終極目標在於-“社會意識”\"><a href=\"#人際關係的終極目標在於-“社會意識”\" class=\"headerlink\" title=\"人際關係的終極目標在於 “社會意識”\"></a>人際關係的終極目標在於 “社會意識”</h1><blockquote>\n<p>把別人當成夥伴，並感覺到有自己的歸屬，稱為社會意識。</p>\n</blockquote>\n<p>共同體，共同體的目標也是整個社會。</p>\n<blockquote>\n<p>把對自我的執著轉變成為對他人的關心。</p>\n</blockquote>\n<h1 id=\"你不是世界的中心\"><a href=\"#你不是世界的中心\" class=\"headerlink\" title=\"你不是世界的中心\"></a>你不是世界的中心</h1><blockquote>\n<p>為什麼只關心我?<br>做不到 “課題分離”，被認同需求束搏的人，也是極度以自我為中心的。</p>\n</blockquote>\n<p>阿德勒的觀點為：希望自己取得社會的認同，這個觀點也只是從自己出發而已。只在乎別人是如何看我的這種生活方式，就是所謂的自我中心，只關心”我”的生活型態。</p>\n<blockquote>\n<p>別人並不是為了滿足你的期望而活，你只是共同體的一部份，不是中心。</p>\n</blockquote>\n<p>重新去思考自己能帶來的價值，能為大家貢獻什麼，而不是單純的思考自己能從大家那邊得到什麼。而為大家帶來什麼貢獻，這點是出自於善意，並不是為了獲得大家的讚賞，而是實質的非強迫性幫助。</p>\n<blockquote>\n<p>歸屬感避不是與生俱來的，而是要靠自己的雙手去獲得。</p>\n</blockquote>\n<p>人際關係 –&gt; 課題分離 –&gt; 社會意識</p>\n<p>社會意識的觀點在於共同體，不斷拉高自己的高度，透過巨觀的思維來看整件事情。不要把事情看得很單一，例如：誰誰誰不愛我了，我的人生…。要拉高看事情的維度與角度，瞭解到這些事情是本來就有可能發生的，並不是針對自己，遭遇變故後這整個世界也仍然在運轉，並沒有因此而停止。</p>\n<blockquote>\n<p>在害怕關係崩壞的恐懼下過日子，其實只是為別人而活，是不自由的生活方式。</p>\n</blockquote>\n<h1 id=\"不責罵，也不稱讚\"><a href=\"#不責罵，也不稱讚\" class=\"headerlink\" title=\"不責罵，也不稱讚\"></a>不責罵，也不稱讚</h1><blockquote>\n<p>背後的目的都是操控。</p>\n</blockquote>\n<p>如果透過單一手段的話，很容易二元化整個世界的事情，並開始追究是非對錯，達成事情只是為了避免責罵，或獲得獎賞，當我們抽掉賞罰時，會感覺到是事情是沒有意義。這個心態並不樂見。</p>\n<blockquote>\n<p>阿德勒心理學否定縱向關係，支持一切的橫向關係。</p>\n</blockquote>\n<p>縱向關係就是導致介入他人的課題的直接原因。因為覺得自己會處理得比對方更好。縱向關係會在自己的對外的各個感情中傳染，當你用縱向關係的心態去瞧不起某人時，另外一方面就投射出縱向關西的崇拜或是尊重另一個人，反之亦然。當我們用縱向關係在看但人際關係時，就會出現階級的情況，這會讓人際關係陷入利益的狀態，例如跟XXX約遲到一下沒關係，但是跟OOO約絕對不能遲到。而這種縱向關係最終會反映在重要的事情決策上，或是面對對方的態度。</p>\n<blockquote>\n<p>只要你與任何一個人建立了縱向關係，不知不覺間<br>你所有的人際關係都會採用縱向的方式。</p>\n</blockquote>\n<h1 id=\"關於稱讚\"><a href=\"#關於稱讚\" class=\"headerlink\" title=\"關於稱讚\"></a>關於稱讚</h1><blockquote>\n<p>稱讚是一種有能力者給無能力者的評價。</p>\n</blockquote>\n<p>責備容易導致迴避的處事行為，不斷地稱讚會導致被稱讚的人缺乏信心，稱讚也常常讓人誤解是為了稱讚而稱讚的。這邊的情緒處理相當的複雜，真誠與誠實是相當難掌握的，說者無心聽者有意，純粹的鼓勵往往令人起疑。</p>\n<blockquote>\n<p>人只有在自己有價值的時候，才會有勇氣。</p>\n</blockquote>\n<p>感謝，或是橫向的稱讚，都屬於比較好的方式。讓人感覺到對整件事情有幫助，感覺到自己有價值。因此肯定他人的作為，是一個更扎實的稱讚方式。(在兼具情與理的表達方式一書中有類似的說法)。</p>\n<blockquote>\n<p>當一個人覺得我對共同體來說是有益的時候，就能感受到自己的價值。</p>\n</blockquote>\n<p>這邊就詮釋了自卑感議題，為了追隨別人的觀感，在自己的心中映射出理想的自己，現在的自己與理想中的自己有差距，進而產生了自卑感，這個自卑感也有可能用自傲、炫耀來包裝。自卑感有可能產生動力，也有可能找藉口來詮釋這個自卑感，這時就成了人生的謊言，用來迴避自己無法解決的課題。獲得感謝不是從別人那裡獲得好的評價，而是自己主觀的認識我對別人有貢獻，間接地解決了自卑感的問題，接著有可能可以逐漸解開人生的課題，這屬於一種橫向的幫助，比縱向的幫助、直接性的稱讚來的有效果。</p>\n<h1 id=\"只要存在，就有價值\"><a href=\"#只要存在，就有價值\" class=\"headerlink\" title=\"只要存在，就有價值\"></a>只要存在，就有價值</h1><blockquote>\n<p>我們不以行為的層級，而是已存在的層級來看待別人。</p>\n<p>社會意識，必須以人開始去做。就算其他人不配合，也和你沒關係。<br>應該由你開始，完全不必考慮其他人是否提供協助。</p>\n</blockquote>\n<p>這大概是整本書最接近我自己核心思想的一句話。但難免受傷、難免難受。有本書 “把這份愛傳下去”， 核心邏輯就是這個，總要有人開始，而不計代價。這樣就能像湖中的漣漪，傳遍整個水面。由自己開市就是最好的方式。</p>\n<h1 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h1><p>交友的課題，不只單單是交朋友，包括與朋友相處上的關係，職場上的人際手腕等等，與整個社為的人相處的關係，這遠比想像中來得複雜，這包括了人與人之間的對等溝通，並且透過自己讓社會變得更好。幫助的不只是整個社會，同時也是在幫助自己，與社會地位比自己低的人建立橫向關係，同事就是在幫助自己與長輩建立橫向溝通的方式，也消除了自己的自卑感。</p>\n<hr>\n<h1 id=\"認真地活在當下\"><a href=\"#認真地活在當下\" class=\"headerlink\" title=\"認真地活在當下\"></a>認真地活在當下</h1><h3 id=\"過多的自我意識，反而牽制自我\"><a href=\"#過多的自我意識，反而牽制自我\" class=\"headerlink\" title=\"過多的自我意識，反而牽制自我\"></a>過多的自我意識，反而牽制自我</h3><blockquote>\n<p>不是肯的自我，而是接納自我</p>\n</blockquote>\n<ul>\n<li>接納自我</li>\n<li>信任他人</li>\n<li>貢獻他人</li>\n</ul>\n<h5 id=\"接納自我\"><a href=\"#接納自我\" class=\"headerlink\" title=\"接納自我\"></a>接納自我</h5><p>接納自我跟肯定自我是不同的，自我肯定是肯定成功，說服自己能辦到，接納自我是接受那個失敗的自己，當失敗時無力挽回。並在接納之後，繼續的盡最大的努力前進。</p>\n<blockquote>\n<p>積極正面的斷念</p>\n</blockquote>\n<p>這就是整個阿德勒心理學最重要的核心價值之一，積極正面，明確的了解自己該做什麼，並且壁面自己陷入過往的泥沼中。不過份的肯定自己，正面的為自己努力，同時嘗試去幫助他人，一切是為了讓自己更好，讓自己對攝位多少有點貢獻。</p>\n<blockquote>\n<p>主啊<br>求你四我平靜的心，去接納無法改變的事情;<br>賜給我勇氣，去改變可以改變的東西;<br>並賜給我智慧，去分辨這兩者的差異。<br>— 尼布爾&lt;寧靜的祈禱文&gt;</p>\n</blockquote>\n<p>我們並非能力不足，只是缺乏勇氣而已。</p>\n<h3 id=\"信用和信任有什麼不同\"><a href=\"#信用和信任有什麼不同\" class=\"headerlink\" title=\"信用和信任有什麼不同\"></a>信用和信任有什麼不同</h3><blockquote>\n<p>相信別人的時候不附加任何條件，再怎麼樣無條件信任他人，最後不過是遭受背叛而已。</p>\n</blockquote>\n<p>重點並不是無條件的幫助別人，應該是在能力範圍內，而在幫助別人時，就只是幫助而已。不要在對方請求幫助時馬上產生懷疑，人跟人互相猜忌，會變得更複雜，觀念與 “把這份愛傳下去” 雷同，只要關心自己怎麼做就好，關心自己能不能幫助人，而不是反覆思考是否受到詐騙。</p>\n<blockquote>\n<p>只要你害怕信任，終將無法與人建立深厚的關係。</p>\n</blockquote>\n<p>這邊的論點在現實社會中比較難令人接受。這篇像大同世界的思考，屬於一種改變世界的手段，如果從現在起每個人都真誠以待，那這個世界就會變得更單純、更歡樂。</p>\n<h3 id=\"工作的本質在於對他人貢獻\"><a href=\"#工作的本質在於對他人貢獻\" class=\"headerlink\" title=\"工作的本質在於對他人貢獻\"></a>工作的本質在於對他人貢獻</h3><blockquote>\n<p>所謂的貢獻他人並不是捨棄自我去為某人鞠躬盡瘁，而是為了實際感受自我的價值</p>\n</blockquote>\n<p>在整體社會共同體中，社會意識是讓自己有安全感的來源。可以說是一種存在感、自我價值感。阿德勒心理中認為，改變自我需要呼費過去 50% 的歲數時間<br>也就是 20 歲的人需要花 10 年改變，同理，越年輕的人開始嘗試是理解，就能越早改變。</p>\n<h3 id=\"工作狂是人生的謊言\"><a href=\"#工作狂是人生的謊言\" class=\"headerlink\" title=\"工作狂是人生的謊言\"></a>工作狂是人生的謊言</h3><blockquote>\n<p>無論在哪種情況下，發動攻擊的那個人是有問題的，絕不是大家都錯了。</p>\n</blockquote>\n<p>這邊同事要思考，自我價值、情緒是種工具以及社會意識。人與人之間相處的方式。</p>\n<blockquote>\n<p>別把焦點放在無關緊要的小部分，甚至打算用狹隘的觀點來評論全世界。</p>\n</blockquote>\n<p>這種事情的極端狀況就是憂鬱症、躁鬱症等行為。但也有可能是比較讓然感覺正面的事情：工作狂。</p>\n<blockquote>\n<p>以工作為藉口迴避其他責任。</p>\n</blockquote>\n<p>以工作為藉口迴避其他人生的課題。交友的課題、愛的課題。這種就屬於先前提到的：行為層級。以自身的行為定義自己，並不是真正的存在的層級，不夠透徹了解自身的價值。</p>\n<h3 id=\"由這一瞬間開始變得幸福\"><a href=\"#由這一瞬間開始變得幸福\" class=\"headerlink\" title=\"由這一瞬間開始變得幸福\"></a>由這一瞬間開始變得幸福</h3><p>阿德勒認為：幸福來自己認定自身的價值。自己所做的貢獻，可能可見或是不可見。</p>\n<blockquote>\n<p>所謂的幸福，就是貢獻感。</p>\n</blockquote>\n<p>這就屬於社會意識的範疇，了解自己的存在、自己的貢獻後就不需要別人的人同來定義自己的供獻。不屬於追求別人的認同感時，就能放下那個來自人際關係的包袱<br>不必成為別人或是某個自己期待受到肯定的人，而是自己就是自己，自我認同，就不會以行為的層級，而是真正存在的層級參與社會的共同體。</p>\n<h3 id=\"想成為特別存在的人有兩條路\"><a href=\"#想成為特別存在的人有兩條路\" class=\"headerlink\" title=\"想成為特別存在的人有兩條路\"></a>想成為特別存在的人有兩條路</h3><blockquote>\n<p>為了得到別人的關注，脫離普通的狀態，成為特別的存在</p>\n</blockquote>\n<p>有可能特別好，也有可能特別壞。當我們透過不太正當的手段追求受到關注，例如小孩子的打鬧，或是其他蓄意引人注目的問題，屬於簡便的追求卓越，追求的是自己受到關注的感覺，某種層面上，這也屬於一種自私的行為，單純為了滿足自己而已。</p>\n<h3 id=\"甘於平凡的勇氣\"><a href=\"#甘於平凡的勇氣\" class=\"headerlink\" title=\"甘於平凡的勇氣\"></a>甘於平凡的勇氣</h3><blockquote>\n<p>我們沒有必要刻意誇耀自己的優越性</p>\n</blockquote>\n<h3 id=\"人生是一連串的剎那\"><a href=\"#人生是一連串的剎那\" class=\"headerlink\" title=\"人生是一連串的剎那\"></a>人生是一連串的剎那</h3><p>活在當下。追求的是此刻的心態，回頭時候看到許多光彩，這邊的觀念偏向說，並不是所有的事情都要完美個站照規劃達成，才能擁有好結果。如果你去爬山，計畫爬到山頂，可是爬了一半就下來，仍然是去爬山，並不是一切都要按照計畫的完美執行。而是當下最努力的我們，才適當我們在回憶時最甘甜的剎那。</p>\n<blockquote>\n<p>過去發生什麼事情，和當下沒有關係，而未來會如何，也不是當下要考慮的問題。<br>不要用直線去衡量自己已經走到了哪裡，要看看每個剎那是如何度過的。</p>\n</blockquote>\n<p>從更現實的角度來看，如果我現在即刻身亡，我會後悔什麼，我最在意的是什麼，這就是這個剎那。這相當的難實踐。</p>\n<blockquote>\n<p>只要貢獻他人這顆引導之星還在，就不會徬徨，做什麼都可以。</p>\n</blockquote>\n<p>將自己導向正確的路途上</p>\n<blockquote>\n<p>必須有人開始去做。就算其他人不配合，也和你沒關係。這就是我的建議。<br>應該由你開始，完全不必考慮其他人是否提供協助</p>\n</blockquote>\n<p>現在，就是現在，當我們想通的這一瞬間。</p>"},{"title":"被討厭的勇氣 1 (上篇)","date":"2017-01-31T02:20:15.000Z","thumbnail":"/images/books/被討厭的勇氣.jpg","_content":"\n# 被討厭的勇氣\n\n![被討厭的勇氣](/images/books/被討厭的勇氣.jpg)\n\n作者：岸見一郎、古賀史健\n譯者：葉小燕\n出版社：究竟出版\n\n### [被討厭的勇氣 1 (下篇)](http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-2/)\n\n# 簡介\n\n2015年最火紅的書莫過於就是<被討厭的勇氣>，有別於一般心理學書籍，作者從個人心理的觀點來探討個人跟整個社會的互動，把焦點放在自己身上，了解自己、改變自己，不再是去瞭解他人或是嘗試透視對方的想法。思考自己在做什麼，讓自己的外在表態或是內在的心靈強化是書中相當明顯的觀點，而當我們自己變得更好時，或許也能帶動身邊的人跟著改變。\n\n<!--more-->\n\n# 否定心理創傷\n\n*****\n\n### 心理創傷並不存在\n\n阿德勒心理學明確的否定心理創傷。\n\n> 不要由經驗來決定自我，而是由經驗賦予的意義來決定。\n\n我們每個人都為了某個目的而活著。\n\n> 應該追究的，不是過去的原因，是現在的目的。\n\n* 決定論\n* 目的論\n\n##### 決定論\n\n因果關係，就是典型的決定論。因為什麼原因，造成現在這樣。雖然看似邏輯正確，但心中其實是將事情的結果推向過去的自己，否定現在的是幾，從某個方面來說我們往往忽略了人能掌控自己的情緒，面對失敗，了解原因及可，不要將責任推給過去。\n\n##### 目地論\n\n目的論的觀點認為，人的每個行為、情緒變化等等，都是有目的性的，我們透過表達自己的情緒，來得到自己想要的成果。與決定論完全相反的是，決定論認為：\"我因為XXX事情，所以我現在生氣了\"，但在目的論認為：\"你現在生氣，是為了達成ＯＯＯ目標\"。舉例來說，決定的論點是：\"因為你掃地沒掃乾淨所以我生氣\"，認為\"我生氣是別人造成的\"。目的論則認為：當下在生氣時，其實是透過情緒表達，希望對方折服自己並認真打掃，情緒變成了一種手段，而非被動的產物。(透過這個論點可以反思，我們是能控制自己的情緒的，能收放自己的情緒。)\n\n*****\n\n### 人，會捏造憤怒的情緒\n\n即是目的論的核心論點。藉由捏造的憤怒的情緒，來達成某種目度。這種情緒並不是所謂的 \"無法控制\" 或是 \"衝動\"。如果人們能夠不遷怒，那就代表憤怒是可以收放自如的 \"工具\" 。我們藉由憤怒的情緒來讓自己的行為合理化，是一種使人屈服於自己的手段。\n\n*****\n\n### 不受過去支配的生活方式\n\n> 不論是從 \"人不受過去控制\" 或 \"人不受情緒控制\" 的層面來說，阿德勒心理學都是與虛無主義者對立的思想，是哲學。\n\n問題不在於過去發生了什麼事情，而是我們怎麼去解釋它。例如說成功的喜悅可能沖昏頭，失敗可能激起更多的浪花。\n每個人的生命中都會發生各種產生正面利益或是負面利益的事情，重點在於我們怎麼去詮釋狀況，從發生的狀況中我們得到或是學習到什麼。\n\n> 人並非受過去的原因而行動，\n> 而是朝向自己決定好的目的而行動。\n\n### 改變\n\n> 改變的第一步是要先知道。\n> 答案，不應該是由誰告訴你，而是你自己親手去找才對。\n\n改變、成長都需要靠自己，一切的起頭也需要自己來。過程中的經歷才能淬煉成結果。不斷地灌輸觀念，不如人自己反思、自我思考。\n\n### 幸與不幸，是自己選的\n\n> 沒有人單純只是為了做壞事而做壞事，所有犯罪的人都有讓他犯罪的內在 \"正當理由\"。例如，因為金錢糾紛而殺人，對當事人來說，他因為自以為的 \"正當理由\" 而採取行動。換句話說，是在執行 \"自以為好\" 的 \"善\" 事。當然，這裡所說的 \"善\" 並不是指道德上的良善，而是 \"為自己的\" 善。希臘語中的 \"善\" 跟道德沒有關係，純粹是 \"有用\" 的意思;另一方面 \"惡\" 是指 \"沒有用處\"。\n\n我們往往選擇對自己有利的狀況，可能自覺、可能不自覺，這種有利的狀況多半屬於短期有利，當下自己覺得舒服或方便而已，有可能是安於現狀，亦可能只是面子掛不住。所謂的 \"目的論\" 就是指人們只是為了達成某種目的，而做出的情緒反應而已，並透過其他的原因來詮釋現在的自己。但多半的時候人們透過 \"決定論\" 來解釋自己也是情非得已，並沒有了解到自己內心中正正的目的性。\n\n### 人，常常決定不要改變\n\n#### 生活型態 life style\n\n是人的性格或是氣質。並非直接指物質的生活狀況。\n\n> 如果生活性態不是天生的，而是自己選的，那就有重新選擇的可能性。\n\n人們往往不願意改變，儘管自己已經知道有地方需要改變，儘管知道已經造成別人的抱怨，但往往我們覺得 \"安於現狀\" 是輕鬆的，不確定的未來，人們總是不願意去冒險。\n\n> 缺乏便幸福的勇氣。\n\n#### 人生決定於當下\n\n一種捨棄現有的生活型態的決心。就像在第一次做壞事一樣，變好一樣也需要有改變的勇氣，第一次運動時會覺得想放棄，同樣的，第一次偷東西的人，也會猶豫或是考慮要不要收手。\n\n> 無論之前你的人生發生過怎麼樣的事，那對於你將來要怎麼過日子一點影響都沒有。\n\n人生過去的影響，實際真正的影響在於精神層面，而精神層面應該是能理性控制的。\n\n## 小結\n\n貫徹了之前我自己聽過的一句話：\n\n> 感性的事情要用理性解，理性的事情要用感性解。\n\n人生中有很多機會可以選擇，對於過去，重點是是從過去學習到什麼，或是從過往的經驗了解什麼。而不是一味的埋怨過去對自已造成傷害，因為過去的種種如果，所現在如何。人的所有的情緒、反應都是有目的性的。表達難過可能是為了得到安慰，憤怒是為了使人屈服、表達自己的強悍，情緒是能收放的。當然，人必定會有情緒，接受內在的情緒之後，不一定要對外表態出來，我真正需要學習的，是處理自己內心的情緒即可。\n\n而生活的現狀，取決於自己的思考，換而言之，現在的生活狀況是自己決定的，就如：\"如果我有空的話..我就...\"事實上是在為自己找藉口，為自己尋找 \"結果論\" 的原因，安慰自己。做出改變是痛苦的，是需要時間的。離開自己的舒適圈，朝夢想前進，而不是為自己找更多的理由。\n\n> 尋找解法，而不是責怪原因。\n\n\n# 所有的煩惱都來自人際關係\n\n*****\n\n### 為什麼討厭自己\n\n> 因為過分害被別人討厭、在人際關係中受傷所致。\n> 目的變成了不要在人際關係中受傷害。\n\n在人際關係中相當容易受到傷害，我們會遇到適合自己的人、排斥自己的人。為了避免受到傷害，我們為自己套上：孤僻、沈默等等性格，為自己的行爲找出合理的詮釋。合理的詮釋是為了讓自己的避免傷害，例如我會覺得：如果我每天念英文，我的人生就是彩色的了。其實心中是在迴避唸英文這個問題，我怕自己每天念也念不來，怕自己就算真的唸了，人生也並沒有改變。\n\n> 阿德勒：要除去所有煩惱，唯有獨自一人存活在宇宙中。\n\n簡單說，有人就會有問題拉。\n\n### 所有的煩惱都是人際關係的煩惱\n\n> 我們就算要覺得孤獨，也需要其他人的存在。\n> 所謂的 \"內在的煩惱\" 並不存在。\n\n### 自卑感，是一種主觀的設定\n\n> 自卑感 = 價值 + 較少 + 感覺。這些折磨我們的自卑感並不是 \"客觀的事實\"，而是 \"主觀的解釋\"\n\n人與人之間存在比較，而我們從什麼角度跟別人比較，進而的產生 \"自己不如人\" 的感覺。事情有各個角度可以看，接受失敗、接受自己的缺點，而不是持續地以自己的缺點出發，認為自己的不完美，認為別人的條件比較好。因為這些主觀的觀點產生的自卑感，實為 \"主觀的自卑感\"，而非 \"客觀的事實\"，這種感覺通常是由自己判定自己的失敗，或是由別人投射在我們心中。總之，這個感覺仍然是人的感情建立，並非實際需要比較的東西。\n\n### 當成藉口的自卑情結\n\n> 當理想無法達成時，就會產生一種低劣無能的感覺。\n> 自卑情結，是指把自卑感當成某種藉口使用的狀態。\n\n自卑情結即是為自己找藉口，為自己找的一個相對舒適的圈圈。因為自己無法達成，所以也就算了。同時解開了自己愧疚的心結，也解釋了自己為什麼不更努力的去完成目標。自卑感不見得是壞事，人們可以透過自卑感產生動力，覺得自己不好，需要更加努力達成。但自卑情結是為自己找到看似合理的出口，放棄改變來避免失敗。\n\n### 自傲的人同時也感到自卑\n\n> 藉由權威的力量來膨脹自我的人，終究還是活在別人的價值觀裡，過著別人的人生。如果有人自吹自擂，不過是因為他感到自卑罷了。\n\n真的正的強者，不會急於表現自己有多好，急於證明自己比別人好。因為他們對自己有足夠的自信，知道自己的優點。這也是為什麼在爭論的場合中弱勢的人，自尊心往往較強，甚至透過擺爛的行為，來贏得一個自己無法贏得的爭吵，把 \"自己\" 看得相當的重要。\n\n##### 炫耀不幸\n\n> 藉由自己的不幸，變得特別; 憑藉不幸，想要高人一等。\n> 把自己的不幸當成武器，想要支配對方。\n\n人們也會利用自己的缺點、悲情的過往來提搞自己的身份地位。透過說明自己撐過了某種艱困的過去，來表示自己撐過去了。或是透過 \"你們沒經歷過，永遠無法體會\" 的論點，來顯示自己的成長過程與眾不同。謙虛大概才是一個有自信的人會擁有的。\n\n##### 題外話，營造更好交談的10條建議\n\n這邊讓我想到一個 TED 的演講：營造更好交談的10條建議。\n\n其中提到，當人們在陳述自己的遭遇時，是在尋求慰藉或是某種認同，而當我們接受到這樣的訊號時，建議不要用自己的經驗或是經驗法則套用在別人身上，沒有任何一段經驗是相同的，那段悲傷的情緒屬於對方的，而自己的狀況是相對的較難獲得認同。而與他人溝通或是聆聽對方的遭遇時，是一個建立雙方感情鏈結的好機會，我們需要做的只有嘗試去體會對方的感受，並當個好的傾聽者。\n\n##### 中譯影片：\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nBbxsXqcF6E\" frameborder=\"0\" allowfullscreen></iframe>\n\n### 人生並不是與他人競賽\n\n> 追求卓越，不需要跟任何人競爭，只需要跨步向前就行了。健全的自卑感並不是跟別人比較產生的，而是跟 \"理想中的自己\" 比較後的結果。\n\n人跟人之間應該是完全平等的，沒有人絕對得比誰優秀，儘管我們之間慛載著差異。而我們會把看到感覺優秀的人的影子，投射到自己身上，產生一個如果自己是那樣的想法。間接的，我們產了現在的自己不如自己像象中好的樣子，產生了自卑感。\n\n> 將別人的幸福認定成自己的挫敗。\n\n要把大家當成夥伴，而不是都當成敵人。當我們把周遭的人都當成敵人，免不了跟別人比較。應該把大家當成夥伴，大家共同成長，那比較就會更少，也不會間接產生自卑感。\n\n### 由權力鬥爭到復仇\n\n> 想藉由勝利來證明自己的權利。\n> 當對方挑起權力鬥爭時，絕不要隨之起舞。\n\n我們不需要透過鬥爭來解決問題，更不需要透過鬥爭來證明自己的能力。正確地解決問題，不要挑起無意義的爭端。\n\n### 認錯不等於承認失敗\n\n> 不是忍耐，忍耐代表你已經捲入了這場鬥爭。\n\n當對方發起爭執時，代表這整件事情處理的過程有瑕疵。沒有必要證明自己是對的或是對方是錯的，解決問題最重要的。這回歸到第一章節所述的 \"憤怒是種工具\" 不要濫用憤怒的情緒來解決問題。\n\n\n### 如何面對人生的任務\n\n> 行動面的目標有 \"獨立\" 和 \"能與社會和諧生活\" 兩項。而支援這項行動的心裡面目標則是 \"我是有能力的\"，以及 \"人人都是我的夥伴\"\n\n* 工作的任務\n* 交友的任務\n* 愛的任務\n\n##### 工作的任務\n\n工作的任務其實仍然與人際關係有關，如果我們在工作上疏失，會導致自己不想去上班，不願意面對工作。真正的原因並不是工作本身，而是我們在工作上會遭受的責難，被評價為能力不足等等的問題。因此，工作的任務其實仍然屬於人際關係的範疇。\n\n##### 交友的任務\n\n這屬於人生的中相當重要的一個課題。交友的任務即是普遍認知的人際關係，而這方面的難度會高於工作的任務。因為人跟人之間並沒有強制性的關聯，沒有 \"一定要在一起\" 的需求。朋友的重點不在多，而在於摯友，久久見面一次的朋友仍然可是摯友。\n\n##### 愛的任務\n\n> 只要和這個人在一起，就可以自由盡情的展現自我\n\n愛的過程中，最重的是面對問題，並嘗試解決，並不要安逸於現狀。\n\n\n### 不要漠視人生的謊言\n\n> 找出各種藉口來逃避人生任務的情形，就稱為人生的謊言\n\n### 從擁有的心理學到使用的心理學\n\n* 佛洛伊德-因果論\n\n擁有的心理學，最後注定要走入決定論。\n\n* 阿德勒-目的論\n\n使用的心理學，決定權在於你自己。\n\n### 小結\n\n人之間最大的心魔就是互相比較，透過比較得到優越感，或是自卑感。人生的課題主要為三大方向：工作、交友、愛情，在嘗試解決這三方面的問題時\n應該對自己更有自信，不是不斷的拿自己的條件跟人比較。而比較時又常常使用固守的觀點認為自己不夠好，在失敗的時候，我們嘗試找出原因，卻只找出藉口，\n藉由藉口來解釋自己的失敗，解釋自己為什麼無法成功，其實成功與否一直都操之在我們自己，遮蔽這一切的，即是人生的謊言。\n\n滿滿的正能量啊。\n\n# 割捨別人的課題\n\n### 不要為了滿足別人的期望而活\n\n> 如果你不為自己而活，那誰要為你的人生而活?\n\n賞罰教育帶來的瑕疵點：絕對的是非對錯，將這個世界上的事情一分為二。理想的狀況事情是：我們會只做對的事情，並不會做錯誤的事情。\n但這種教育造成的情況是，我們會選擇做會受到讚賞的事情，選擇做光彩的事情。而人們排斥做沒人注意到的事情。換而言之我們陷入的為他人而活的迴圈，有別人的目光的事情才有意義。...所有的問題仍然來自於人際關係。\n\n### 課題分離\n\n> 不涉入別人的課題。所有人際關係中的紛爭，差不多都是因為一個腳踩進人家的課題裡，或自己的課題遭到干涉所引起的。\n\n仔細思考，因為這個決定而帶來的結果，最後會由誰來承受？\n\n> 只有自己可以改變自己。\n> 我們能把馬牽到水邊，卻不能強迫她喝水。\n\n### 割捨別人的課題\n\n> 越是關係親近的家人，越需要刻意機課題切割開來。\n\n割捨別人的課題這個想法是雙面的，如果我們不要為了滿足別人的期望而活。那我們也不應該期望別人會為了我們而做什麼，這個觀點相當的清晰，每個人跟人之間是個體，我們能互相關心，能相愛，但不是互相控制對方，互相牽制對方。每個人有每個人自己的人生，有屬於它的成功，也有屬於自己的失敗，失敗也是屬於自己的體驗。\n\n> 不要介入別人的課題，也不要讓別人介入你的。\n\n尤其是家人，更因為晦長時間的相處而互相跨入對方的私領域。\n\n### 斬斷難題\n\n> 所謂的命運，並非依靠傳說來安排，而是揮舞自己的劍去展開。 --- 亞歷山大\n\n與常識對立的反命題。\n\n> 如果你無法不在意他人的評價、無法不害怕被別人討厭。也不想付出可能得不到認同的代價。那就無法貫徹自己的生活方次。\n\n### 小結\n\n順著書本的邏輯思考到這邊的話，邏輯是說得通的。我很難表達自己現在覺得這整件事情的想法，也與我自己過去的經驗有所牴觸。但不可否認的，我們不可能做到人見人愛，就連賈伯斯都被指責是個暴君、差勁、難相處的人。自己快樂和讓人快樂，相當難同時兼具，如果我們要完全百分之百應和他人，那就會失去自由的自己。\n\n不過不要忘記一具相當重要的話：\n\n> 說話讓人舒服的程度，決定你的高度。\n\n這仍然是管理學中翁相當重要的一環。做人、做自己、跟管理，需要認真地分開思考。抓取中間的平衡點是相當重要的，過度的偏激自我或是他人，都是不健康的心理狀態。\n","source":"_posts/20170131_BOOKS_被討厭的勇氣1-1.md","raw":"title: 被討厭的勇氣 1 (上篇)\ndate: 2017-01-31 10:20:15\ncategories: 好書筆記\nthumbnail: /images/books/被討厭的勇氣.jpg\ntags:\n- 讀書心得\n- 心理學\n- 自我成長\n- 重點筆記\n---\n\n# 被討厭的勇氣\n\n![被討厭的勇氣](/images/books/被討厭的勇氣.jpg)\n\n作者：岸見一郎、古賀史健\n譯者：葉小燕\n出版社：究竟出版\n\n### [被討厭的勇氣 1 (下篇)](http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-2/)\n\n# 簡介\n\n2015年最火紅的書莫過於就是<被討厭的勇氣>，有別於一般心理學書籍，作者從個人心理的觀點來探討個人跟整個社會的互動，把焦點放在自己身上，了解自己、改變自己，不再是去瞭解他人或是嘗試透視對方的想法。思考自己在做什麼，讓自己的外在表態或是內在的心靈強化是書中相當明顯的觀點，而當我們自己變得更好時，或許也能帶動身邊的人跟著改變。\n\n<!--more-->\n\n# 否定心理創傷\n\n*****\n\n### 心理創傷並不存在\n\n阿德勒心理學明確的否定心理創傷。\n\n> 不要由經驗來決定自我，而是由經驗賦予的意義來決定。\n\n我們每個人都為了某個目的而活著。\n\n> 應該追究的，不是過去的原因，是現在的目的。\n\n* 決定論\n* 目的論\n\n##### 決定論\n\n因果關係，就是典型的決定論。因為什麼原因，造成現在這樣。雖然看似邏輯正確，但心中其實是將事情的結果推向過去的自己，否定現在的是幾，從某個方面來說我們往往忽略了人能掌控自己的情緒，面對失敗，了解原因及可，不要將責任推給過去。\n\n##### 目地論\n\n目的論的觀點認為，人的每個行為、情緒變化等等，都是有目的性的，我們透過表達自己的情緒，來得到自己想要的成果。與決定論完全相反的是，決定論認為：\"我因為XXX事情，所以我現在生氣了\"，但在目的論認為：\"你現在生氣，是為了達成ＯＯＯ目標\"。舉例來說，決定的論點是：\"因為你掃地沒掃乾淨所以我生氣\"，認為\"我生氣是別人造成的\"。目的論則認為：當下在生氣時，其實是透過情緒表達，希望對方折服自己並認真打掃，情緒變成了一種手段，而非被動的產物。(透過這個論點可以反思，我們是能控制自己的情緒的，能收放自己的情緒。)\n\n*****\n\n### 人，會捏造憤怒的情緒\n\n即是目的論的核心論點。藉由捏造的憤怒的情緒，來達成某種目度。這種情緒並不是所謂的 \"無法控制\" 或是 \"衝動\"。如果人們能夠不遷怒，那就代表憤怒是可以收放自如的 \"工具\" 。我們藉由憤怒的情緒來讓自己的行為合理化，是一種使人屈服於自己的手段。\n\n*****\n\n### 不受過去支配的生活方式\n\n> 不論是從 \"人不受過去控制\" 或 \"人不受情緒控制\" 的層面來說，阿德勒心理學都是與虛無主義者對立的思想，是哲學。\n\n問題不在於過去發生了什麼事情，而是我們怎麼去解釋它。例如說成功的喜悅可能沖昏頭，失敗可能激起更多的浪花。\n每個人的生命中都會發生各種產生正面利益或是負面利益的事情，重點在於我們怎麼去詮釋狀況，從發生的狀況中我們得到或是學習到什麼。\n\n> 人並非受過去的原因而行動，\n> 而是朝向自己決定好的目的而行動。\n\n### 改變\n\n> 改變的第一步是要先知道。\n> 答案，不應該是由誰告訴你，而是你自己親手去找才對。\n\n改變、成長都需要靠自己，一切的起頭也需要自己來。過程中的經歷才能淬煉成結果。不斷地灌輸觀念，不如人自己反思、自我思考。\n\n### 幸與不幸，是自己選的\n\n> 沒有人單純只是為了做壞事而做壞事，所有犯罪的人都有讓他犯罪的內在 \"正當理由\"。例如，因為金錢糾紛而殺人，對當事人來說，他因為自以為的 \"正當理由\" 而採取行動。換句話說，是在執行 \"自以為好\" 的 \"善\" 事。當然，這裡所說的 \"善\" 並不是指道德上的良善，而是 \"為自己的\" 善。希臘語中的 \"善\" 跟道德沒有關係，純粹是 \"有用\" 的意思;另一方面 \"惡\" 是指 \"沒有用處\"。\n\n我們往往選擇對自己有利的狀況，可能自覺、可能不自覺，這種有利的狀況多半屬於短期有利，當下自己覺得舒服或方便而已，有可能是安於現狀，亦可能只是面子掛不住。所謂的 \"目的論\" 就是指人們只是為了達成某種目的，而做出的情緒反應而已，並透過其他的原因來詮釋現在的自己。但多半的時候人們透過 \"決定論\" 來解釋自己也是情非得已，並沒有了解到自己內心中正正的目的性。\n\n### 人，常常決定不要改變\n\n#### 生活型態 life style\n\n是人的性格或是氣質。並非直接指物質的生活狀況。\n\n> 如果生活性態不是天生的，而是自己選的，那就有重新選擇的可能性。\n\n人們往往不願意改變，儘管自己已經知道有地方需要改變，儘管知道已經造成別人的抱怨，但往往我們覺得 \"安於現狀\" 是輕鬆的，不確定的未來，人們總是不願意去冒險。\n\n> 缺乏便幸福的勇氣。\n\n#### 人生決定於當下\n\n一種捨棄現有的生活型態的決心。就像在第一次做壞事一樣，變好一樣也需要有改變的勇氣，第一次運動時會覺得想放棄，同樣的，第一次偷東西的人，也會猶豫或是考慮要不要收手。\n\n> 無論之前你的人生發生過怎麼樣的事，那對於你將來要怎麼過日子一點影響都沒有。\n\n人生過去的影響，實際真正的影響在於精神層面，而精神層面應該是能理性控制的。\n\n## 小結\n\n貫徹了之前我自己聽過的一句話：\n\n> 感性的事情要用理性解，理性的事情要用感性解。\n\n人生中有很多機會可以選擇，對於過去，重點是是從過去學習到什麼，或是從過往的經驗了解什麼。而不是一味的埋怨過去對自已造成傷害，因為過去的種種如果，所現在如何。人的所有的情緒、反應都是有目的性的。表達難過可能是為了得到安慰，憤怒是為了使人屈服、表達自己的強悍，情緒是能收放的。當然，人必定會有情緒，接受內在的情緒之後，不一定要對外表態出來，我真正需要學習的，是處理自己內心的情緒即可。\n\n而生活的現狀，取決於自己的思考，換而言之，現在的生活狀況是自己決定的，就如：\"如果我有空的話..我就...\"事實上是在為自己找藉口，為自己尋找 \"結果論\" 的原因，安慰自己。做出改變是痛苦的，是需要時間的。離開自己的舒適圈，朝夢想前進，而不是為自己找更多的理由。\n\n> 尋找解法，而不是責怪原因。\n\n\n# 所有的煩惱都來自人際關係\n\n*****\n\n### 為什麼討厭自己\n\n> 因為過分害被別人討厭、在人際關係中受傷所致。\n> 目的變成了不要在人際關係中受傷害。\n\n在人際關係中相當容易受到傷害，我們會遇到適合自己的人、排斥自己的人。為了避免受到傷害，我們為自己套上：孤僻、沈默等等性格，為自己的行爲找出合理的詮釋。合理的詮釋是為了讓自己的避免傷害，例如我會覺得：如果我每天念英文，我的人生就是彩色的了。其實心中是在迴避唸英文這個問題，我怕自己每天念也念不來，怕自己就算真的唸了，人生也並沒有改變。\n\n> 阿德勒：要除去所有煩惱，唯有獨自一人存活在宇宙中。\n\n簡單說，有人就會有問題拉。\n\n### 所有的煩惱都是人際關係的煩惱\n\n> 我們就算要覺得孤獨，也需要其他人的存在。\n> 所謂的 \"內在的煩惱\" 並不存在。\n\n### 自卑感，是一種主觀的設定\n\n> 自卑感 = 價值 + 較少 + 感覺。這些折磨我們的自卑感並不是 \"客觀的事實\"，而是 \"主觀的解釋\"\n\n人與人之間存在比較，而我們從什麼角度跟別人比較，進而的產生 \"自己不如人\" 的感覺。事情有各個角度可以看，接受失敗、接受自己的缺點，而不是持續地以自己的缺點出發，認為自己的不完美，認為別人的條件比較好。因為這些主觀的觀點產生的自卑感，實為 \"主觀的自卑感\"，而非 \"客觀的事實\"，這種感覺通常是由自己判定自己的失敗，或是由別人投射在我們心中。總之，這個感覺仍然是人的感情建立，並非實際需要比較的東西。\n\n### 當成藉口的自卑情結\n\n> 當理想無法達成時，就會產生一種低劣無能的感覺。\n> 自卑情結，是指把自卑感當成某種藉口使用的狀態。\n\n自卑情結即是為自己找藉口，為自己找的一個相對舒適的圈圈。因為自己無法達成，所以也就算了。同時解開了自己愧疚的心結，也解釋了自己為什麼不更努力的去完成目標。自卑感不見得是壞事，人們可以透過自卑感產生動力，覺得自己不好，需要更加努力達成。但自卑情結是為自己找到看似合理的出口，放棄改變來避免失敗。\n\n### 自傲的人同時也感到自卑\n\n> 藉由權威的力量來膨脹自我的人，終究還是活在別人的價值觀裡，過著別人的人生。如果有人自吹自擂，不過是因為他感到自卑罷了。\n\n真的正的強者，不會急於表現自己有多好，急於證明自己比別人好。因為他們對自己有足夠的自信，知道自己的優點。這也是為什麼在爭論的場合中弱勢的人，自尊心往往較強，甚至透過擺爛的行為，來贏得一個自己無法贏得的爭吵，把 \"自己\" 看得相當的重要。\n\n##### 炫耀不幸\n\n> 藉由自己的不幸，變得特別; 憑藉不幸，想要高人一等。\n> 把自己的不幸當成武器，想要支配對方。\n\n人們也會利用自己的缺點、悲情的過往來提搞自己的身份地位。透過說明自己撐過了某種艱困的過去，來表示自己撐過去了。或是透過 \"你們沒經歷過，永遠無法體會\" 的論點，來顯示自己的成長過程與眾不同。謙虛大概才是一個有自信的人會擁有的。\n\n##### 題外話，營造更好交談的10條建議\n\n這邊讓我想到一個 TED 的演講：營造更好交談的10條建議。\n\n其中提到，當人們在陳述自己的遭遇時，是在尋求慰藉或是某種認同，而當我們接受到這樣的訊號時，建議不要用自己的經驗或是經驗法則套用在別人身上，沒有任何一段經驗是相同的，那段悲傷的情緒屬於對方的，而自己的狀況是相對的較難獲得認同。而與他人溝通或是聆聽對方的遭遇時，是一個建立雙方感情鏈結的好機會，我們需要做的只有嘗試去體會對方的感受，並當個好的傾聽者。\n\n##### 中譯影片：\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nBbxsXqcF6E\" frameborder=\"0\" allowfullscreen></iframe>\n\n### 人生並不是與他人競賽\n\n> 追求卓越，不需要跟任何人競爭，只需要跨步向前就行了。健全的自卑感並不是跟別人比較產生的，而是跟 \"理想中的自己\" 比較後的結果。\n\n人跟人之間應該是完全平等的，沒有人絕對得比誰優秀，儘管我們之間慛載著差異。而我們會把看到感覺優秀的人的影子，投射到自己身上，產生一個如果自己是那樣的想法。間接的，我們產了現在的自己不如自己像象中好的樣子，產生了自卑感。\n\n> 將別人的幸福認定成自己的挫敗。\n\n要把大家當成夥伴，而不是都當成敵人。當我們把周遭的人都當成敵人，免不了跟別人比較。應該把大家當成夥伴，大家共同成長，那比較就會更少，也不會間接產生自卑感。\n\n### 由權力鬥爭到復仇\n\n> 想藉由勝利來證明自己的權利。\n> 當對方挑起權力鬥爭時，絕不要隨之起舞。\n\n我們不需要透過鬥爭來解決問題，更不需要透過鬥爭來證明自己的能力。正確地解決問題，不要挑起無意義的爭端。\n\n### 認錯不等於承認失敗\n\n> 不是忍耐，忍耐代表你已經捲入了這場鬥爭。\n\n當對方發起爭執時，代表這整件事情處理的過程有瑕疵。沒有必要證明自己是對的或是對方是錯的，解決問題最重要的。這回歸到第一章節所述的 \"憤怒是種工具\" 不要濫用憤怒的情緒來解決問題。\n\n\n### 如何面對人生的任務\n\n> 行動面的目標有 \"獨立\" 和 \"能與社會和諧生活\" 兩項。而支援這項行動的心裡面目標則是 \"我是有能力的\"，以及 \"人人都是我的夥伴\"\n\n* 工作的任務\n* 交友的任務\n* 愛的任務\n\n##### 工作的任務\n\n工作的任務其實仍然與人際關係有關，如果我們在工作上疏失，會導致自己不想去上班，不願意面對工作。真正的原因並不是工作本身，而是我們在工作上會遭受的責難，被評價為能力不足等等的問題。因此，工作的任務其實仍然屬於人際關係的範疇。\n\n##### 交友的任務\n\n這屬於人生的中相當重要的一個課題。交友的任務即是普遍認知的人際關係，而這方面的難度會高於工作的任務。因為人跟人之間並沒有強制性的關聯，沒有 \"一定要在一起\" 的需求。朋友的重點不在多，而在於摯友，久久見面一次的朋友仍然可是摯友。\n\n##### 愛的任務\n\n> 只要和這個人在一起，就可以自由盡情的展現自我\n\n愛的過程中，最重的是面對問題，並嘗試解決，並不要安逸於現狀。\n\n\n### 不要漠視人生的謊言\n\n> 找出各種藉口來逃避人生任務的情形，就稱為人生的謊言\n\n### 從擁有的心理學到使用的心理學\n\n* 佛洛伊德-因果論\n\n擁有的心理學，最後注定要走入決定論。\n\n* 阿德勒-目的論\n\n使用的心理學，決定權在於你自己。\n\n### 小結\n\n人之間最大的心魔就是互相比較，透過比較得到優越感，或是自卑感。人生的課題主要為三大方向：工作、交友、愛情，在嘗試解決這三方面的問題時\n應該對自己更有自信，不是不斷的拿自己的條件跟人比較。而比較時又常常使用固守的觀點認為自己不夠好，在失敗的時候，我們嘗試找出原因，卻只找出藉口，\n藉由藉口來解釋自己的失敗，解釋自己為什麼無法成功，其實成功與否一直都操之在我們自己，遮蔽這一切的，即是人生的謊言。\n\n滿滿的正能量啊。\n\n# 割捨別人的課題\n\n### 不要為了滿足別人的期望而活\n\n> 如果你不為自己而活，那誰要為你的人生而活?\n\n賞罰教育帶來的瑕疵點：絕對的是非對錯，將這個世界上的事情一分為二。理想的狀況事情是：我們會只做對的事情，並不會做錯誤的事情。\n但這種教育造成的情況是，我們會選擇做會受到讚賞的事情，選擇做光彩的事情。而人們排斥做沒人注意到的事情。換而言之我們陷入的為他人而活的迴圈，有別人的目光的事情才有意義。...所有的問題仍然來自於人際關係。\n\n### 課題分離\n\n> 不涉入別人的課題。所有人際關係中的紛爭，差不多都是因為一個腳踩進人家的課題裡，或自己的課題遭到干涉所引起的。\n\n仔細思考，因為這個決定而帶來的結果，最後會由誰來承受？\n\n> 只有自己可以改變自己。\n> 我們能把馬牽到水邊，卻不能強迫她喝水。\n\n### 割捨別人的課題\n\n> 越是關係親近的家人，越需要刻意機課題切割開來。\n\n割捨別人的課題這個想法是雙面的，如果我們不要為了滿足別人的期望而活。那我們也不應該期望別人會為了我們而做什麼，這個觀點相當的清晰，每個人跟人之間是個體，我們能互相關心，能相愛，但不是互相控制對方，互相牽制對方。每個人有每個人自己的人生，有屬於它的成功，也有屬於自己的失敗，失敗也是屬於自己的體驗。\n\n> 不要介入別人的課題，也不要讓別人介入你的。\n\n尤其是家人，更因為晦長時間的相處而互相跨入對方的私領域。\n\n### 斬斷難題\n\n> 所謂的命運，並非依靠傳說來安排，而是揮舞自己的劍去展開。 --- 亞歷山大\n\n與常識對立的反命題。\n\n> 如果你無法不在意他人的評價、無法不害怕被別人討厭。也不想付出可能得不到認同的代價。那就無法貫徹自己的生活方次。\n\n### 小結\n\n順著書本的邏輯思考到這邊的話，邏輯是說得通的。我很難表達自己現在覺得這整件事情的想法，也與我自己過去的經驗有所牴觸。但不可否認的，我們不可能做到人見人愛，就連賈伯斯都被指責是個暴君、差勁、難相處的人。自己快樂和讓人快樂，相當難同時兼具，如果我們要完全百分之百應和他人，那就會失去自由的自己。\n\n不過不要忘記一具相當重要的話：\n\n> 說話讓人舒服的程度，決定你的高度。\n\n這仍然是管理學中翁相當重要的一環。做人、做自己、跟管理，需要認真地分開思考。抓取中間的平衡點是相當重要的，過度的偏激自我或是他人，都是不健康的心理狀態。\n","slug":"20170131_BOOKS_被討厭的勇氣1-1","published":1,"updated":"2017-02-05T10:49:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciysookvy000jc0u03uoj76s1","content":"<h1 id=\"被討厭的勇氣\"><a href=\"#被討厭的勇氣\" class=\"headerlink\" title=\"被討厭的勇氣\"></a>被討厭的勇氣</h1><p><img src=\"/images/books/被討厭的勇氣.jpg\" alt=\"被討厭的勇氣\"></p>\n<p>作者：岸見一郎、古賀史健<br>譯者：葉小燕<br>出版社：究竟出版</p>\n<h3 id=\"被討厭的勇氣-1-下篇\"><a href=\"#被討厭的勇氣-1-下篇\" class=\"headerlink\" title=\"被討厭的勇氣 1 (下篇)\"></a><a href=\"http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-2/\">被討厭的勇氣 1 (下篇)</a></h3><h1 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h1><p>2015年最火紅的書莫過於就是&lt;被討厭的勇氣&gt;，有別於一般心理學書籍，作者從個人心理的觀點來探討個人跟整個社會的互動，把焦點放在自己身上，了解自己、改變自己，不再是去瞭解他人或是嘗試透視對方的想法。思考自己在做什麼，讓自己的外在表態或是內在的心靈強化是書中相當明顯的觀點，而當我們自己變得更好時，或許也能帶動身邊的人跟著改變。</p>\n<a id=\"more\"></a>\n<h1 id=\"否定心理創傷\"><a href=\"#否定心理創傷\" class=\"headerlink\" title=\"否定心理創傷\"></a>否定心理創傷</h1><hr>\n<h3 id=\"心理創傷並不存在\"><a href=\"#心理創傷並不存在\" class=\"headerlink\" title=\"心理創傷並不存在\"></a>心理創傷並不存在</h3><p>阿德勒心理學明確的否定心理創傷。</p>\n<blockquote>\n<p>不要由經驗來決定自我，而是由經驗賦予的意義來決定。</p>\n</blockquote>\n<p>我們每個人都為了某個目的而活著。</p>\n<blockquote>\n<p>應該追究的，不是過去的原因，是現在的目的。</p>\n</blockquote>\n<ul>\n<li>決定論</li>\n<li>目的論</li>\n</ul>\n<h5 id=\"決定論\"><a href=\"#決定論\" class=\"headerlink\" title=\"決定論\"></a>決定論</h5><p>因果關係，就是典型的決定論。因為什麼原因，造成現在這樣。雖然看似邏輯正確，但心中其實是將事情的結果推向過去的自己，否定現在的是幾，從某個方面來說我們往往忽略了人能掌控自己的情緒，面對失敗，了解原因及可，不要將責任推給過去。</p>\n<h5 id=\"目地論\"><a href=\"#目地論\" class=\"headerlink\" title=\"目地論\"></a>目地論</h5><p>目的論的觀點認為，人的每個行為、情緒變化等等，都是有目的性的，我們透過表達自己的情緒，來得到自己想要的成果。與決定論完全相反的是，決定論認為：”我因為XXX事情，所以我現在生氣了”，但在目的論認為：”你現在生氣，是為了達成ＯＯＯ目標”。舉例來說，決定的論點是：”因為你掃地沒掃乾淨所以我生氣”，認為”我生氣是別人造成的”。目的論則認為：當下在生氣時，其實是透過情緒表達，希望對方折服自己並認真打掃，情緒變成了一種手段，而非被動的產物。(透過這個論點可以反思，我們是能控制自己的情緒的，能收放自己的情緒。)</p>\n<hr>\n<h3 id=\"人，會捏造憤怒的情緒\"><a href=\"#人，會捏造憤怒的情緒\" class=\"headerlink\" title=\"人，會捏造憤怒的情緒\"></a>人，會捏造憤怒的情緒</h3><p>即是目的論的核心論點。藉由捏造的憤怒的情緒，來達成某種目度。這種情緒並不是所謂的 “無法控制” 或是 “衝動”。如果人們能夠不遷怒，那就代表憤怒是可以收放自如的 “工具” 。我們藉由憤怒的情緒來讓自己的行為合理化，是一種使人屈服於自己的手段。</p>\n<hr>\n<h3 id=\"不受過去支配的生活方式\"><a href=\"#不受過去支配的生活方式\" class=\"headerlink\" title=\"不受過去支配的生活方式\"></a>不受過去支配的生活方式</h3><blockquote>\n<p>不論是從 “人不受過去控制” 或 “人不受情緒控制” 的層面來說，阿德勒心理學都是與虛無主義者對立的思想，是哲學。</p>\n</blockquote>\n<p>問題不在於過去發生了什麼事情，而是我們怎麼去解釋它。例如說成功的喜悅可能沖昏頭，失敗可能激起更多的浪花。<br>每個人的生命中都會發生各種產生正面利益或是負面利益的事情，重點在於我們怎麼去詮釋狀況，從發生的狀況中我們得到或是學習到什麼。</p>\n<blockquote>\n<p>人並非受過去的原因而行動，<br>而是朝向自己決定好的目的而行動。</p>\n</blockquote>\n<h3 id=\"改變\"><a href=\"#改變\" class=\"headerlink\" title=\"改變\"></a>改變</h3><blockquote>\n<p>改變的第一步是要先知道。<br>答案，不應該是由誰告訴你，而是你自己親手去找才對。</p>\n</blockquote>\n<p>改變、成長都需要靠自己，一切的起頭也需要自己來。過程中的經歷才能淬煉成結果。不斷地灌輸觀念，不如人自己反思、自我思考。</p>\n<h3 id=\"幸與不幸，是自己選的\"><a href=\"#幸與不幸，是自己選的\" class=\"headerlink\" title=\"幸與不幸，是自己選的\"></a>幸與不幸，是自己選的</h3><blockquote>\n<p>沒有人單純只是為了做壞事而做壞事，所有犯罪的人都有讓他犯罪的內在 “正當理由”。例如，因為金錢糾紛而殺人，對當事人來說，他因為自以為的 “正當理由” 而採取行動。換句話說，是在執行 “自以為好” 的 “善” 事。當然，這裡所說的 “善” 並不是指道德上的良善，而是 “為自己的” 善。希臘語中的 “善” 跟道德沒有關係，純粹是 “有用” 的意思;另一方面 “惡” 是指 “沒有用處”。</p>\n</blockquote>\n<p>我們往往選擇對自己有利的狀況，可能自覺、可能不自覺，這種有利的狀況多半屬於短期有利，當下自己覺得舒服或方便而已，有可能是安於現狀，亦可能只是面子掛不住。所謂的 “目的論” 就是指人們只是為了達成某種目的，而做出的情緒反應而已，並透過其他的原因來詮釋現在的自己。但多半的時候人們透過 “決定論” 來解釋自己也是情非得已，並沒有了解到自己內心中正正的目的性。</p>\n<h3 id=\"人，常常決定不要改變\"><a href=\"#人，常常決定不要改變\" class=\"headerlink\" title=\"人，常常決定不要改變\"></a>人，常常決定不要改變</h3><h4 id=\"生活型態-life-style\"><a href=\"#生活型態-life-style\" class=\"headerlink\" title=\"生活型態 life style\"></a>生活型態 life style</h4><p>是人的性格或是氣質。並非直接指物質的生活狀況。</p>\n<blockquote>\n<p>如果生活性態不是天生的，而是自己選的，那就有重新選擇的可能性。</p>\n</blockquote>\n<p>人們往往不願意改變，儘管自己已經知道有地方需要改變，儘管知道已經造成別人的抱怨，但往往我們覺得 “安於現狀” 是輕鬆的，不確定的未來，人們總是不願意去冒險。</p>\n<blockquote>\n<p>缺乏便幸福的勇氣。</p>\n</blockquote>\n<h4 id=\"人生決定於當下\"><a href=\"#人生決定於當下\" class=\"headerlink\" title=\"人生決定於當下\"></a>人生決定於當下</h4><p>一種捨棄現有的生活型態的決心。就像在第一次做壞事一樣，變好一樣也需要有改變的勇氣，第一次運動時會覺得想放棄，同樣的，第一次偷東西的人，也會猶豫或是考慮要不要收手。</p>\n<blockquote>\n<p>無論之前你的人生發生過怎麼樣的事，那對於你將來要怎麼過日子一點影響都沒有。</p>\n</blockquote>\n<p>人生過去的影響，實際真正的影響在於精神層面，而精神層面應該是能理性控制的。</p>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>貫徹了之前我自己聽過的一句話：</p>\n<blockquote>\n<p>感性的事情要用理性解，理性的事情要用感性解。</p>\n</blockquote>\n<p>人生中有很多機會可以選擇，對於過去，重點是是從過去學習到什麼，或是從過往的經驗了解什麼。而不是一味的埋怨過去對自已造成傷害，因為過去的種種如果，所現在如何。人的所有的情緒、反應都是有目的性的。表達難過可能是為了得到安慰，憤怒是為了使人屈服、表達自己的強悍，情緒是能收放的。當然，人必定會有情緒，接受內在的情緒之後，不一定要對外表態出來，我真正需要學習的，是處理自己內心的情緒即可。</p>\n<p>而生活的現狀，取決於自己的思考，換而言之，現在的生活狀況是自己決定的，就如：”如果我有空的話..我就…”事實上是在為自己找藉口，為自己尋找 “結果論” 的原因，安慰自己。做出改變是痛苦的，是需要時間的。離開自己的舒適圈，朝夢想前進，而不是為自己找更多的理由。</p>\n<blockquote>\n<p>尋找解法，而不是責怪原因。</p>\n</blockquote>\n<h1 id=\"所有的煩惱都來自人際關係\"><a href=\"#所有的煩惱都來自人際關係\" class=\"headerlink\" title=\"所有的煩惱都來自人際關係\"></a>所有的煩惱都來自人際關係</h1><hr>\n<h3 id=\"為什麼討厭自己\"><a href=\"#為什麼討厭自己\" class=\"headerlink\" title=\"為什麼討厭自己\"></a>為什麼討厭自己</h3><blockquote>\n<p>因為過分害被別人討厭、在人際關係中受傷所致。<br>目的變成了不要在人際關係中受傷害。</p>\n</blockquote>\n<p>在人際關係中相當容易受到傷害，我們會遇到適合自己的人、排斥自己的人。為了避免受到傷害，我們為自己套上：孤僻、沈默等等性格，為自己的行爲找出合理的詮釋。合理的詮釋是為了讓自己的避免傷害，例如我會覺得：如果我每天念英文，我的人生就是彩色的了。其實心中是在迴避唸英文這個問題，我怕自己每天念也念不來，怕自己就算真的唸了，人生也並沒有改變。</p>\n<blockquote>\n<p>阿德勒：要除去所有煩惱，唯有獨自一人存活在宇宙中。</p>\n</blockquote>\n<p>簡單說，有人就會有問題拉。</p>\n<h3 id=\"所有的煩惱都是人際關係的煩惱\"><a href=\"#所有的煩惱都是人際關係的煩惱\" class=\"headerlink\" title=\"所有的煩惱都是人際關係的煩惱\"></a>所有的煩惱都是人際關係的煩惱</h3><blockquote>\n<p>我們就算要覺得孤獨，也需要其他人的存在。<br>所謂的 “內在的煩惱” 並不存在。</p>\n</blockquote>\n<h3 id=\"自卑感，是一種主觀的設定\"><a href=\"#自卑感，是一種主觀的設定\" class=\"headerlink\" title=\"自卑感，是一種主觀的設定\"></a>自卑感，是一種主觀的設定</h3><blockquote>\n<p>自卑感 = 價值 + 較少 + 感覺。這些折磨我們的自卑感並不是 “客觀的事實”，而是 “主觀的解釋”</p>\n</blockquote>\n<p>人與人之間存在比較，而我們從什麼角度跟別人比較，進而的產生 “自己不如人” 的感覺。事情有各個角度可以看，接受失敗、接受自己的缺點，而不是持續地以自己的缺點出發，認為自己的不完美，認為別人的條件比較好。因為這些主觀的觀點產生的自卑感，實為 “主觀的自卑感”，而非 “客觀的事實”，這種感覺通常是由自己判定自己的失敗，或是由別人投射在我們心中。總之，這個感覺仍然是人的感情建立，並非實際需要比較的東西。</p>\n<h3 id=\"當成藉口的自卑情結\"><a href=\"#當成藉口的自卑情結\" class=\"headerlink\" title=\"當成藉口的自卑情結\"></a>當成藉口的自卑情結</h3><blockquote>\n<p>當理想無法達成時，就會產生一種低劣無能的感覺。<br>自卑情結，是指把自卑感當成某種藉口使用的狀態。</p>\n</blockquote>\n<p>自卑情結即是為自己找藉口，為自己找的一個相對舒適的圈圈。因為自己無法達成，所以也就算了。同時解開了自己愧疚的心結，也解釋了自己為什麼不更努力的去完成目標。自卑感不見得是壞事，人們可以透過自卑感產生動力，覺得自己不好，需要更加努力達成。但自卑情結是為自己找到看似合理的出口，放棄改變來避免失敗。</p>\n<h3 id=\"自傲的人同時也感到自卑\"><a href=\"#自傲的人同時也感到自卑\" class=\"headerlink\" title=\"自傲的人同時也感到自卑\"></a>自傲的人同時也感到自卑</h3><blockquote>\n<p>藉由權威的力量來膨脹自我的人，終究還是活在別人的價值觀裡，過著別人的人生。如果有人自吹自擂，不過是因為他感到自卑罷了。</p>\n</blockquote>\n<p>真的正的強者，不會急於表現自己有多好，急於證明自己比別人好。因為他們對自己有足夠的自信，知道自己的優點。這也是為什麼在爭論的場合中弱勢的人，自尊心往往較強，甚至透過擺爛的行為，來贏得一個自己無法贏得的爭吵，把 “自己” 看得相當的重要。</p>\n<h5 id=\"炫耀不幸\"><a href=\"#炫耀不幸\" class=\"headerlink\" title=\"炫耀不幸\"></a>炫耀不幸</h5><blockquote>\n<p>藉由自己的不幸，變得特別; 憑藉不幸，想要高人一等。<br>把自己的不幸當成武器，想要支配對方。</p>\n</blockquote>\n<p>人們也會利用自己的缺點、悲情的過往來提搞自己的身份地位。透過說明自己撐過了某種艱困的過去，來表示自己撐過去了。或是透過 “你們沒經歷過，永遠無法體會” 的論點，來顯示自己的成長過程與眾不同。謙虛大概才是一個有自信的人會擁有的。</p>\n<h5 id=\"題外話，營造更好交談的10條建議\"><a href=\"#題外話，營造更好交談的10條建議\" class=\"headerlink\" title=\"題外話，營造更好交談的10條建議\"></a>題外話，營造更好交談的10條建議</h5><p>這邊讓我想到一個 TED 的演講：營造更好交談的10條建議。</p>\n<p>其中提到，當人們在陳述自己的遭遇時，是在尋求慰藉或是某種認同，而當我們接受到這樣的訊號時，建議不要用自己的經驗或是經驗法則套用在別人身上，沒有任何一段經驗是相同的，那段悲傷的情緒屬於對方的，而自己的狀況是相對的較難獲得認同。而與他人溝通或是聆聽對方的遭遇時，是一個建立雙方感情鏈結的好機會，我們需要做的只有嘗試去體會對方的感受，並當個好的傾聽者。</p>\n<h5 id=\"中譯影片：\"><a href=\"#中譯影片：\" class=\"headerlink\" title=\"中譯影片：\"></a>中譯影片：</h5><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nBbxsXqcF6E\" frameborder=\"0\" allowfullscreen></iframe>\n\n<h3 id=\"人生並不是與他人競賽\"><a href=\"#人生並不是與他人競賽\" class=\"headerlink\" title=\"人生並不是與他人競賽\"></a>人生並不是與他人競賽</h3><blockquote>\n<p>追求卓越，不需要跟任何人競爭，只需要跨步向前就行了。健全的自卑感並不是跟別人比較產生的，而是跟 “理想中的自己” 比較後的結果。</p>\n</blockquote>\n<p>人跟人之間應該是完全平等的，沒有人絕對得比誰優秀，儘管我們之間慛載著差異。而我們會把看到感覺優秀的人的影子，投射到自己身上，產生一個如果自己是那樣的想法。間接的，我們產了現在的自己不如自己像象中好的樣子，產生了自卑感。</p>\n<blockquote>\n<p>將別人的幸福認定成自己的挫敗。</p>\n</blockquote>\n<p>要把大家當成夥伴，而不是都當成敵人。當我們把周遭的人都當成敵人，免不了跟別人比較。應該把大家當成夥伴，大家共同成長，那比較就會更少，也不會間接產生自卑感。</p>\n<h3 id=\"由權力鬥爭到復仇\"><a href=\"#由權力鬥爭到復仇\" class=\"headerlink\" title=\"由權力鬥爭到復仇\"></a>由權力鬥爭到復仇</h3><blockquote>\n<p>想藉由勝利來證明自己的權利。<br>當對方挑起權力鬥爭時，絕不要隨之起舞。</p>\n</blockquote>\n<p>我們不需要透過鬥爭來解決問題，更不需要透過鬥爭來證明自己的能力。正確地解決問題，不要挑起無意義的爭端。</p>\n<h3 id=\"認錯不等於承認失敗\"><a href=\"#認錯不等於承認失敗\" class=\"headerlink\" title=\"認錯不等於承認失敗\"></a>認錯不等於承認失敗</h3><blockquote>\n<p>不是忍耐，忍耐代表你已經捲入了這場鬥爭。</p>\n</blockquote>\n<p>當對方發起爭執時，代表這整件事情處理的過程有瑕疵。沒有必要證明自己是對的或是對方是錯的，解決問題最重要的。這回歸到第一章節所述的 “憤怒是種工具” 不要濫用憤怒的情緒來解決問題。</p>\n<h3 id=\"如何面對人生的任務\"><a href=\"#如何面對人生的任務\" class=\"headerlink\" title=\"如何面對人生的任務\"></a>如何面對人生的任務</h3><blockquote>\n<p>行動面的目標有 “獨立” 和 “能與社會和諧生活” 兩項。而支援這項行動的心裡面目標則是 “我是有能力的”，以及 “人人都是我的夥伴”</p>\n</blockquote>\n<ul>\n<li>工作的任務</li>\n<li>交友的任務</li>\n<li>愛的任務</li>\n</ul>\n<h5 id=\"工作的任務\"><a href=\"#工作的任務\" class=\"headerlink\" title=\"工作的任務\"></a>工作的任務</h5><p>工作的任務其實仍然與人際關係有關，如果我們在工作上疏失，會導致自己不想去上班，不願意面對工作。真正的原因並不是工作本身，而是我們在工作上會遭受的責難，被評價為能力不足等等的問題。因此，工作的任務其實仍然屬於人際關係的範疇。</p>\n<h5 id=\"交友的任務\"><a href=\"#交友的任務\" class=\"headerlink\" title=\"交友的任務\"></a>交友的任務</h5><p>這屬於人生的中相當重要的一個課題。交友的任務即是普遍認知的人際關係，而這方面的難度會高於工作的任務。因為人跟人之間並沒有強制性的關聯，沒有 “一定要在一起” 的需求。朋友的重點不在多，而在於摯友，久久見面一次的朋友仍然可是摯友。</p>\n<h5 id=\"愛的任務\"><a href=\"#愛的任務\" class=\"headerlink\" title=\"愛的任務\"></a>愛的任務</h5><blockquote>\n<p>只要和這個人在一起，就可以自由盡情的展現自我</p>\n</blockquote>\n<p>愛的過程中，最重的是面對問題，並嘗試解決，並不要安逸於現狀。</p>\n<h3 id=\"不要漠視人生的謊言\"><a href=\"#不要漠視人生的謊言\" class=\"headerlink\" title=\"不要漠視人生的謊言\"></a>不要漠視人生的謊言</h3><blockquote>\n<p>找出各種藉口來逃避人生任務的情形，就稱為人生的謊言</p>\n</blockquote>\n<h3 id=\"從擁有的心理學到使用的心理學\"><a href=\"#從擁有的心理學到使用的心理學\" class=\"headerlink\" title=\"從擁有的心理學到使用的心理學\"></a>從擁有的心理學到使用的心理學</h3><ul>\n<li>佛洛伊德-因果論</li>\n</ul>\n<p>擁有的心理學，最後注定要走入決定論。</p>\n<ul>\n<li>阿德勒-目的論</li>\n</ul>\n<p>使用的心理學，決定權在於你自己。</p>\n<h3 id=\"小結-1\"><a href=\"#小結-1\" class=\"headerlink\" title=\"小結\"></a>小結</h3><p>人之間最大的心魔就是互相比較，透過比較得到優越感，或是自卑感。人生的課題主要為三大方向：工作、交友、愛情，在嘗試解決這三方面的問題時<br>應該對自己更有自信，不是不斷的拿自己的條件跟人比較。而比較時又常常使用固守的觀點認為自己不夠好，在失敗的時候，我們嘗試找出原因，卻只找出藉口，<br>藉由藉口來解釋自己的失敗，解釋自己為什麼無法成功，其實成功與否一直都操之在我們自己，遮蔽這一切的，即是人生的謊言。</p>\n<p>滿滿的正能量啊。</p>\n<h1 id=\"割捨別人的課題\"><a href=\"#割捨別人的課題\" class=\"headerlink\" title=\"割捨別人的課題\"></a>割捨別人的課題</h1><h3 id=\"不要為了滿足別人的期望而活\"><a href=\"#不要為了滿足別人的期望而活\" class=\"headerlink\" title=\"不要為了滿足別人的期望而活\"></a>不要為了滿足別人的期望而活</h3><blockquote>\n<p>如果你不為自己而活，那誰要為你的人生而活?</p>\n</blockquote>\n<p>賞罰教育帶來的瑕疵點：絕對的是非對錯，將這個世界上的事情一分為二。理想的狀況事情是：我們會只做對的事情，並不會做錯誤的事情。<br>但這種教育造成的情況是，我們會選擇做會受到讚賞的事情，選擇做光彩的事情。而人們排斥做沒人注意到的事情。換而言之我們陷入的為他人而活的迴圈，有別人的目光的事情才有意義。…所有的問題仍然來自於人際關係。</p>\n<h3 id=\"課題分離\"><a href=\"#課題分離\" class=\"headerlink\" title=\"課題分離\"></a>課題分離</h3><blockquote>\n<p>不涉入別人的課題。所有人際關係中的紛爭，差不多都是因為一個腳踩進人家的課題裡，或自己的課題遭到干涉所引起的。</p>\n</blockquote>\n<p>仔細思考，因為這個決定而帶來的結果，最後會由誰來承受？</p>\n<blockquote>\n<p>只有自己可以改變自己。<br>我們能把馬牽到水邊，卻不能強迫她喝水。</p>\n</blockquote>\n<h3 id=\"割捨別人的課題-1\"><a href=\"#割捨別人的課題-1\" class=\"headerlink\" title=\"割捨別人的課題\"></a>割捨別人的課題</h3><blockquote>\n<p>越是關係親近的家人，越需要刻意機課題切割開來。</p>\n</blockquote>\n<p>割捨別人的課題這個想法是雙面的，如果我們不要為了滿足別人的期望而活。那我們也不應該期望別人會為了我們而做什麼，這個觀點相當的清晰，每個人跟人之間是個體，我們能互相關心，能相愛，但不是互相控制對方，互相牽制對方。每個人有每個人自己的人生，有屬於它的成功，也有屬於自己的失敗，失敗也是屬於自己的體驗。</p>\n<blockquote>\n<p>不要介入別人的課題，也不要讓別人介入你的。</p>\n</blockquote>\n<p>尤其是家人，更因為晦長時間的相處而互相跨入對方的私領域。</p>\n<h3 id=\"斬斷難題\"><a href=\"#斬斷難題\" class=\"headerlink\" title=\"斬斷難題\"></a>斬斷難題</h3><blockquote>\n<p>所謂的命運，並非依靠傳說來安排，而是揮舞自己的劍去展開。 — 亞歷山大</p>\n</blockquote>\n<p>與常識對立的反命題。</p>\n<blockquote>\n<p>如果你無法不在意他人的評價、無法不害怕被別人討厭。也不想付出可能得不到認同的代價。那就無法貫徹自己的生活方次。</p>\n</blockquote>\n<h3 id=\"小結-2\"><a href=\"#小結-2\" class=\"headerlink\" title=\"小結\"></a>小結</h3><p>順著書本的邏輯思考到這邊的話，邏輯是說得通的。我很難表達自己現在覺得這整件事情的想法，也與我自己過去的經驗有所牴觸。但不可否認的，我們不可能做到人見人愛，就連賈伯斯都被指責是個暴君、差勁、難相處的人。自己快樂和讓人快樂，相當難同時兼具，如果我們要完全百分之百應和他人，那就會失去自由的自己。</p>\n<p>不過不要忘記一具相當重要的話：</p>\n<blockquote>\n<p>說話讓人舒服的程度，決定你的高度。</p>\n</blockquote>\n<p>這仍然是管理學中翁相當重要的一環。做人、做自己、跟管理，需要認真地分開思考。抓取中間的平衡點是相當重要的，過度的偏激自我或是他人，都是不健康的心理狀態。</p>\n","excerpt":"<h1 id=\"被討厭的勇氣\"><a href=\"#被討厭的勇氣\" class=\"headerlink\" title=\"被討厭的勇氣\"></a>被討厭的勇氣</h1><p><img src=\"/images/books/被討厭的勇氣.jpg\" alt=\"被討厭的勇氣\"></p>\n<p>作者：岸見一郎、古賀史健<br>譯者：葉小燕<br>出版社：究竟出版</p>\n<h3 id=\"被討厭的勇氣-1-下篇\"><a href=\"#被討厭的勇氣-1-下篇\" class=\"headerlink\" title=\"被討厭的勇氣 1 (下篇)\"></a><a href=\"http://www.andrewchen.tw/2017/01/31/20170131_BOOKS_%E8%A2%AB%E8%A8%8E%E5%8E%AD%E7%9A%84%E5%8B%87%E6%B0%A31-2/\">被討厭的勇氣 1 (下篇)</a></h3><h1 id=\"簡介\"><a href=\"#簡介\" class=\"headerlink\" title=\"簡介\"></a>簡介</h1><p>2015年最火紅的書莫過於就是&lt;被討厭的勇氣&gt;，有別於一般心理學書籍，作者從個人心理的觀點來探討個人跟整個社會的互動，把焦點放在自己身上，了解自己、改變自己，不再是去瞭解他人或是嘗試透視對方的想法。思考自己在做什麼，讓自己的外在表態或是內在的心靈強化是書中相當明顯的觀點，而當我們自己變得更好時，或許也能帶動身邊的人跟著改變。</p>","more":"<h1 id=\"否定心理創傷\"><a href=\"#否定心理創傷\" class=\"headerlink\" title=\"否定心理創傷\"></a>否定心理創傷</h1><hr>\n<h3 id=\"心理創傷並不存在\"><a href=\"#心理創傷並不存在\" class=\"headerlink\" title=\"心理創傷並不存在\"></a>心理創傷並不存在</h3><p>阿德勒心理學明確的否定心理創傷。</p>\n<blockquote>\n<p>不要由經驗來決定自我，而是由經驗賦予的意義來決定。</p>\n</blockquote>\n<p>我們每個人都為了某個目的而活著。</p>\n<blockquote>\n<p>應該追究的，不是過去的原因，是現在的目的。</p>\n</blockquote>\n<ul>\n<li>決定論</li>\n<li>目的論</li>\n</ul>\n<h5 id=\"決定論\"><a href=\"#決定論\" class=\"headerlink\" title=\"決定論\"></a>決定論</h5><p>因果關係，就是典型的決定論。因為什麼原因，造成現在這樣。雖然看似邏輯正確，但心中其實是將事情的結果推向過去的自己，否定現在的是幾，從某個方面來說我們往往忽略了人能掌控自己的情緒，面對失敗，了解原因及可，不要將責任推給過去。</p>\n<h5 id=\"目地論\"><a href=\"#目地論\" class=\"headerlink\" title=\"目地論\"></a>目地論</h5><p>目的論的觀點認為，人的每個行為、情緒變化等等，都是有目的性的，我們透過表達自己的情緒，來得到自己想要的成果。與決定論完全相反的是，決定論認為：”我因為XXX事情，所以我現在生氣了”，但在目的論認為：”你現在生氣，是為了達成ＯＯＯ目標”。舉例來說，決定的論點是：”因為你掃地沒掃乾淨所以我生氣”，認為”我生氣是別人造成的”。目的論則認為：當下在生氣時，其實是透過情緒表達，希望對方折服自己並認真打掃，情緒變成了一種手段，而非被動的產物。(透過這個論點可以反思，我們是能控制自己的情緒的，能收放自己的情緒。)</p>\n<hr>\n<h3 id=\"人，會捏造憤怒的情緒\"><a href=\"#人，會捏造憤怒的情緒\" class=\"headerlink\" title=\"人，會捏造憤怒的情緒\"></a>人，會捏造憤怒的情緒</h3><p>即是目的論的核心論點。藉由捏造的憤怒的情緒，來達成某種目度。這種情緒並不是所謂的 “無法控制” 或是 “衝動”。如果人們能夠不遷怒，那就代表憤怒是可以收放自如的 “工具” 。我們藉由憤怒的情緒來讓自己的行為合理化，是一種使人屈服於自己的手段。</p>\n<hr>\n<h3 id=\"不受過去支配的生活方式\"><a href=\"#不受過去支配的生活方式\" class=\"headerlink\" title=\"不受過去支配的生活方式\"></a>不受過去支配的生活方式</h3><blockquote>\n<p>不論是從 “人不受過去控制” 或 “人不受情緒控制” 的層面來說，阿德勒心理學都是與虛無主義者對立的思想，是哲學。</p>\n</blockquote>\n<p>問題不在於過去發生了什麼事情，而是我們怎麼去解釋它。例如說成功的喜悅可能沖昏頭，失敗可能激起更多的浪花。<br>每個人的生命中都會發生各種產生正面利益或是負面利益的事情，重點在於我們怎麼去詮釋狀況，從發生的狀況中我們得到或是學習到什麼。</p>\n<blockquote>\n<p>人並非受過去的原因而行動，<br>而是朝向自己決定好的目的而行動。</p>\n</blockquote>\n<h3 id=\"改變\"><a href=\"#改變\" class=\"headerlink\" title=\"改變\"></a>改變</h3><blockquote>\n<p>改變的第一步是要先知道。<br>答案，不應該是由誰告訴你，而是你自己親手去找才對。</p>\n</blockquote>\n<p>改變、成長都需要靠自己，一切的起頭也需要自己來。過程中的經歷才能淬煉成結果。不斷地灌輸觀念，不如人自己反思、自我思考。</p>\n<h3 id=\"幸與不幸，是自己選的\"><a href=\"#幸與不幸，是自己選的\" class=\"headerlink\" title=\"幸與不幸，是自己選的\"></a>幸與不幸，是自己選的</h3><blockquote>\n<p>沒有人單純只是為了做壞事而做壞事，所有犯罪的人都有讓他犯罪的內在 “正當理由”。例如，因為金錢糾紛而殺人，對當事人來說，他因為自以為的 “正當理由” 而採取行動。換句話說，是在執行 “自以為好” 的 “善” 事。當然，這裡所說的 “善” 並不是指道德上的良善，而是 “為自己的” 善。希臘語中的 “善” 跟道德沒有關係，純粹是 “有用” 的意思;另一方面 “惡” 是指 “沒有用處”。</p>\n</blockquote>\n<p>我們往往選擇對自己有利的狀況，可能自覺、可能不自覺，這種有利的狀況多半屬於短期有利，當下自己覺得舒服或方便而已，有可能是安於現狀，亦可能只是面子掛不住。所謂的 “目的論” 就是指人們只是為了達成某種目的，而做出的情緒反應而已，並透過其他的原因來詮釋現在的自己。但多半的時候人們透過 “決定論” 來解釋自己也是情非得已，並沒有了解到自己內心中正正的目的性。</p>\n<h3 id=\"人，常常決定不要改變\"><a href=\"#人，常常決定不要改變\" class=\"headerlink\" title=\"人，常常決定不要改變\"></a>人，常常決定不要改變</h3><h4 id=\"生活型態-life-style\"><a href=\"#生活型態-life-style\" class=\"headerlink\" title=\"生活型態 life style\"></a>生活型態 life style</h4><p>是人的性格或是氣質。並非直接指物質的生活狀況。</p>\n<blockquote>\n<p>如果生活性態不是天生的，而是自己選的，那就有重新選擇的可能性。</p>\n</blockquote>\n<p>人們往往不願意改變，儘管自己已經知道有地方需要改變，儘管知道已經造成別人的抱怨，但往往我們覺得 “安於現狀” 是輕鬆的，不確定的未來，人們總是不願意去冒險。</p>\n<blockquote>\n<p>缺乏便幸福的勇氣。</p>\n</blockquote>\n<h4 id=\"人生決定於當下\"><a href=\"#人生決定於當下\" class=\"headerlink\" title=\"人生決定於當下\"></a>人生決定於當下</h4><p>一種捨棄現有的生活型態的決心。就像在第一次做壞事一樣，變好一樣也需要有改變的勇氣，第一次運動時會覺得想放棄，同樣的，第一次偷東西的人，也會猶豫或是考慮要不要收手。</p>\n<blockquote>\n<p>無論之前你的人生發生過怎麼樣的事，那對於你將來要怎麼過日子一點影響都沒有。</p>\n</blockquote>\n<p>人生過去的影響，實際真正的影響在於精神層面，而精神層面應該是能理性控制的。</p>\n<h2 id=\"小結\"><a href=\"#小結\" class=\"headerlink\" title=\"小結\"></a>小結</h2><p>貫徹了之前我自己聽過的一句話：</p>\n<blockquote>\n<p>感性的事情要用理性解，理性的事情要用感性解。</p>\n</blockquote>\n<p>人生中有很多機會可以選擇，對於過去，重點是是從過去學習到什麼，或是從過往的經驗了解什麼。而不是一味的埋怨過去對自已造成傷害，因為過去的種種如果，所現在如何。人的所有的情緒、反應都是有目的性的。表達難過可能是為了得到安慰，憤怒是為了使人屈服、表達自己的強悍，情緒是能收放的。當然，人必定會有情緒，接受內在的情緒之後，不一定要對外表態出來，我真正需要學習的，是處理自己內心的情緒即可。</p>\n<p>而生活的現狀，取決於自己的思考，換而言之，現在的生活狀況是自己決定的，就如：”如果我有空的話..我就…”事實上是在為自己找藉口，為自己尋找 “結果論” 的原因，安慰自己。做出改變是痛苦的，是需要時間的。離開自己的舒適圈，朝夢想前進，而不是為自己找更多的理由。</p>\n<blockquote>\n<p>尋找解法，而不是責怪原因。</p>\n</blockquote>\n<h1 id=\"所有的煩惱都來自人際關係\"><a href=\"#所有的煩惱都來自人際關係\" class=\"headerlink\" title=\"所有的煩惱都來自人際關係\"></a>所有的煩惱都來自人際關係</h1><hr>\n<h3 id=\"為什麼討厭自己\"><a href=\"#為什麼討厭自己\" class=\"headerlink\" title=\"為什麼討厭自己\"></a>為什麼討厭自己</h3><blockquote>\n<p>因為過分害被別人討厭、在人際關係中受傷所致。<br>目的變成了不要在人際關係中受傷害。</p>\n</blockquote>\n<p>在人際關係中相當容易受到傷害，我們會遇到適合自己的人、排斥自己的人。為了避免受到傷害，我們為自己套上：孤僻、沈默等等性格，為自己的行爲找出合理的詮釋。合理的詮釋是為了讓自己的避免傷害，例如我會覺得：如果我每天念英文，我的人生就是彩色的了。其實心中是在迴避唸英文這個問題，我怕自己每天念也念不來，怕自己就算真的唸了，人生也並沒有改變。</p>\n<blockquote>\n<p>阿德勒：要除去所有煩惱，唯有獨自一人存活在宇宙中。</p>\n</blockquote>\n<p>簡單說，有人就會有問題拉。</p>\n<h3 id=\"所有的煩惱都是人際關係的煩惱\"><a href=\"#所有的煩惱都是人際關係的煩惱\" class=\"headerlink\" title=\"所有的煩惱都是人際關係的煩惱\"></a>所有的煩惱都是人際關係的煩惱</h3><blockquote>\n<p>我們就算要覺得孤獨，也需要其他人的存在。<br>所謂的 “內在的煩惱” 並不存在。</p>\n</blockquote>\n<h3 id=\"自卑感，是一種主觀的設定\"><a href=\"#自卑感，是一種主觀的設定\" class=\"headerlink\" title=\"自卑感，是一種主觀的設定\"></a>自卑感，是一種主觀的設定</h3><blockquote>\n<p>自卑感 = 價值 + 較少 + 感覺。這些折磨我們的自卑感並不是 “客觀的事實”，而是 “主觀的解釋”</p>\n</blockquote>\n<p>人與人之間存在比較，而我們從什麼角度跟別人比較，進而的產生 “自己不如人” 的感覺。事情有各個角度可以看，接受失敗、接受自己的缺點，而不是持續地以自己的缺點出發，認為自己的不完美，認為別人的條件比較好。因為這些主觀的觀點產生的自卑感，實為 “主觀的自卑感”，而非 “客觀的事實”，這種感覺通常是由自己判定自己的失敗，或是由別人投射在我們心中。總之，這個感覺仍然是人的感情建立，並非實際需要比較的東西。</p>\n<h3 id=\"當成藉口的自卑情結\"><a href=\"#當成藉口的自卑情結\" class=\"headerlink\" title=\"當成藉口的自卑情結\"></a>當成藉口的自卑情結</h3><blockquote>\n<p>當理想無法達成時，就會產生一種低劣無能的感覺。<br>自卑情結，是指把自卑感當成某種藉口使用的狀態。</p>\n</blockquote>\n<p>自卑情結即是為自己找藉口，為自己找的一個相對舒適的圈圈。因為自己無法達成，所以也就算了。同時解開了自己愧疚的心結，也解釋了自己為什麼不更努力的去完成目標。自卑感不見得是壞事，人們可以透過自卑感產生動力，覺得自己不好，需要更加努力達成。但自卑情結是為自己找到看似合理的出口，放棄改變來避免失敗。</p>\n<h3 id=\"自傲的人同時也感到自卑\"><a href=\"#自傲的人同時也感到自卑\" class=\"headerlink\" title=\"自傲的人同時也感到自卑\"></a>自傲的人同時也感到自卑</h3><blockquote>\n<p>藉由權威的力量來膨脹自我的人，終究還是活在別人的價值觀裡，過著別人的人生。如果有人自吹自擂，不過是因為他感到自卑罷了。</p>\n</blockquote>\n<p>真的正的強者，不會急於表現自己有多好，急於證明自己比別人好。因為他們對自己有足夠的自信，知道自己的優點。這也是為什麼在爭論的場合中弱勢的人，自尊心往往較強，甚至透過擺爛的行為，來贏得一個自己無法贏得的爭吵，把 “自己” 看得相當的重要。</p>\n<h5 id=\"炫耀不幸\"><a href=\"#炫耀不幸\" class=\"headerlink\" title=\"炫耀不幸\"></a>炫耀不幸</h5><blockquote>\n<p>藉由自己的不幸，變得特別; 憑藉不幸，想要高人一等。<br>把自己的不幸當成武器，想要支配對方。</p>\n</blockquote>\n<p>人們也會利用自己的缺點、悲情的過往來提搞自己的身份地位。透過說明自己撐過了某種艱困的過去，來表示自己撐過去了。或是透過 “你們沒經歷過，永遠無法體會” 的論點，來顯示自己的成長過程與眾不同。謙虛大概才是一個有自信的人會擁有的。</p>\n<h5 id=\"題外話，營造更好交談的10條建議\"><a href=\"#題外話，營造更好交談的10條建議\" class=\"headerlink\" title=\"題外話，營造更好交談的10條建議\"></a>題外話，營造更好交談的10條建議</h5><p>這邊讓我想到一個 TED 的演講：營造更好交談的10條建議。</p>\n<p>其中提到，當人們在陳述自己的遭遇時，是在尋求慰藉或是某種認同，而當我們接受到這樣的訊號時，建議不要用自己的經驗或是經驗法則套用在別人身上，沒有任何一段經驗是相同的，那段悲傷的情緒屬於對方的，而自己的狀況是相對的較難獲得認同。而與他人溝通或是聆聽對方的遭遇時，是一個建立雙方感情鏈結的好機會，我們需要做的只有嘗試去體會對方的感受，並當個好的傾聽者。</p>\n<h5 id=\"中譯影片：\"><a href=\"#中譯影片：\" class=\"headerlink\" title=\"中譯影片：\"></a>中譯影片：</h5><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/nBbxsXqcF6E\" frameborder=\"0\" allowfullscreen></iframe>\n\n<h3 id=\"人生並不是與他人競賽\"><a href=\"#人生並不是與他人競賽\" class=\"headerlink\" title=\"人生並不是與他人競賽\"></a>人生並不是與他人競賽</h3><blockquote>\n<p>追求卓越，不需要跟任何人競爭，只需要跨步向前就行了。健全的自卑感並不是跟別人比較產生的，而是跟 “理想中的自己” 比較後的結果。</p>\n</blockquote>\n<p>人跟人之間應該是完全平等的，沒有人絕對得比誰優秀，儘管我們之間慛載著差異。而我們會把看到感覺優秀的人的影子，投射到自己身上，產生一個如果自己是那樣的想法。間接的，我們產了現在的自己不如自己像象中好的樣子，產生了自卑感。</p>\n<blockquote>\n<p>將別人的幸福認定成自己的挫敗。</p>\n</blockquote>\n<p>要把大家當成夥伴，而不是都當成敵人。當我們把周遭的人都當成敵人，免不了跟別人比較。應該把大家當成夥伴，大家共同成長，那比較就會更少，也不會間接產生自卑感。</p>\n<h3 id=\"由權力鬥爭到復仇\"><a href=\"#由權力鬥爭到復仇\" class=\"headerlink\" title=\"由權力鬥爭到復仇\"></a>由權力鬥爭到復仇</h3><blockquote>\n<p>想藉由勝利來證明自己的權利。<br>當對方挑起權力鬥爭時，絕不要隨之起舞。</p>\n</blockquote>\n<p>我們不需要透過鬥爭來解決問題，更不需要透過鬥爭來證明自己的能力。正確地解決問題，不要挑起無意義的爭端。</p>\n<h3 id=\"認錯不等於承認失敗\"><a href=\"#認錯不等於承認失敗\" class=\"headerlink\" title=\"認錯不等於承認失敗\"></a>認錯不等於承認失敗</h3><blockquote>\n<p>不是忍耐，忍耐代表你已經捲入了這場鬥爭。</p>\n</blockquote>\n<p>當對方發起爭執時，代表這整件事情處理的過程有瑕疵。沒有必要證明自己是對的或是對方是錯的，解決問題最重要的。這回歸到第一章節所述的 “憤怒是種工具” 不要濫用憤怒的情緒來解決問題。</p>\n<h3 id=\"如何面對人生的任務\"><a href=\"#如何面對人生的任務\" class=\"headerlink\" title=\"如何面對人生的任務\"></a>如何面對人生的任務</h3><blockquote>\n<p>行動面的目標有 “獨立” 和 “能與社會和諧生活” 兩項。而支援這項行動的心裡面目標則是 “我是有能力的”，以及 “人人都是我的夥伴”</p>\n</blockquote>\n<ul>\n<li>工作的任務</li>\n<li>交友的任務</li>\n<li>愛的任務</li>\n</ul>\n<h5 id=\"工作的任務\"><a href=\"#工作的任務\" class=\"headerlink\" title=\"工作的任務\"></a>工作的任務</h5><p>工作的任務其實仍然與人際關係有關，如果我們在工作上疏失，會導致自己不想去上班，不願意面對工作。真正的原因並不是工作本身，而是我們在工作上會遭受的責難，被評價為能力不足等等的問題。因此，工作的任務其實仍然屬於人際關係的範疇。</p>\n<h5 id=\"交友的任務\"><a href=\"#交友的任務\" class=\"headerlink\" title=\"交友的任務\"></a>交友的任務</h5><p>這屬於人生的中相當重要的一個課題。交友的任務即是普遍認知的人際關係，而這方面的難度會高於工作的任務。因為人跟人之間並沒有強制性的關聯，沒有 “一定要在一起” 的需求。朋友的重點不在多，而在於摯友，久久見面一次的朋友仍然可是摯友。</p>\n<h5 id=\"愛的任務\"><a href=\"#愛的任務\" class=\"headerlink\" title=\"愛的任務\"></a>愛的任務</h5><blockquote>\n<p>只要和這個人在一起，就可以自由盡情的展現自我</p>\n</blockquote>\n<p>愛的過程中，最重的是面對問題，並嘗試解決，並不要安逸於現狀。</p>\n<h3 id=\"不要漠視人生的謊言\"><a href=\"#不要漠視人生的謊言\" class=\"headerlink\" title=\"不要漠視人生的謊言\"></a>不要漠視人生的謊言</h3><blockquote>\n<p>找出各種藉口來逃避人生任務的情形，就稱為人生的謊言</p>\n</blockquote>\n<h3 id=\"從擁有的心理學到使用的心理學\"><a href=\"#從擁有的心理學到使用的心理學\" class=\"headerlink\" title=\"從擁有的心理學到使用的心理學\"></a>從擁有的心理學到使用的心理學</h3><ul>\n<li>佛洛伊德-因果論</li>\n</ul>\n<p>擁有的心理學，最後注定要走入決定論。</p>\n<ul>\n<li>阿德勒-目的論</li>\n</ul>\n<p>使用的心理學，決定權在於你自己。</p>\n<h3 id=\"小結-1\"><a href=\"#小結-1\" class=\"headerlink\" title=\"小結\"></a>小結</h3><p>人之間最大的心魔就是互相比較，透過比較得到優越感，或是自卑感。人生的課題主要為三大方向：工作、交友、愛情，在嘗試解決這三方面的問題時<br>應該對自己更有自信，不是不斷的拿自己的條件跟人比較。而比較時又常常使用固守的觀點認為自己不夠好，在失敗的時候，我們嘗試找出原因，卻只找出藉口，<br>藉由藉口來解釋自己的失敗，解釋自己為什麼無法成功，其實成功與否一直都操之在我們自己，遮蔽這一切的，即是人生的謊言。</p>\n<p>滿滿的正能量啊。</p>\n<h1 id=\"割捨別人的課題\"><a href=\"#割捨別人的課題\" class=\"headerlink\" title=\"割捨別人的課題\"></a>割捨別人的課題</h1><h3 id=\"不要為了滿足別人的期望而活\"><a href=\"#不要為了滿足別人的期望而活\" class=\"headerlink\" title=\"不要為了滿足別人的期望而活\"></a>不要為了滿足別人的期望而活</h3><blockquote>\n<p>如果你不為自己而活，那誰要為你的人生而活?</p>\n</blockquote>\n<p>賞罰教育帶來的瑕疵點：絕對的是非對錯，將這個世界上的事情一分為二。理想的狀況事情是：我們會只做對的事情，並不會做錯誤的事情。<br>但這種教育造成的情況是，我們會選擇做會受到讚賞的事情，選擇做光彩的事情。而人們排斥做沒人注意到的事情。換而言之我們陷入的為他人而活的迴圈，有別人的目光的事情才有意義。…所有的問題仍然來自於人際關係。</p>\n<h3 id=\"課題分離\"><a href=\"#課題分離\" class=\"headerlink\" title=\"課題分離\"></a>課題分離</h3><blockquote>\n<p>不涉入別人的課題。所有人際關係中的紛爭，差不多都是因為一個腳踩進人家的課題裡，或自己的課題遭到干涉所引起的。</p>\n</blockquote>\n<p>仔細思考，因為這個決定而帶來的結果，最後會由誰來承受？</p>\n<blockquote>\n<p>只有自己可以改變自己。<br>我們能把馬牽到水邊，卻不能強迫她喝水。</p>\n</blockquote>\n<h3 id=\"割捨別人的課題-1\"><a href=\"#割捨別人的課題-1\" class=\"headerlink\" title=\"割捨別人的課題\"></a>割捨別人的課題</h3><blockquote>\n<p>越是關係親近的家人，越需要刻意機課題切割開來。</p>\n</blockquote>\n<p>割捨別人的課題這個想法是雙面的，如果我們不要為了滿足別人的期望而活。那我們也不應該期望別人會為了我們而做什麼，這個觀點相當的清晰，每個人跟人之間是個體，我們能互相關心，能相愛，但不是互相控制對方，互相牽制對方。每個人有每個人自己的人生，有屬於它的成功，也有屬於自己的失敗，失敗也是屬於自己的體驗。</p>\n<blockquote>\n<p>不要介入別人的課題，也不要讓別人介入你的。</p>\n</blockquote>\n<p>尤其是家人，更因為晦長時間的相處而互相跨入對方的私領域。</p>\n<h3 id=\"斬斷難題\"><a href=\"#斬斷難題\" class=\"headerlink\" title=\"斬斷難題\"></a>斬斷難題</h3><blockquote>\n<p>所謂的命運，並非依靠傳說來安排，而是揮舞自己的劍去展開。 — 亞歷山大</p>\n</blockquote>\n<p>與常識對立的反命題。</p>\n<blockquote>\n<p>如果你無法不在意他人的評價、無法不害怕被別人討厭。也不想付出可能得不到認同的代價。那就無法貫徹自己的生活方次。</p>\n</blockquote>\n<h3 id=\"小結-2\"><a href=\"#小結-2\" class=\"headerlink\" title=\"小結\"></a>小結</h3><p>順著書本的邏輯思考到這邊的話，邏輯是說得通的。我很難表達自己現在覺得這整件事情的想法，也與我自己過去的經驗有所牴觸。但不可否認的，我們不可能做到人見人愛，就連賈伯斯都被指責是個暴君、差勁、難相處的人。自己快樂和讓人快樂，相當難同時兼具，如果我們要完全百分之百應和他人，那就會失去自由的自己。</p>\n<p>不過不要忘記一具相當重要的話：</p>\n<blockquote>\n<p>說話讓人舒服的程度，決定你的高度。</p>\n</blockquote>\n<p>這仍然是管理學中翁相當重要的一環。做人、做自己、跟管理，需要認真地分開思考。抓取中間的平衡點是相當重要的，過度的偏激自我或是他人，都是不健康的心理狀態。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ciysookup0000c0u00ygkckbx","category_id":"ciysookv30004c0u0ug2bck9p","_id":"ciysookvr000dc0u0d67rgoud"},{"post_id":"ciysookux0002c0u01z4ijvxl","category_id":"ciysookv30004c0u0ug2bck9p","_id":"ciysookvx000ic0u08tfqbbhu"},{"post_id":"ciysookvc0006c0u03ead1pul","category_id":"ciysookvt000fc0u05qgy88g4","_id":"ciysookw1000mc0u0m635vyy3"},{"post_id":"ciysookvg0008c0u04zl1kxq6","category_id":"ciysookw0000kc0u0x6qj6p4m","_id":"ciysookw4000qc0u0ygiu5iy8"},{"post_id":"ciysookvl0009c0u0t3a3r1rp","category_id":"ciysookw2000nc0u0x2lzvjke","_id":"ciysookw6000vc0u0ytq6vxs5"},{"post_id":"ciysookvp000cc0u0fgeunws7","category_id":"ciysookw4000sc0u0uttdurns","_id":"ciysookw7000zc0u0grwzlsu8"},{"post_id":"ciysookvs000ec0u0y60l2cyk","category_id":"ciysookw7000yc0u04s9gexxg","_id":"ciysookw90014c0u05478khk3"},{"post_id":"ciysookvv000hc0u05xtkk0ev","category_id":"ciysookw4000sc0u0uttdurns","_id":"ciysookwc0018c0u0qsas97a5"},{"post_id":"ciysookvy000jc0u03uoj76s1","category_id":"ciysookw4000sc0u0uttdurns","_id":"ciysookwc001ac0u0ammu9t9v"}],"PostTag":[{"post_id":"ciysookup0000c0u00ygkckbx","tag_id":"ciysookva0005c0u04uqv0qtn","_id":"ciysookw4000pc0u0j32ngvb6"},{"post_id":"ciysookup0000c0u00ygkckbx","tag_id":"ciysookvn000bc0u0fbln06cm","_id":"ciysookw4000rc0u0xh8o9cvt"},{"post_id":"ciysookup0000c0u00ygkckbx","tag_id":"ciysookvu000gc0u015p809km","_id":"ciysookw5000uc0u0lp2hb50q"},{"post_id":"ciysookup0000c0u00ygkckbx","tag_id":"ciysookw0000lc0u0qqes4bfv","_id":"ciysookw6000wc0u024202c7e"},{"post_id":"ciysookux0002c0u01z4ijvxl","tag_id":"ciysookva0005c0u04uqv0qtn","_id":"ciysookw80012c0u0eunp3znn"},{"post_id":"ciysookux0002c0u01z4ijvxl","tag_id":"ciysookvn000bc0u0fbln06cm","_id":"ciysookw90013c0u0k0fci6os"},{"post_id":"ciysookux0002c0u01z4ijvxl","tag_id":"ciysookw6000xc0u0gk2yka3k","_id":"ciysookwb0017c0u0yl9d6nk3"},{"post_id":"ciysookvc0006c0u03ead1pul","tag_id":"ciysookw70010c0u0nlmez25e","_id":"ciysookwe001dc0u0g771avv0"},{"post_id":"ciysookvc0006c0u03ead1pul","tag_id":"ciysookvn000bc0u0fbln06cm","_id":"ciysookwe001ec0u0johznv59"},{"post_id":"ciysookvc0006c0u03ead1pul","tag_id":"ciysookwc0019c0u0y3so716d","_id":"ciysookwf001gc0u0gasplpbx"},{"post_id":"ciysookvc0006c0u03ead1pul","tag_id":"ciysookwc001bc0u0r3pr0s3l","_id":"ciysookwf001hc0u0yfi75qr2"},{"post_id":"ciysookvg0008c0u04zl1kxq6","tag_id":"ciysookvn000bc0u0fbln06cm","_id":"ciysookwg001kc0u0pkuesdg2"},{"post_id":"ciysookvg0008c0u04zl1kxq6","tag_id":"ciysookwc0019c0u0y3so716d","_id":"ciysookwg001lc0u0hh2cnlu7"},{"post_id":"ciysookvg0008c0u04zl1kxq6","tag_id":"ciysookwc001bc0u0r3pr0s3l","_id":"ciysookwh001nc0u0em4ge5a1"},{"post_id":"ciysookvl0009c0u0t3a3r1rp","tag_id":"ciysookwg001jc0u0t1ns1pzv","_id":"ciysookwi001qc0u0ffmu2k20"},{"post_id":"ciysookvl0009c0u0t3a3r1rp","tag_id":"ciysookwg001mc0u0ytcmr6t3","_id":"ciysookwi001rc0u0s6hsgvcs"},{"post_id":"ciysookvl0009c0u0t3a3r1rp","tag_id":"ciysookwh001oc0u068fpedeh","_id":"ciysookwi001tc0u0zvby2i1b"},{"post_id":"ciysookvp000cc0u0fgeunws7","tag_id":"ciysookwh001pc0u0wn1zi0qm","_id":"ciysookwj001wc0u0j9fv0fgx"},{"post_id":"ciysookvp000cc0u0fgeunws7","tag_id":"ciysookwi001sc0u0krp5zl43","_id":"ciysookwk001xc0u0ad4am6my"},{"post_id":"ciysookvp000cc0u0fgeunws7","tag_id":"ciysookwi001uc0u0lo7k63gu","_id":"ciysookwk001zc0u0qihcvzxc"},{"post_id":"ciysookvs000ec0u0y60l2cyk","tag_id":"ciysookwj001vc0u0eht898f1","_id":"ciysookwn0023c0u0vomge05l"},{"post_id":"ciysookvs000ec0u0y60l2cyk","tag_id":"ciysookwk001yc0u0my8eiiya","_id":"ciysookwn0024c0u01qza2qua"},{"post_id":"ciysookvs000ec0u0y60l2cyk","tag_id":"ciysookwk0020c0u0ph59kme5","_id":"ciysookwo0026c0u07uq29hjf"},{"post_id":"ciysookvs000ec0u0y60l2cyk","tag_id":"ciysookwl0021c0u0bmv7e007","_id":"ciysookwo0027c0u0b9ck4hbo"},{"post_id":"ciysookvv000hc0u05xtkk0ev","tag_id":"ciysookwh001pc0u0wn1zi0qm","_id":"ciysookwq002bc0u0rbnbm5o2"},{"post_id":"ciysookvv000hc0u05xtkk0ev","tag_id":"ciysookwn0025c0u01jp4qwte","_id":"ciysookwq002cc0u0ab87n9k4"},{"post_id":"ciysookvv000hc0u05xtkk0ev","tag_id":"ciysookwo0028c0u07g9izd3z","_id":"ciysookwr002ec0u0bmtkgu3h"},{"post_id":"ciysookvv000hc0u05xtkk0ev","tag_id":"ciysookwi001uc0u0lo7k63gu","_id":"ciysookwr002fc0u04953mk86"},{"post_id":"ciysookvy000jc0u03uoj76s1","tag_id":"ciysookwh001pc0u0wn1zi0qm","_id":"ciysookws002ic0u01d5qoq9b"},{"post_id":"ciysookvy000jc0u03uoj76s1","tag_id":"ciysookwn0025c0u01jp4qwte","_id":"ciysookws002jc0u06im2w11z"},{"post_id":"ciysookvy000jc0u03uoj76s1","tag_id":"ciysookwo0028c0u07g9izd3z","_id":"ciysookws002kc0u08igzpt42"},{"post_id":"ciysookvy000jc0u03uoj76s1","tag_id":"ciysookwi001uc0u0lo7k63gu","_id":"ciysookwt002lc0u0u6qan7v0"}],"Tag":[{"name":"社群活動","_id":"ciysookva0005c0u04uqv0qtn"},{"name":"JavaScript","_id":"ciysookvn000bc0u0fbln06cm"},{"name":"Angular.js","_id":"ciysookvu000gc0u015p809km"},{"name":"React.js","_id":"ciysookw0000lc0u0qqes4bfv"},{"name":"ES6","_id":"ciysookw6000xc0u0gk2yka3k"},{"name":"Node.js","_id":"ciysookw70010c0u0nlmez25e"},{"name":"學習筆記","_id":"ciysookwc0019c0u0y3so716d"},{"name":"教學","_id":"ciysookwc001bc0u0r3pr0s3l"},{"name":"Android","_id":"ciysookwg001jc0u0t1ns1pzv"},{"name":"Java","_id":"ciysookwg001mc0u0ytcmr6t3"},{"name":"學生時期作品","_id":"ciysookwh001oc0u068fpedeh"},{"name":"讀書心得","_id":"ciysookwh001pc0u0wn1zi0qm"},{"name":"程式設計","_id":"ciysookwi001sc0u0krp5zl43"},{"name":"重點筆記","_id":"ciysookwi001uc0u0lo7k63gu"},{"name":"吃吃喝喝","_id":"ciysookwj001vc0u0eht898f1"},{"name":"美食介紹","_id":"ciysookwk001yc0u0my8eiiya"},{"name":"炸物","_id":"ciysookwk0020c0u0ph59kme5"},{"name":"夜市","_id":"ciysookwl0021c0u0bmv7e007"},{"name":"心理學","_id":"ciysookwn0025c0u01jp4qwte"},{"name":"自我成長","_id":"ciysookwo0028c0u07g9izd3z"}]}}